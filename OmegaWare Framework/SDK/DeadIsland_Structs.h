#pragma once

/**
 * Name: Dead_Island_2
 * Version: Cracked
 */

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
	// --------------------------------------------------
	// # Enums
	// --------------------------------------------------
	/**
	 * Enum DeadIsland.ECombatState
	 */
	enum class ECombatState : uint8_t
	{
		Calm   = 0,
		Alert  = 1,
		Search = 2,
		Combat = 3,
		MAX    = 4
	};

	/**
	 * Enum DeadIsland.ECosmeticCombatState
	 */
	enum class ECosmeticCombatState : uint8_t
	{
		Calm   = 0,
		Alert  = 1,
		Combat = 2,
		MAX    = 3
	};

	/**
	 * Enum DeadIsland.ETransmittableStatus
	 */
	enum class ETransmittableStatus : uint8_t
	{
		None        = 0,
		Electrified = 1,
		Burning     = 2,
		Count       = 3,
		MAX         = 4
	};

	/**
	 * Enum DeadIsland.EGoalEvent
	 */
	enum class EGoalEvent : uint8_t
	{
		Prioritised      = 0,
		Deprioritised    = 1,
		AchievementBegin = 2,
		AchievementEnd   = 3,
		MAX              = 4
	};

	/**
	 * Enum DeadIsland.EReloadHandlerState
	 */
	enum class EReloadHandlerState : uint8_t
	{
		Idle               = 0,
		StillReloading     = 1,
		CompletedReloading = 2,
		FailedToReload     = 3,
		MAX                = 4
	};

	/**
	 * Enum DeadIsland.ECharacterAutoAlignResult
	 */
	enum class ECharacterAutoAlignResult : uint8_t
	{
		Success     = 0,
		Cancelled   = 1,
		TimeOut     = 2,
		MaxDistance = 3,
		Blocked     = 4,
		Error       = 5,
		MAX         = 6
	};

	/**
	 * Enum DeadIsland.EAccumulatingEffectScalingPolicy
	 */
	enum class EAccumulatingEffectScalingPolicy : uint8_t
	{
		None                         = 0,
		ScaledBasedOnInstigatorLevel = 1,
		ScaledBasedOnWeaponLevel     = 2,
		MAX                          = 3
	};

	/**
	 * Enum DeadIsland.EDamageLevelScalingPolicy
	 */
	enum class EDamageLevelScalingPolicy : uint8_t
	{
		None                                         = 0,
		ScaledToInstigatorLevel                      = 1,
		ScaledToInstigatorLevelFallbackToVictimLevel = 2,
		ScaledToInstigatorLevelFallbackToHostLevel   = 3,
		ScaledToVictimLevel                          = 4,
		ScaledToVictimLevelFallbackToHostLevel       = 5,
		ScaledToHostLevel                            = 6,
		ScaledToWeaponLevelFallbackToVictimLevel     = 7,
		MAX                                          = 8
	};

	/**
	 * Enum DeadIsland.EPhysicalizedWorldAffectedActorsPolicy
	 */
	enum class EPhysicalizedWorldAffectedActorsPolicy : uint8_t
	{
		CuratedAndDynamic = 0,
		CuratedOnly       = 1,
		DynamicOnly       = 2,
		Count             = 3,
		MAX               = 4
	};

	/**
	 * Enum DeadIsland.EAccumulatingEffectType
	 */
	enum class EAccumulatingEffectType : uint8_t
	{
		Burning      = 0,
		Electrocuted = 1,
		Corroded     = 2,
		Bleed        = 3,
		Weakened     = 4,
		Disoriented  = 5,
		Frozen       = 6,
		MAX          = 7
	};

	/**
	 * Enum DeadIsland.EImpactGameplayCategory
	 */
	enum class EImpactGameplayCategory : uint8_t
	{
		None           = 0,
		Melee          = 1,
		Ranged         = 2,
		Environmental  = 3,
		Thrown         = 4,
		Character      = 5,
		Explosion      = 6,
		DamageOverTime = 7,
		Count          = 8,
		MAX            = 9
	};

	/**
	 * Enum DeadIsland.EImpactRequestNetworkPolicy
	 */
	enum class EImpactRequestNetworkPolicy : uint8_t
	{
		LocalOnly           = 0,
		All                 = 1,
		AllExceptInstigator = 2,
		AllExceptVictim     = 3,
		MAX                 = 4
	};

	/**
	 * Enum DeadIsland.EImpactNotificationType
	 */
	enum class EImpactNotificationType : uint8_t
	{
		IncomingImpact = 0,
		OutgoingImpact = 1,
		MAX            = 2
	};

	/**
	 * Enum DeadIsland.EBodyPartGameplayState
	 */
	enum class EBodyPartGameplayState : uint8_t
	{
		Standard    = 0,
		Dead        = 1,
		Broken      = 2,
		Dismembered = 3,
		MAX         = 4
	};

	/**
	 * Enum DeadIsland.EClassAbilityState
	 */
	enum class EClassAbilityState : uint8_t
	{
		Used       = 0,
		Successful = 1,
		Perfect    = 2,
		MAX        = 3
	};

	/**
	 * Enum DeadIsland.EPlayerMinigameResult
	 */
	enum class EPlayerMinigameResult : uint8_t
	{
		None      = 0,
		Passed    = 1,
		Failed    = 2,
		Cancelled = 3,
		MAX       = 4
	};

	/**
	 * Enum DeadIsland.EPlayerMinigameStageResult
	 */
	enum class EPlayerMinigameStageResult : uint8_t
	{
		Passed = 0,
		Failed = 1,
		MAX    = 2
	};

	/**
	 * Enum DeadIsland.EHUDFuryUseResult
	 */
	enum class EHUDFuryUseResult : uint8_t
	{
		Success_ForcedFury = 0,
		Success_FullFury   = 1,
		Failure            = 2,
		MAX                = 3
	};

	/**
	 * Enum DeadIsland.EMeleeWeaponDurability
	 */
	enum class EMeleeWeaponDurability : uint8_t
	{
		Full         = 0,
		Good         = 1,
		Used         = 2,
		Poor         = 3,
		AlmostBroken = 4,
		Broken       = 5,
		MAX          = 6
	};

	/**
	 * Enum DeadIsland.EUIItemBackgroundStyle
	 */
	enum class EUIItemBackgroundStyle : uint8_t
	{
		Weapon = 0,
		Other  = 1,
		MAX    = 2
	};

	/**
	 * Enum DeadIsland.EItemRepresentationType
	 */
	enum class EItemRepresentationType : uint8_t
	{
		None      = 0,
		Archetype = 1,
		Actor     = 2,
		MAX       = 3
	};

	/**
	 * Enum DeadIsland.EHUDHealthPackUseResult
	 */
	enum class EHUDHealthPackUseResult : uint8_t
	{
		Success            = 0,
		Failure_NoPacks    = 1,
		Failure_FullHealth = 2,
		MAX                = 3
	};

	/**
	 * Enum DeadIsland.EHealthRechargeCancelReason
	 */
	enum class EHealthRechargeCancelReason : uint8_t
	{
		None                 = 0,
		FullHealth           = 1,
		TakeDamage           = 2,
		HealthRechargeLocked = 3,
		MAX                  = 4
	};

	/**
	 * Enum DeadIsland.EFastTravelInstanceType
	 */
	enum class EFastTravelInstanceType : uint8_t
	{
		NotSet      = 0,
		Activation  = 1,
		Destination = 2,
		MAX         = 3
	};

	/**
	 * Enum DeadIsland.EPlayerMinigamePhaseResult
	 */
	enum class EPlayerMinigamePhaseResult : uint8_t
	{
		Passed = 0,
		Failed = 1,
		MAX    = 2
	};

	/**
	 * Enum DeadIsland.EInteractionMode
	 */
	enum class EInteractionMode : uint8_t
	{
		Invalid  = 0,
		Use      = 1,
		Overload = 2,
		Count    = 3,
		MAX      = 4
	};

	/**
	 * Enum DeadIsland.EInteractInterruptReason
	 */
	enum class EInteractInterruptReason : uint8_t
	{
		UserReleased  = 0,
		UserDamaged   = 1,
		OutOfRange    = 2,
		BecameInvalid = 3,
		Count         = 4,
		MAX           = 5
	};

	/**
	 * Enum DeadIsland.EDockRequestSource
	 */
	enum class EDockRequestSource : uint8_t
	{
		None        = 0,
		Setup       = 1,
		Progression = 2,
		Persistence = 3,
		User        = 4,
		Replication = 5,
		Destroyed   = 6,
		MAX         = 7
	};

	/**
	 * Enum DeadIsland.EDockStateChangeSource
	 */
	enum class EDockStateChangeSource : uint8_t
	{
		None        = 0,
		Setup       = 1,
		Progression = 2,
		Persistence = 3,
		User        = 4,
		Replication = 5,
		MAX         = 6
	};

	/**
	 * Enum DeadIsland.EGatherState
	 */
	enum class EGatherState : uint8_t
	{
		None        = 0,
		NotGathered = 1,
		Gathered    = 2,
		MAX         = 3
	};

	/**
	 * Enum DeadIsland.EQuestUIState
	 */
	enum class EQuestUIState : uint8_t
	{
		None      = 0,
		Available = 1,
		Started   = 2,
		Complete  = 3,
		Failed    = 4,
		Count     = 5,
		MAX       = 6
	};

	/**
	 * Enum DeadIsland.EUIAudioTriggerEvent
	 */
	enum class EUIAudioTriggerEvent : uint8_t
	{
		INVALID                                        = 0,
		MenuConfirm                                    = 1,
		MenuMovement                                   = 2,
		MenuBack                                       = 3,
		MenuConfirmPositive                            = 4,
		MenuConfirmNegative                            = 5,
		MenuSwitchTab                                  = 6,
		MenuOpen                                       = 7,
		MenuClose                                      = 8,
		MenuPlayerOpen                                 = 9,
		MenuPlayerClose                                = 10,
		MenuPause                                      = 11,
		MenuPurchase                                   = 12,
		MenuBigEvent                                   = 13,
		MenuCraftLoop                                  = 14,
		MenuCraftEndSuccess                            = 15,
		MenuCraftEndFail                               = 16,
		MenuScrapLoop                                  = 17,
		MenuScrapEndSuccess                            = 18,
		MenuScrapEndFail                               = 19,
		MenuRepairLoop                                 = 20,
		MenuRepairEndSuccess                           = 21,
		MenuRepairEndFail                              = 22,
		MenuLevelMatchLoop                             = 23,
		MenuLevelMatchEndSuccess                       = 24,
		MenuLevelMatchEndFail                          = 25,
		MenuSkillTreeUpgrade                           = 26,
		MenuSkillTreeRespec                            = 27,
		MenuSkillTreeUpgradeFail                       = 28,
		MenuSkillTreeEnter                             = 29,
		MenuSkillTreeEnterCardSelectionView            = 30,
		MenuSkillTreeLeaveCardSelectionView            = 31,
		MenuSkillTreeEnterAutophageMeter               = 32,
		MenuSkillTreeLeaveAutophageMeter               = 33,
		MenuSkillTreeNewSlotUnlocked                   = 34,
		MenuSkillTreeNewCardsInSlotUnlocked            = 35,
		MenuSkillTreeNewSlotUpdate                     = 36,
		MenuSkillTreeNewCard                           = 37,
		MenuSkillTreeAssignCard                        = 38,
		MenuSkillTreeUnAssignCard                      = 39,
		MenuCharSelectLoop                             = 40,
		MenuCharSelectEndLoop                          = 41,
		MenuCharSelectMoveCharacter                    = 42,
		MenuCharSelectConfirmCharacter                 = 43,
		MenuMapHighlight                               = 44,
		MenuMapSnapTo                                  = 45,
		MenuInventoryWeaponDrop                        = 46,
		MenuInventoryDetails                           = 47,
		MenuInventoryStartSwap                         = 48,
		MenuInventoryDoSwap                            = 49,
		MenuInventoryDoSwapWithEmpty                   = 50,
		MenuDetailsModelViewBegin                      = 51,
		MenuDetailsModelViewEnd                        = 52,
		MenuDetailsEnterStatBreakdown                  = 53,
		MenuDetailsLeaveStatBreakdown                  = 54,
		MenuVendorPopUpValueChange                     = 55,
		MenuQuestTrackQuest                            = 56,
		MenuContextualNotificationTutorial             = 57,
		MenuPopUpOpened                                = 58,
		MenuPopUpClosed                                = 59,
		MenuPopUpConfirmed                             = 60,
		MenuPopUpCancel                                = 61,
		MenuOptionSwitchToggle                         = 62,
		MenuOptionSliderChange                         = 63,
		MenuSplashScreenConfirm                        = 64,
		MenuContinueGamePlay                           = 65,
		HUDCentralNotificationThrowable                = 66,
		HUDCentralNotificationAbilitySkill             = 67,
		HUDFailScreenIntro                             = 68,
		HUDLoadingSceneEnterGame                       = 69,
		HUDIncreaseXP                                  = 70,
		HUDLevelUp                                     = 71,
		HUDObjectiveNew                                = 72,
		HUDMissionStarted                              = 73,
		HUDMissionCompleted                            = 74,
		HUDMissionFailed                               = 75,
		HUDMissionObjective                            = 76,
		HUDMissionStartAbandoning                      = 77,
		HUDMissionStopAbandoning                       = 78,
		HUDFuryOneShotReady                            = 79,
		HUDFuryFullReady                               = 80,
		HUDFuryFullCancel                              = 81,
		HUDHealthMedkitNoneLeft                        = 82,
		HUDHealthMedkitFullHealth                      = 83,
		HUDOpenWeaponWheel                             = 84,
		HUDCloseWeaponWheel                            = 85,
		HUDSpinWeaponWheel                             = 86,
		HUDSelectWeaponWheel                           = 87,
		HUDWheelDropWeapon                             = 88,
		HUDOpenEmoteWheel                              = 89,
		HUDCloseEmoteWheel                             = 90,
		HUDSpinEmoteWheel                              = 91,
		HUDSelectEmoteWheel                            = 92,
		HUDQuestTrackQuest                             = 93,
		HUDThrowablesCooldownEnd                       = 94,
		HUDContextualNotificationJournal               = 95,
		HUDContextualNotificationBlueprint             = 96,
		HUDContextualNotificationSkillCard             = 97,
		HUDContextualNotificationTutorial              = 98,
		HUDContextualNotificationCodex                 = 99,
		HUDContextualNotificationTrackedBlueprint      = 100,
		HUDContextualNotificationChallengeUpdate       = 101,
		HUDContextualNotificationChallengeTierComplete = 102,
		HUDContextualNotificationChallengeComplete     = 103,
		Count                                          = 104,
		MAX                                            = 105
	};

	/**
	 * Enum DeadIsland.EObjectiveUIState
	 */
	enum class EObjectiveUIState : uint8_t
	{
		None     = 0,
		Started  = 1,
		Complete = 2,
		Failed   = 3,
		Stopped  = 4,
		Waiting  = 5,
		MAX      = 6
	};

	/**
	 * Enum DeadIsland.EShotHandlerState
	 */
	enum class EShotHandlerState : uint8_t
	{
		Idle            = 0,
		PreparingToFire = 1,
		Firing          = 2,
		OutOfAmmo       = 3,
		CompletedFiring = 4,
		Error           = 5,
		MAX             = 6
	};

	/**
	 * Enum DeadIsland.EAimDownSightsHandlerState
	 */
	enum class EAimDownSightsHandlerState : uint8_t
	{
		Inactive   = 0,
		ZoomingIn  = 1,
		Zoomed     = 2,
		ZoomingOut = 3,
		MAX        = 4
	};

	/**
	 * Enum DeadIsland.EMissionOutcome
	 */
	enum class EMissionOutcome : uint8_t
	{
		MissionSuccess = 0,
		MissionFailure = 1,
		SessionFailure = 2,
		SessionVictory = 3,
		Pending        = 4,
		MAX            = 5
	};

	/**
	 * Enum DeadIsland.EObjectiveOutcome
	 */
	enum class EObjectiveOutcome : uint8_t
	{
		ObjectiveSuccess = 0,
		ObjectiveFailure = 1,
		MAX              = 2
	};

	/**
	 * Enum DeadIsland.EScenarioLightTime
	 */
	enum class EScenarioLightTime : uint8_t
	{
		Day     = 0,
		Night   = 1,
		Unknown = 2,
		MAX     = 3
	};

	/**
	 * Enum DeadIsland.ESkillTreePurchaseResult
	 */
	enum class ESkillTreePurchaseResult : uint8_t
	{
		Successful                     = 0,
		TierRequirementsNotMet         = 1,
		RequiresHigherProgressionLevel = 2,
		CannotAfford                   = 3,
		AlreadyHave                    = 4,
		UnhandledFail                  = 5,
		MAX                            = 6
	};

	/**
	 * Enum DeadIsland.ESkillTreeDeactivateResult
	 */
	enum class ESkillTreeDeactivateResult : uint8_t
	{
		Successful    = 0,
		DoNotHave     = 1,
		UnhandledFail = 2,
		MAX           = 3
	};

	/**
	 * Enum DeadIsland.ESkillAssignChangeReason
	 */
	enum class ESkillAssignChangeReason : uint8_t
	{
		Assigned   = 0,
		Unassigned = 1,
		MAX        = 2
	};

	/**
	 * Enum DeadIsland.EBlueprintTrackedState
	 */
	enum class EBlueprintTrackedState : uint8_t
	{
		None                = 0,
		RequiresIngredients = 1,
		NearestWorkbench    = 2,
		MAX                 = 3
	};

	/**
	 * Enum DeadIsland.EItemIconDurabilityState
	 */
	enum class EItemIconDurabilityState : uint8_t
	{
		Unitialised = 0,
		Good        = 1,
		Low         = 2,
		LastFewHits = 3,
		Broken      = 4,
		MAX         = 5
	};

	/**
	 * Enum DeadIsland.EAccumulatingEffectRecipient
	 */
	enum class EAccumulatingEffectRecipient : uint8_t
	{
		Player    = 0,
		DefaultAI = 1,
		Specials  = 2,
		MAX       = 3
	};

	/**
	 * Enum DeadIsland.EAccumulatingEffectState
	 */
	enum class EAccumulatingEffectState : uint8_t
	{
		Accumulating = 0,
		Active       = 1,
		Paused       = 2,
		Idle         = 3,
		MAX          = 4
	};

	/**
	 * Enum DeadIsland.EActionSequencerSubActionEarlyFinishResponse
	 */
	enum class EActionSequencerSubActionEarlyFinishResponse : uint8_t
	{
		EndMainAction        = 0,
		SkipToLastAction     = 1,
		ContinueToNextAction = 2,
		MAX                  = 3
	};

	/**
	 * Enum DeadIsland.EProjectileCreationParameterSource
	 */
	enum class EProjectileCreationParameterSource : uint8_t
	{
		Explicit           = 0,
		ParameterGenerator = 1,
		MAX                = 2
	};

	/**
	 * Enum DeadIsland.EAISpawnerMode
	 */
	enum class EAISpawnerMode : uint8_t
	{
		InFront  = 0,
		InRadius = 1,
		Anywhere = 2,
		Count    = 3,
		MAX      = 4
	};

	/**
	 * Enum DeadIsland.EAimCorrectionStartMethod
	 */
	enum class EAimCorrectionStartMethod : uint8_t
	{
		RequiresActionBegin = 0,
		StartOnBegin        = 1,
		MAX                 = 2
	};

	/**
	 * Enum DeadIsland.EAIMeleeSubAction
	 */
	enum class EAIMeleeSubAction : uint8_t
	{
		None            = 0,
		InvisibleWindUp = 1,
		VariableWindUp  = 2,
		FixedWindUp     = 3,
		Attack          = 4,
		MAX             = 5
	};

	/**
	 * Enum DeadIsland.ECurrentAmmoState
	 */
	enum class ECurrentAmmoState : uint8_t
	{
		AmmoFull              = 0,
		AmmoPartiallyDepleted = 1,
		AmmoEmpty             = 2,
		MAX                   = 3
	};

	/**
	 * Enum DeadIsland.EAmmoHandlerTransactionType
	 */
	enum class EAmmoHandlerTransactionType : uint8_t
	{
		QueryOnly          = 0,
		ProcessTransaction = 1,
		MAX                = 2
	};

	/**
	 * Enum DeadIsland.EAmmoHandlerConsumeResult
	 */
	enum class EAmmoHandlerConsumeResult : uint8_t
	{
		AmmoConsumeFailed_NotEnoughAmmo = 0,
		AmmoConsumeSuccess              = 1,
		AmmoConsumePartialSuccess       = 2,
		MAX                             = 3
	};

	/**
	 * Enum DeadIsland.EAmmoHandlerRefillResult
	 */
	enum class EAmmoHandlerRefillResult : uint8_t
	{
		AmmoRefillFailed_NotEnoughAmmo     = 0,
		AmmoRefillFailed_AlreadyAtCapacity = 1,
		AmmoRefillSuccess                  = 2,
		AmmoRefillPartialSuccess           = 3,
		MAX                                = 4
	};

	/**
	 * Enum DeadIsland.EValidationRequirement
	 */
	enum class EValidationRequirement : uint8_t
	{
		NoRequirement = 0,
		MustBeTrue    = 1,
		MustBeFalse   = 2,
		MAX           = 3
	};

	/**
	 * Enum DeadIsland.ENavigationState
	 */
	enum class ENavigationState : uint8_t
	{
		Idle              = 0,
		FindingPath       = 1,
		FollowingPath     = 2,
		PathFindingFailed = 3,
		MAX               = 4
	};

	/**
	 * Enum DeadIsland.EStrafeMode
	 */
	enum class EStrafeMode : uint8_t
	{
		None   = 0,
		Strafe = 1,
		Aim    = 2,
		Count  = 3,
		MAX    = 4
	};

	/**
	 * Enum DeadIsland.EStuckReason
	 */
	enum class EStuckReason : uint8_t
	{
		None       = 0,
		OffNavMesh = 1,
		Movement   = 2,
		MAX        = 3
	};

	/**
	 * Enum DeadIsland.ELocomotionVolatileState
	 */
	enum class ELocomotionVolatileState : uint8_t
	{
		None               = 0,
		MaintainNavigation = 1,
		ClearNavigation    = 2,
		MAX                = 3
	};

	/**
	 * Enum DeadIsland.ELookAtDebugMode
	 */
	enum class ELookAtDebugMode : uint8_t
	{
		RadiusLookAt = 0,
		InputLookAt  = 1,
		FollowPawn   = 2,
		Count        = 3,
		MAX          = 4
	};

	/**
	 * Enum DeadIsland.ECosmeticEffectAnimNotifyObjectContext
	 */
	enum class ECosmeticEffectAnimNotifyObjectContext : uint8_t
	{
		None                         = 0,
		Character_ObjectSetComponent = 1,
		Weapon_ObjectSetComponent    = 2,
		MAX                          = 3
	};

	/**
	 * Enum DeadIsland.ETriggerDialogueNotifyTriggerType
	 */
	enum class ETriggerDialogueNotifyTriggerType : uint8_t
	{
		Self   = 0,
		Nearby = 1,
		MAX    = 2
	};

	/**
	 * Enum DeadIsland.EDistanceAttackCorrectionMode
	 */
	enum class EDistanceAttackCorrectionMode : uint8_t
	{
		Enabled_AddRootMotion = 0,
		Enabled               = 1,
		Disabled              = 2,
		MAX                   = 3
	};

	/**
	 * Enum DeadIsland.EMontagePlayEvent
	 */
	enum class EMontagePlayEvent : uint8_t
	{
		Action_OnBegin = 0,
		UserDefined    = 1,
		MAX            = 2
	};

	/**
	 * Enum DeadIsland.EMontageEndEvent
	 */
	enum class EMontageEndEvent : uint8_t
	{
		MontageEnd         = 0,
		MontageBlendingOut = 1,
		MAX                = 2
	};

	/**
	 * Enum DeadIsland.EInAirState
	 */
	enum class EInAirState : uint8_t
	{
		InAirEnter   = 0,
		InAirLoop    = 1,
		InAirLanding = 2,
		MAX          = 3
	};

	/**
	 * Enum DeadIsland.ESlideState
	 */
	enum class ESlideState : uint8_t
	{
		SlideEnter = 0,
		SlideLoop  = 1,
		SlideExit  = 2,
		MAX        = 3
	};

	/**
	 * Enum DeadIsland.EApplyStatusEffectActorType
	 */
	enum class EApplyStatusEffectActorType : uint8_t
	{
		Attacker = 0,
		Victim   = 1,
		MAX      = 2
	};

	/**
	 * Enum DeadIsland.EMultipleOverlapBehaviour
	 */
	enum class EMultipleOverlapBehaviour : uint8_t
	{
		OnlyApplyFirstInstanceOfType = 0,
		ApplyAlways                  = 1,
		MAX                          = 2
	};

	/**
	 * Enum DeadIsland.ESwayLayer
	 */
	enum class ESwayLayer : uint8_t
	{
		ForwardBack   = 0,
		LeftRight     = 1,
		UpDown        = 2,
		NumSwayLayers = 3,
		MAX           = 4
	};

	/**
	 * Enum DeadIsland.ELevelScalingMethod
	 */
	enum class ELevelScalingMethod : uint8_t
	{
		None      = 0,
		Linear    = 1,
		Ranged    = 2,
		Increment = 3,
		Curve     = 4,
		Explicit  = 5,
		Count     = 6,
		MAX       = 7
	};

	/**
	 * Enum DeadIsland.EDefaultValueOverrideType
	 */
	enum class EDefaultValueOverrideType : uint8_t
	{
		Absolute      = 0,
		RandomInRange = 1,
		Count         = 2,
		MAX           = 3
	};

	/**
	 * Enum DeadIsland.EAttributeModifierApplicationRule
	 */
	enum class EAttributeModifierApplicationRule : uint8_t
	{
		MultiplyBaseValue        = 0,
		SumWithBaseValue         = 1,
		MultiplyOneOverBaseValue = 2,
		Count                    = 3,
		MAX                      = 4
	};

	/**
	 * Enum DeadIsland.EAttributeValueSource
	 */
	enum class EAttributeValueSource : uint8_t
	{
		Explicit  = 0,
		Attribute = 1,
		MAX       = 2
	};

	/**
	 * Enum DeadIsland.EAugmentState
	 */
	enum class EAugmentState : uint8_t
	{
		ReadyForUse = 0,
		BeingPrimed = 1,
		InUse       = 2,
		CoolingDown = 3,
		MAX         = 4
	};

	/**
	 * Enum DeadIsland.EDebugObjectClassFlags
	 */
	enum class EDebugObjectClassFlags : uint8_t
	{
		ShowDebugStrings = 0,
		ShowFarCorners   = 1,
		ShowNearCorners  = 2,
		ShowFarCentre    = 3,
		ShowWeaponRadius = 4,
		MAX              = 5
	};

	/**
	 * Enum DeadIsland.EAutoAimAdjustType
	 */
	enum class EAutoAimAdjustType : uint8_t
	{
		Absolute = 0,
		Scalar   = 1,
		MAX      = 2
	};

	/**
	 * Enum DeadIsland.EDropRequestState
	 */
	enum class EDropRequestState : uint8_t
	{
		None                    = 0,
		CalculatingDropLocation = 1,
		DroppingAtLocation      = 2,
		DropCancelled           = 3,
		Complete                = 4,
		MAX                     = 5
	};

	/**
	 * Enum DeadIsland.ERequestState
	 */
	enum class ERequestState : uint8_t
	{
		None         = 0,
		Initializing = 1,
		Processing   = 2,
		Complete     = 3,
		Cancelled    = 4,
		MAX          = 5
	};

	/**
	 * Enum DeadIsland.EBatchConfigUsage
	 */
	enum class EBatchConfigUsage : uint8_t
	{
		Ambient   = 0,
		Objective = 1,
		MAX       = 2
	};

	/**
	 * Enum DeadIsland.EPassFailResult
	 */
	enum class EPassFailResult : uint8_t
	{
		Pass = 0,
		Fail = 1,
		MAX  = 2
	};

	/**
	 * Enum DeadIsland.EDamagePropagation
	 */
	enum class EDamagePropagation : uint8_t
	{
		PropagateNotSet         = 0,
		PropagateNever          = 1,
		PropagateAfterPartDeath = 2,
		PropagateAlways         = 3,
		PropagateInstead        = 4,
		MAX                     = 5
	};

	/**
	 * Enum DeadIsland.EFilterRule
	 */
	enum class EFilterRule : uint8_t
	{
		MatchAny = 0,
		MatchAll = 1,
		MAX      = 2
	};

	/**
	 * Enum DeadIsland.EBoundingBoxGenerationMethod
	 */
	enum class EBoundingBoxGenerationMethod : uint8_t
	{
		AllCollidingComponents   = 0,
		PreferCapsule            = 1,
		PreferPrimitiveComponent = 2,
		MAX                      = 3
	};

	/**
	 * Enum DeadIsland.EBreathingState
	 */
	enum class EBreathingState : uint8_t
	{
		BreathingIn                = 0,
		InterruptedBreathingIn     = 1,
		HoldingBreathIn            = 2,
		BreathingOut               = 3,
		VocalBreathingOut          = 4,
		HoldingBreathOut           = 5,
		ExternalDialoguePlayingOut = 6,
		Dead                       = 7,
		MAX                        = 8
	};

	/**
	 * Enum DeadIsland.EMentalState
	 */
	enum class EMentalState : uint8_t
	{
		Calm    = 0,
		Alerted = 1,
		MAX     = 2
	};

	/**
	 * Enum DeadIsland.EVocalPlayFlags
	 */
	enum class EVocalPlayFlags : uint8_t
	{
		DyingVocal                                            = 0,
		DontInterruptOtherVocal                               = 1,
		AllowThisDialogueTriggerToBeInterruptedBySamePriority = 2,
		MAX                                                   = 3
	};

	/**
	 * Enum DeadIsland.EVocalPlayType
	 */
	enum class EVocalPlayType : uint8_t
	{
		Uninitialized                = 0,
		InterruptPlayImmediately     = 1,
		InterruptQuickInhaleThenPlay = 2,
		WaitAndPlayOnNextExhale      = 3,
		NumberOfTypes                = 4,
		MAX                          = 5
	};

	/**
	 * Enum DeadIsland.EBreathingEvent
	 */
	enum class EBreathingEvent : uint8_t
	{
		LightExert     = 0,
		Exert          = 1,
		HeavyExert     = 2,
		Vocal          = 3,
		Resurrect      = 4,
		NumberOfEvents = 5,
		MAX            = 6
	};

	/**
	 * Enum DeadIsland.EOffsetCheckPredicate
	 */
	enum class EOffsetCheckPredicate : uint8_t
	{
		AtLeast   = 0,
		AtMost    = 1,
		Same      = 2,
		Different = 3,
		MAX       = 4
	};

	/**
	 * Enum DeadIsland.EOffsetCheckSpace
	 */
	enum class EOffsetCheckSpace : uint8_t
	{
		OriginLocal = 0,
		TargetLocal = 1,
		World       = 2,
		MAX         = 3
	};

	/**
	 * Enum DeadIsland.EAIDodgeDirectionRelativeToDefender
	 */
	enum class EAIDodgeDirectionRelativeToDefender : uint8_t
	{
		None     = 0,
		Forward  = 1,
		Backward = 2,
		Left     = 3,
		Right    = 4,
		MAX      = 5
	};

	/**
	 * Enum DeadIsland.EAIDodgeDirectionRelativeToAggressor
	 */
	enum class EAIDodgeDirectionRelativeToAggressor : uint8_t
	{
		None  = 0,
		Away  = 1,
		Left  = 2,
		Right = 3,
		MAX   = 4
	};

	/**
	 * Enum DeadIsland.EValueType
	 */
	enum class EValueType : uint8_t
	{
		Absolute           = 0,
		Relative           = 1,
		RelativePercentage = 2,
		MAX                = 3
	};

	/**
	 * Enum DeadIsland.EModifierType
	 */
	enum class EModifierType : uint8_t
	{
		FieldOfView    = 0,
		CameraAperture = 1,
		FocusDistance  = 2,
		MAX            = 3
	};

	/**
	 * Enum DeadIsland.ECampaignOpenSetting
	 */
	enum class ECampaignOpenSetting : uint8_t
	{
		Always             = 0,
		NotStartedCampaign = 1,
		HasStartedCampaign = 2,
		MAX                = 3
	};

	/**
	 * Enum DeadIsland.ECampaignGameType
	 */
	enum class ECampaignGameType : uint8_t
	{
		Local = 0,
		Host  = 1,
		Find  = 2,
		MAX   = 3
	};

	/**
	 * Enum DeadIsland.EFacingCombatTargetType
	 */
	enum class EFacingCombatTargetType : uint8_t
	{
		AgentToCombatTarget = 0,
		CombatTargetToAgent = 1,
		MAX                 = 2
	};

	/**
	 * Enum DeadIsland.ECombatTargetRangeType
	 */
	enum class ECombatTargetRangeType : uint8_t
	{
		RangeToCombatTarget   = 0,
		RangeFromCombatTarget = 1,
		MAX                   = 2
	};

	/**
	 * Enum DeadIsland.ECarryableDetachType
	 */
	enum class ECarryableDetachType : uint8_t
	{
		Drop  = 0,
		Throw = 1,
		Dock  = 2,
		MAX   = 3
	};

	/**
	 * Enum DeadIsland.EChallengeRatingAgentAmount
	 */
	enum class EChallengeRatingAgentAmount : uint8_t
	{
		HighArchetypeCount = 0,
		Balanced           = 1,
		LowArchetypeCount  = 2,
		Max                = 3
	};

	/**
	 * Enum DeadIsland.EChallengeRatingSelection
	 */
	enum class EChallengeRatingSelection : uint8_t
	{
		None          = 0,
		AgentCount    = 1,
		AgentMinMax   = 2,
		EnumSelection = 3,
		Max           = 4
	};

	/**
	 * Enum DeadIsland.EFadeSkipControlFlags
	 */
	enum class EFadeSkipControlFlags : uint8_t
	{
		SkipIfOutOfView       = 0,
		SkipWhenWorldObscured = 1,
		SkipBasedOnRenderTime = 2,
		MAX                   = 3
	};

	/**
	 * Enum DeadIsland.EProfilePrivilege
	 */
	enum class EProfilePrivilege : uint8_t
	{
		None   = 0,
		Online = 1,
		Count  = 2,
		MAX    = 3
	};

	/**
	 * Enum DeadIsland.EAccountPrivilege
	 */
	enum class EAccountPrivilege : uint8_t
	{
		None         = 0,
		SkipPrologue = 1,
		NewGamePlus  = 2,
		Count        = 3,
		MAX          = 4
	};

	/**
	 * Enum DeadIsland.ECharacterGender
	 */
	enum class ECharacterGender : uint8_t
	{
		Male   = 0,
		Female = 1,
		Count  = 2,
		MAX    = 3
	};

	/**
	 * Enum DeadIsland.ECombatStimModifierType
	 */
	enum class ECombatStimModifierType : uint8_t
	{
		Distance                = 0,
		Threat                  = 1,
		ViewAngle               = 2,
		KnowledgeBaseExpression = 3,
		GoalProximity           = 4,
		MAX                     = 5
	};

	/**
	 * Enum DeadIsland.EAttackLocationType
	 */
	enum class EAttackLocationType : uint8_t
	{
		ClaimedLocation  = 0,
		AdjacentLocation = 1,
		MAX              = 2
	};

	/**
	 * Enum DeadIsland.EEngagementRing
	 */
	enum class EEngagementRing : uint8_t
	{
		InnerRing = 0,
		OuterRing = 1,
		MAX       = 2
	};

	/**
	 * Enum DeadIsland.ECompassIconHeightState
	 */
	enum class ECompassIconHeightState : uint8_t
	{
		SameLevel = 0,
		Above     = 1,
		Below     = 2,
		MAX       = 3
	};

	/**
	 * Enum DeadIsland.EConditionalIconDataType
	 */
	enum class EConditionalIconDataType : uint8_t
	{
		Static  = 0,
		Dynamic = 1,
		MAX     = 2
	};

	/**
	 * Enum DeadIsland.EContextualNotificationQueueCollisionBehaviors
	 */
	enum class EContextualNotificationQueueCollisionBehaviors : uint8_t
	{
		DontAddSelf = 0,
		AddSelf     = 1,
		ReplaceOld  = 2,
		MAX         = 3
	};

	/**
	 * Enum DeadIsland.EContributionState
	 */
	enum class EContributionState : uint8_t
	{
		Idle         = 0,
		Accumulating = 1,
		CoolingDown  = 2,
		Decaying     = 3,
		Complete     = 4,
		MAX          = 5
	};

	/**
	 * Enum DeadIsland.ECoopRequestResponse
	 */
	enum class ECoopRequestResponse : uint8_t
	{
		Received = 0,
		TimeOut  = 1,
		Refused  = 2,
		MAX      = 3
	};

	/**
	 * Enum DeadIsland.ECounterSequenceState
	 */
	enum class ECounterSequenceState : uint8_t
	{
		Null                       = 0,
		PreRequest                 = 1,
		Initialise                 = 2,
		Intro                      = 3,
		MinigameStart              = 4,
		MinigameLoop               = 5,
		MinigameStageComplete      = 6,
		MinigameStageResult_Passed = 7,
		MinigameEnd                = 8,
		Outro                      = 9,
		MAX                        = 10
	};

	/**
	 * Enum DeadIsland.ECounterReplicateState
	 */
	enum class ECounterReplicateState : uint8_t
	{
		Null             = 0,
		MinigameStageEnd = 1,
		MinigameEnd      = 2,
		Outro            = 3,
		DeferredOutro    = 4,
		MAX              = 5
	};

	/**
	 * Enum DeadIsland.ECounterDamageState
	 */
	enum class ECounterDamageState : uint8_t
	{
		Into          = 0,
		Looping       = 1,
		Outro_Success = 2,
		Outro_Failure = 3,
		MAX           = 4
	};

	/**
	 * Enum DeadIsland.ECounterOutcomeState
	 */
	enum class ECounterOutcomeState : uint8_t
	{
		Action = 0,
		Push   = 1,
		Kill   = 2,
		MAX    = 3
	};

	/**
	 * Enum DeadIsland.EGrappleSequenceState
	 */
	enum class EGrappleSequenceState : uint8_t
	{
		Null                       = 0,
		PreRequest                 = 1,
		Initialise                 = 2,
		Intro                      = 3,
		MinigameStart              = 4,
		MinigameLoop               = 5,
		MinigameStageComplete      = 6,
		MinigameStageResult_Failed = 7,
		MinigameEnd_Passed         = 8,
		MinigameEnd_Failed         = 9,
		PlayerJustKilled           = 10,
		InterruptOutro             = 11,
		RecoveryOutro              = 12,
		TerminateTask              = 13,
		MAX                        = 14
	};

	/**
	 * Enum DeadIsland.EGrappleReplicateState
	 */
	enum class EGrappleReplicateState : uint8_t
	{
		Null                 = 0,
		MinigameEnded_Failed = 1,
		MinigameEnded_Passed = 2,
		MinigameStageFailed  = 3,
		PlayerAttacked       = 4,
		MAX                  = 5
	};

	/**
	 * Enum DeadIsland.EPairedHeavyAttackState
	 */
	enum class EPairedHeavyAttackState : uint8_t
	{
		Null       = 0,
		PreRequest = 1,
		Initialise = 2,
		Attack     = 3,
		Outro      = 4,
		MAX        = 5
	};

	/**
	 * Enum DeadIsland.EForceParseCrawlerLocomotionAnimStatesH
	 */
	enum class EForceParseCrawlerLocomotionAnimStatesH : uint8_t
	{
		Nope = 0,
		MAX  = 1
	};

	/**
	 * Enum DeadIsland.EDamageNetworkApplicationPolicy
	 */
	enum class EDamageNetworkApplicationPolicy : uint8_t
	{
		ExecuteOnServer = 0,
		None            = 1,
		MAX             = 2
	};

	/**
	 * Enum DeadIsland.EDecompressionStrength
	 */
	enum class EDecompressionStrength : uint8_t
	{
		None    = 0,
		Gradual = 1,
		Full    = 2,
		MAX     = 3
	};

	/**
	 * Enum DeadIsland.EPoseBlendMode
	 */
	enum class EPoseBlendMode : uint8_t
	{
		LinearBlend        = 0,
		HermiteCubicSmooth = 1,
		MAX                = 2
	};

	/**
	 * Enum DeadIsland.ESpawnHidingState
	 */
	enum class ESpawnHidingState : uint8_t
	{
		Uninitialised = 0,
		Hidden        = 1,
		Visible       = 2,
		MAX           = 3
	};

	/**
	 * Enum DeadIsland.ECapsuleMovement
	 */
	enum class ECapsuleMovement : uint8_t
	{
		Free              = 0,
		BlendOverTime     = 1,
		OverrideTransform = 2,
		OverrideLocation  = 3,
		OverrideRotation  = 4,
		MAX               = 5
	};

	/**
	 * Enum DeadIsland.EUnequippableReasons
	 */
	enum class EUnequippableReasons : uint8_t
	{
		None              = 0,
		ItemIsBroken      = 1,
		UserLevelIsTooLow = 2,
		MAX               = 3
	};

	/**
	 * Enum DeadIsland.ETextDrawPoint
	 */
	enum class ETextDrawPoint : uint8_t
	{
		TopCentre    = 0,
		BottomCentre = 1,
		Left         = 2,
		Right        = 3,
		TopLeft      = 4,
		TopRight     = 5,
		BottomLeft   = 6,
		BottomRight  = 7,
		Count        = 8,
		MAX          = 9
	};

	/**
	 * Enum DeadIsland.EItemCreationMethod
	 */
	enum class EItemCreationMethod : uint8_t
	{
		FixedStandardItem    = 0,
		GuidedProceduralItem = 1,
		FixedProceduralItem  = 2,
		CustomCreationMethod = 3,
		Count                = 4,
		MAX                  = 5
	};

	/**
	 * Enum DeadIsland.EUIMissionState
	 */
	enum class EUIMissionState : uint8_t
	{
		None      = 0,
		Available = 1,
		Started   = 2,
		Complete  = 3,
		Failed    = 4,
		MAX       = 5
	};

	/**
	 * Enum DeadIsland.ENavModifierExpansionDirection
	 */
	enum class ENavModifierExpansionDirection : uint8_t
	{
		None      = 0,
		Forwards  = 1,
		Backwards = 2,
		Left      = 3,
		Right     = 4,
		Up        = 5,
		Down      = 6,
		All       = 7,
		MAX       = 8
	};

	/**
	 * Enum DeadIsland.EDIObjectiveTag
	 */
	enum class EDIObjectiveTag : uint8_t
	{
		Cutscene = 0,
		MAX      = 1
	};

	/**
	 * Enum DeadIsland.EDIPaperDollSlot
	 */
	enum class EDIPaperDollSlot : uint8_t
	{
		Weapon           = 0,
		Throwable        = 1,
		PrimaryAugment   = 2,
		SecondaryAugment = 3,
		MAX              = 4
	};

	/**
	 * Enum DeadIsland.EServerTriggerType
	 */
	enum class EServerTriggerType : uint8_t
	{
		DropKick        = 0,
		ExplosiveAttack = 1,
		MAX             = 2
	};

	/**
	 * Enum DeadIsland.ECameraYawContext
	 */
	enum class ECameraYawContext : uint8_t
	{
		Neutral = 0,
		Left    = 1,
		Right   = 2,
		MAX     = 3
	};

	/**
	 * Enum DeadIsland.ECameraPitchContext
	 */
	enum class ECameraPitchContext : uint8_t
	{
		Neutral = 0,
		Up      = 1,
		Down    = 2,
		MAX     = 3
	};

	/**
	 * Enum DeadIsland.EDIQuestlineTag
	 */
	enum class EDIQuestlineTag : uint8_t
	{
		MainQuestline = 0,
		MAX           = 1
	};

	/**
	 * Enum DeadIsland.EFadeMode
	 */
	enum class EFadeMode : uint8_t
	{
		Idle     = 0,
		Linear   = 1,
		Constant = 2,
		PingPong = 3,
		MAX      = 4
	};

	/**
	 * Enum DeadIsland.EDistractionPrioritisationType
	 */
	enum class EDistractionPrioritisationType : uint8_t
	{
		Newest  = 0,
		Oldest  = 1,
		Closest = 2,
		MAX     = 3
	};

	/**
	 * Enum DeadIsland.EDLCExaminedState
	 */
	enum class EDLCExaminedState : uint8_t
	{
		Unexamined = 0,
		Examined   = 1,
		MAX        = 2
	};

	/**
	 * Enum DeadIsland.EDoorTransparency
	 */
	enum class EDoorTransparency : uint8_t
	{
		Solid       = 0,
		Translucent = 1,
		Transparent = 2,
		MAX         = 3
	};

	/**
	 * Enum DeadIsland.EDoorAudioLocation
	 */
	enum class EDoorAudioLocation : uint8_t
	{
		Handle    = 0,
		Underside = 1,
		Hinge     = 2,
		MAX       = 3
	};

	/**
	 * Enum DeadIsland.EDoorType
	 */
	enum class EDoorType : uint8_t
	{
		RotatesOneWay   = 0,
		RotatesBothWays = 1,
		Sliding         = 2,
		Other           = 3,
		MAX             = 4
	};

	/**
	 * Enum DeadIsland.EDoorSwingOrientation
	 */
	enum class EDoorSwingOrientation : uint8_t
	{
		NotApplicable = 0,
		Left          = 1,
		Right         = 2,
		Both          = 3,
		MAX           = 4
	};

	/**
	 * Enum DeadIsland.EDoorSwingDirection
	 */
	enum class EDoorSwingDirection : uint8_t
	{
		NotApplicable = 0,
		Toward        = 1,
		Away          = 2,
		MAX           = 3
	};

	/**
	 * Enum DeadIsland.EDoorSides
	 */
	enum class EDoorSides : uint8_t
	{
		Left  = 0,
		Right = 1,
		MAX   = 2
	};

	/**
	 * Enum DeadIsland.EArchetypeEvaluationOrder
	 */
	enum class EArchetypeEvaluationOrder : uint8_t
	{
		Linear = 0,
		Random = 1,
		MAX    = 2
	};

	/**
	 * Enum DeadIsland.EEnvironmentalHazardState
	 */
	enum class EEnvironmentalHazardState : uint8_t
	{
		Active   = 0,
		Inactive = 1,
		Terminal = 2,
		Broken   = 3,
		MAX      = 4
	};

	/**
	 * Enum DeadIsland.EEngagementRingPointFilter
	 */
	enum class EEngagementRingPointFilter : uint8_t
	{
		None            = 0,
		EdgesAndClosest = 1,
		MAX             = 2
	};

	/**
	 * Enum DeadIsland.ENavMeshEdges_EdgeNormalDirection
	 */
	enum class ENavMeshEdges_EdgeNormalDirection : uint8_t
	{
		Outward           = 0,
		Inward            = 1,
		ENavMeshEdges_MAX = 2
	};

	/**
	 * Enum DeadIsland.EErrorResponseType
	 */
	enum class EErrorResponseType : uint8_t
	{
		Invalid                      = 0,
		ActivityFailed               = 1,
		KickPlayer                   = 2,
		AccountTypeFailure           = 3,
		CreateGameFailed             = 4,
		FindGameFailed               = 5,
		FindGameNoHosting            = 6,
		PartyFull                    = 7,
		GameFull                     = 8,
		QuickJoinGameNotInstalled    = 9,
		GameNotInstalled             = 10,
		InvalidSession               = 11,
		InvitePlayerBlocked          = 12,
		InviteCoopNotUnlocked        = 13,
		InviteQuestTooFarAhead       = 14,
		InviteConnectivityTimeout    = 15,
		JoinPartyFailed              = 16,
		JoinPartyGameFailed          = 17,
		InvalidInviteData            = 18,
		PartyLost                    = 19,
		ServerConnectionLost         = 20,
		RequiredPatchAvailable       = 21,
		RequiredSystemUpdate         = 22,
		AgeRestrictionFailure        = 23,
		OnlinePlayRestricted         = 24,
		OnlineSignOut                = 25,
		OnlineServiceConnectionLost  = 26,
		ConnectToOnlineServiceFailed = 27,
		Count                        = 28,
		MAX                          = 29
	};

	/**
	 * Enum DeadIsland.EExplosionSurface
	 */
	enum class EExplosionSurface : uint8_t
	{
		Point     = 0,
		Circle    = 1,
		Rectangle = 2,
		MAX       = 3
	};

	/**
	 * Enum DeadIsland.EFaction
	 */
	enum class EFaction : uint8_t
	{
		Players = 0,
		Zombies = 1,
		NPCs    = 2,
		Count   = 3,
		MAX     = 4
	};

	/**
	 * Enum DeadIsland.EFactionReaction
	 */
	enum class EFactionReaction : uint8_t
	{
		Invalid  = 0,
		Unset    = 1,
		Friendly = 2,
		Neutral  = 3,
		Hostile  = 4,
		MAX      = 5
	};

	/**
	 * Enum DeadIsland.EOutgoingViewOption
	 */
	enum class EOutgoingViewOption : uint8_t
	{
		Tick         = 0,
		Lock         = 1,
		LockRotation = 2,
		Count        = 3,
		MAX          = 4
	};

	/**
	 * Enum DeadIsland.EFluidMixingResolution
	 */
	enum class EFluidMixingResolution : uint8_t
	{
		Error                 = 0,
		Mix                   = 1,
		MixIfInitialInactive  = 2,
		MixIfIncomingInactive = 3,
		Ignore                = 4,
		Num                   = 5,
		MAX                   = 6
	};

	/**
	 * Enum DeadIsland.EFluidSimProjectileMovementConfig
	 */
	enum class EFluidSimProjectileMovementConfig : uint8_t
	{
		None             = 0,
		Activate         = 1,
		ActivateAndReset = 2,
		Deactivate       = 3,
		MAX              = 4
	};

	/**
	 * Enum DeadIsland.EFluidSimProjectileSimulationConfig
	 */
	enum class EFluidSimProjectileSimulationConfig : uint8_t
	{
		None       = 0,
		Activate   = 1,
		Deactivate = 2,
		MAX        = 3
	};

	/**
	 * Enum DeadIsland.EFluidRequestType
	 */
	enum class EFluidRequestType : uint8_t
	{
		Environmental = 0,
		PlayerRequest = 1,
		MAX           = 2
	};

	/**
	 * Enum DeadIsland.EFootstepFailedToHandleNotifyReason
	 */
	enum class EFootstepFailedToHandleNotifyReason : uint8_t
	{
		Allowed                 = 0,
		TooSoonSameFoot         = 1,
		TooSoonComponent        = 2,
		TooSoonGlobal           = 3,
		WwiseAudioOutputTooLoud = 4,
		MAX                     = 5
	};

	/**
	 * Enum DeadIsland.EFootstepComponentAttenuationType
	 */
	enum class EFootstepComponentAttenuationType : uint8_t
	{
		DefaultSmall         = 0,
		SpecialLarge         = 1,
		SpecialSmallFrequent = 2,
		MAX                  = 3
	};

	/**
	 * Enum DeadIsland.EFootstepProbeDirection
	 */
	enum class EFootstepProbeDirection : uint8_t
	{
		Gravity                    = 0,
		Forward                    = 1,
		LedgeGrabForwardAndGravity = 2,
		MAX                        = 3
	};

	/**
	 * Enum DeadIsland.EFoleyType
	 */
	enum class EFoleyType : uint8_t
	{
		Locomotion   = 0,
		LedgeGrab    = 1,
		Vault        = 2,
		WeaponAttack = 3,
		ShortMove    = 4,
		LongMove     = 5,
		CrouchIn     = 6,
		CrouchOut    = 7,
		Dodge        = 8,
		BlockIn      = 9,
		BlockOut     = 10,
		CounterIn    = 11,
		CounterOut   = 12,
		MAX          = 13
	};

	/**
	 * Enum DeadIsland.EFootstepType
	 */
	enum class EFootstepType : uint8_t
	{
		Left          = 0,
		Right         = 1,
		Dodge         = 2,
		SlideIn       = 3,
		SlideOut      = 4,
		Jump          = 5,
		Land          = 6,
		CrouchIn      = 7,
		CrouchOut     = 8,
		Knockdown     = 9,
		KnockdownOut  = 10,
		LeftHand      = 11,
		RightHand     = 12,
		LeftHandDrag  = 13,
		RightHandDrag = 14,
		Max           = 15
	};

	/**
	 * Enum DeadIsland.EffectsRegistry
	 */
	enum class EffectsRegistry : uint8_t
	{
		Surface  = 0,
		Material = 1,
		Class    = 2,
		Custom   = 3,
		MaxTypes = 4,
		MAX      = 5
	};

	/**
	 * Enum DeadIsland.EGameCollisionHandlerOverrideResponse
	 */
	enum class EGameCollisionHandlerOverrideResponse : uint8_t
	{
		None                      = 0,
		StopAllEngineNotifies     = 1,
		StopEngineNotifyIfHandled = 2,
		MAX                       = 3
	};

	/**
	 * Enum DeadIsland.EGameCollisionRepsonseEngineNotifyType
	 */
	enum class EGameCollisionRepsonseEngineNotifyType : uint8_t
	{
		kResponsesDecidesNotify = 0,
		kStopEngineNotify       = 1,
		kKeepEngineNotify       = 2,
		MAX                     = 3
	};

	/**
	 * Enum DeadIsland.EGameCollisionEditorResponseType
	 */
	enum class EGameCollisionEditorResponseType : uint8_t
	{
		kAutoInherits = 0,
		kConcrete     = 1,
		kCascade      = 2,
		kCopyFrom     = 3,
		kTypeCount    = 4,
		MAX           = 5
	};

	/**
	 * Enum DeadIsland.EGameCollisionDamageCurveType
	 */
	enum class EGameCollisionDamageCurveType : uint8_t
	{
		kLinear    = 0,
		kSquare    = 1,
		kCustom    = 2,
		kTypeCount = 3,
		MAX        = 4
	};

	/**
	 * Enum DeadIsland.EGameEventAkAudioNetworkType
	 */
	enum class EGameEventAkAudioNetworkType : uint8_t
	{
		LocalOnly = 0,
		Multicast = 1,
		MAX       = 2
	};

	/**
	 * Enum DeadIsland.EGameEventAkAudioEventLocation
	 */
	enum class EGameEventAkAudioEventLocation : uint8_t
	{
		SceneComponentLocation      = 0,
		SceneComponentAttached      = 1,
		ContextualActorLocation     = 2,
		ContextualActorMeshAttached = 3,
		ProvidedActorLocation       = 4,
		MAX                         = 5
	};

	/**
	 * Enum DeadIsland.EContextualActorFiltering
	 */
	enum class EContextualActorFiltering : uint8_t
	{
		None       = 0,
		LocalActor = 1,
		Server     = 2,
		MAX        = 3
	};

	/**
	 * Enum DeadIsland.EGameEventCosmeticEffectLocation
	 */
	enum class EGameEventCosmeticEffectLocation : uint8_t
	{
		SceneComponentLocation  = 0,
		SceneComponentAttached  = 1,
		ContextualActorLocation = 2,
		ContextualActorAttached = 3,
		ArbitraryActorLocation  = 4,
		ArbitraryLocation       = 5,
		MAX                     = 6
	};

	/**
	 * Enum DeadIsland.EGameEventNetworkTriggerRule
	 */
	enum class EGameEventNetworkTriggerRule : uint8_t
	{
		AuthorityOnly = 0,
		LocalOnly     = 1,
		Everyone      = 2,
		MAX           = 3
	};

	/**
	 * Enum DeadIsland.EDismembermentType
	 */
	enum class EDismembermentType : uint8_t
	{
		LeftArmMissing  = 0,
		RightArmMissing = 1,
		BothArmsMissing = 2,
		LeftLegMissing  = 3,
		RightLegMissing = 4,
		BothLegsMissing = 5,
		Crawler         = 6,
		MAX             = 7
	};

	/**
	 * Enum DeadIsland.ERequestTarget
	 */
	enum class ERequestTarget : uint8_t
	{
		ContextualActor = 0,
		AllPlayers      = 1,
		MAX             = 2
	};

	/**
	 * Enum DeadIsland.EStaminaRewardType
	 */
	enum class EStaminaRewardType : uint8_t
	{
		Percentage = 0,
		Increment  = 1,
		MAX        = 2
	};

	/**
	 * Enum DeadIsland.EGameEventAttachmentSelection
	 */
	enum class EGameEventAttachmentSelection : uint8_t
	{
		StaticMesh   = 0,
		SkeletalMesh = 1,
		ActorClass   = 2,
		MAX          = 3
	};

	/**
	 * Enum DeadIsland.EGameFailPlayerResponse
	 */
	enum class EGameFailPlayerResponse : uint8_t
	{
		None               = 0,
		AllPlayersTeleport = 1,
		AllPlayersRestart  = 2,
		MAX                = 3
	};

	/**
	 * Enum DeadIsland.EGameFailWorldResponse
	 */
	enum class EGameFailWorldResponse : uint8_t
	{
		None      = 0,
		SoftReset = 1,
		Rollback  = 2,
		MAX       = 3
	};

	/**
	 * Enum DeadIsland.EGameFailMissionResponse
	 */
	enum class EGameFailMissionResponse : uint8_t
	{
		None     = 0,
		Rollback = 1,
		MAX      = 2
	};

	/**
	 * Enum DeadIsland.EGameFriendType
	 */
	enum class EGameFriendType : uint8_t
	{
		None     = 0,
		Platform = 1,
		EOS      = 2,
		All      = 3,
		MAX      = 4
	};

	/**
	 * Enum DeadIsland.EGameMatchmakingTaskType
	 */
	enum class EGameMatchmakingTaskType : uint8_t
	{
		RegisterGameSettings = 0,
		FindGame             = 1,
		JoinPartyGame        = 2,
		LeaveGame            = 3,
		SetGameSettings      = 4,
		MAX                  = 5
	};

	/**
	 * Enum DeadIsland.EReviveInteractType
	 */
	enum class EReviveInteractType : uint8_t
	{
		Invalid   = 0,
		Start     = 1,
		Interrupt = 2,
		Complete  = 3,
		MAX       = 4
	};

	/**
	 * Enum DeadIsland.EGameSequenceDeferredStartMode
	 */
	enum class EGameSequenceDeferredStartMode : uint8_t
	{
		Auto        = 0,
		AlwaysDefer = 1,
		NeverDefer  = 2,
		MAX         = 3
	};

	/**
	 * Enum DeadIsland.EGameSequenceCompletionMode
	 */
	enum class EGameSequenceCompletionMode : uint8_t
	{
		End           = 0,
		FirstBlendOut = 1,
		Manual        = 2,
		MAX           = 3
	};

	/**
	 * Enum DeadIsland.EGameStateTransition
	 */
	enum class EGameStateTransition : uint8_t
	{
		Enter   = 0,
		Exit    = 1,
		Suspend = 2,
		Resume  = 3,
		MAX     = 4
	};

	/**
	 * Enum DeadIsland.EGameStateType
	 */
	enum class EGameStateType : uint8_t
	{
		Invalid                 = 0,
		Boot                    = 1,
		Splash                  = 2,
		UserSignIn              = 3,
		ProfileSelect           = 4,
		ProfileCreate           = 5,
		FirstRunOptions         = 6,
		Frontend                = 7,
		TravelRequest           = 8,
		CreateGame              = 9,
		FindGame                = 10,
		JoinPartyGame           = 11,
		Loading                 = 12,
		LoadingScene            = 13,
		PlayingGame             = 14,
		SeamlessTravel          = 15,
		NewGame                 = 16,
		AuthenticateUser        = 17,
		CheckSaveGame           = 18,
		Entry                   = 19,
		ContentEntitlementCheck = 20,
		AuthenticatePros        = 21,
		ProsAccountLink         = 22,
		AgreeToEULA             = 23,
		MarketingTelemetry      = 24,
		LoadGame                = 25,
		ShaderPrecache          = 26,
		MAX                     = 27
	};

	/**
	 * Enum DeadIsland.EGameTypeTransition
	 */
	enum class EGameTypeTransition : uint8_t
	{
		None    = 0,
		Offline = 1,
		Online  = 2,
		MAX     = 3
	};

	/**
	 * Enum DeadIsland.EGasCloudState
	 */
	enum class EGasCloudState : uint8_t
	{
		None            = 0,
		Intro           = 1,
		Sustain         = 2,
		Dissipate       = 3,
		ForcedDissipate = 4,
		MAX             = 5
	};

	/**
	 * Enum DeadIsland.EGatherMode
	 */
	enum class EGatherMode : uint8_t
	{
		Idle   = 0,
		Active = 1,
		MAX    = 2
	};

	/**
	 * Enum DeadIsland.EGatherContextType
	 */
	enum class EGatherContextType : uint8_t
	{
		None          = 0,
		Gather        = 1,
		FastTravel    = 2,
		QuestDelivery = 3,
		MAX           = 4
	};

	/**
	 * Enum DeadIsland.EActionPromptAlignmentScheme
	 */
	enum class EActionPromptAlignmentScheme : uint8_t
	{
		Left          = 0,
		Right         = 1,
		Centred       = 2,
		TypeDependant = 3,
		MAX           = 4
	};

	/**
	 * Enum DeadIsland.EAmmoState
	 */
	enum class EAmmoState : uint8_t
	{
		Uninitialized = 0,
		Normal        = 1,
		Low           = 2,
		Empty         = 3,
		Infinite      = 4,
		MAX           = 5
	};

	/**
	 * Enum DeadIsland.EGFxCentralNotificationAbandonStates
	 */
	enum class EGFxCentralNotificationAbandonStates : uint8_t
	{
		Normal      = 0,
		CloseToEdge = 1,
		MAX         = 2
	};

	/**
	 * Enum DeadIsland.EChallengeInfoPaneVisbilityFlags
	 */
	enum class EChallengeInfoPaneVisbilityFlags : uint8_t
	{
		None                 = 0,
		ChallengePercentage  = 1,
		PersistantStat       = 2,
		ChallengeSnippets    = 3,
		ChallengeType        = 4,
		ChallengeDescription = 5,
		ChallengeImage       = 6,
		Title                = 7,
		Ingredients          = 8,
		Default              = 9,
		MAX                  = 10
	};

	/**
	 * Enum DeadIsland.EChallengeInfoPaneCentralDisplayState
	 */
	enum class EChallengeInfoPaneCentralDisplayState : uint8_t
	{
		None      = 0,
		Challenge = 1,
		Category  = 2,
		MAX       = 3
	};

	/**
	 * Enum DeadIsland.EGFxContextualNotificationChallengeAnims
	 */
	enum class EGFxContextualNotificationChallengeAnims : uint8_t
	{
		TierCompleteToNextTier = 0,
		MAX                    = 1
	};

	/**
	 * Enum DeadIsland.ETextTipNotificationStyle
	 */
	enum class ETextTipNotificationStyle : uint8_t
	{
		Menu = 0,
		HUD  = 1,
		MAX  = 2
	};

	/**
	 * Enum DeadIsland.ECoopRosterIconState
	 */
	enum class ECoopRosterIconState : uint8_t
	{
		None       = 0,
		FuryReady  = 1,
		FuryUsed   = 2,
		Dead       = 3,
		Dying      = 4,
		Reviving   = 5,
		Respawning = 6,
		Joining    = 7,
		MAX        = 8
	};

	/**
	 * Enum DeadIsland.EUIDownedIconState
	 */
	enum class EUIDownedIconState : uint8_t
	{
		Normal       = 0,
		Downed       = 1,
		DownedUrgent = 2,
		Reviving     = 3,
		Dead         = 4,
		Respawning   = 5,
		MAX          = 6
	};

	/**
	 * Enum DeadIsland.EGFxHealthBarState
	 */
	enum class EGFxHealthBarState : uint8_t
	{
		HighHealth = 0,
		LowHealth  = 1,
		Dead       = 2,
		MAX        = 3
	};

	/**
	 * Enum DeadIsland.EItemDisplayTitleTextState
	 */
	enum class EItemDisplayTitleTextState : uint8_t
	{
		Name    = 0,
		Profile = 1,
		MAX     = 2
	};

	/**
	 * Enum DeadIsland.EInventoryItemRowSwapMarkerState
	 */
	enum class EInventoryItemRowSwapMarkerState : uint8_t
	{
		Off                    = 0,
		SwappingFrom           = 1,
		SwappingTo             = 2,
		SwapPossible           = 3,
		SwapNotPossible        = 4,
		SwapSuccessAnimThenOff = 5,
		MAX                    = 6
	};

	/**
	 * Enum DeadIsland.EGFxItemIconFlags
	 */
	enum class EGFxItemIconFlags : uint8_t
	{
		None         = 0,
		ShowCooldown = 1,
		Default      = 2,
		MAX          = 3
	};

	/**
	 * Enum DeadIsland.EBlueprintButtonBorderType
	 */
	enum class EBlueprintButtonBorderType : uint8_t
	{
		Default = 0,
		Perk    = 1,
		Mod     = 2,
		MAX     = 3
	};

	/**
	 * Enum DeadIsland.EMenuOptionKeyState
	 */
	enum class EMenuOptionKeyState : uint8_t
	{
		Valid   = 0,
		Invalid = 1,
		Editing = 2,
		Unset   = 3,
		Count   = 4,
		MAX     = 5
	};

	/**
	 * Enum DeadIsland.ENumericIconBackgroundState
	 */
	enum class ENumericIconBackgroundState : uint8_t
	{
		Normal       = 0,
		Locked       = 1,
		Recolourable = 2,
		MAX          = 3
	};

	/**
	 * Enum DeadIsland.EUIScoreDisplayType
	 */
	enum class EUIScoreDisplayType : uint8_t
	{
		None   = 0,
		Cash   = 1,
		Attack = 2,
		MAX    = 3
	};

	/**
	 * Enum DeadIsland.EGFxSkillTreeNodeFlags
	 */
	enum class EGFxSkillTreeNodeFlags : uint8_t
	{
		None           = 0,
		ButtonEvents   = 1,
		CanChangeShape = 2,
		Default        = 3,
		MAX            = 4
	};

	/**
	 * Enum DeadIsland.ESpeakingIconState
	 */
	enum class ESpeakingIconState : uint8_t
	{
		NoVoip   = 0,
		HasVoip  = 1,
		Speaking = 2,
		Muted    = 3,
		Disabled = 4,
		MAX      = 5
	};

	/**
	 * Enum DeadIsland.EXPBarTextFormat
	 */
	enum class EXPBarTextFormat : uint8_t
	{
		CurrentXP     = 0,
		XPToNextLevel = 1,
		MAX           = 2
	};

	/**
	 * Enum DeadIsland.EHandOfGodMode
	 */
	enum class EHandOfGodMode : uint8_t
	{
		PickUp    = 0,
		Slingshot = 1,
		Count     = 2,
		MAX       = 3
	};

	/**
	 * Enum DeadIsland.EHeavyAttackSequenceState
	 */
	enum class EHeavyAttackSequenceState : uint8_t
	{
		Null                   = 0,
		Lunge                  = 1,
		PreAttack              = 2,
		PairedSequenceAttack   = 3,
		StandardSequenceAttack = 4,
		MAX                    = 5
	};

	/**
	 * Enum DeadIsland.EHitDeathReactionParticipant
	 */
	enum class EHitDeathReactionParticipant : uint8_t
	{
		Defender = 0,
		Attacker = 1,
		MAX      = 2
	};

	/**
	 * Enum DeadIsland.EHitReactTreeNetworkEvaluationPolicy
	 */
	enum class EHitReactTreeNetworkEvaluationPolicy : uint8_t
	{
		Everyone             = 0,
		ServerOnly           = 1,
		PredictiveClientOnly = 2,
		MAX                  = 3
	};

	/**
	 * Enum DeadIsland.EHitVictimOrientation
	 */
	enum class EHitVictimOrientation : uint8_t
	{
		VictimUpright  = 0,
		VictimFaceUp   = 1,
		VictimFaceDown = 2,
		MAX            = 3
	};

	/**
	 * Enum DeadIsland.EHitDirection
	 */
	enum class EHitDirection : uint8_t
	{
		None     = 0,
		Front90  = 1,
		Back90   = 2,
		Left90   = 3,
		Right90  = 4,
		Front180 = 5,
		Back180  = 6,
		Left180  = 7,
		Right180 = 8,
		Above90  = 9,
		Above180 = 10,
		Below180 = 11,
		Below90  = 12,
		Count    = 13,
		MAX      = 14
	};

	/**
	 * Enum DeadIsland.EHitReactNetworkResolutionResult
	 */
	enum class EHitReactNetworkResolutionResult : uint8_t
	{
		Equivalent  = 0,
		Interrupt   = 1,
		Uncontested = 2,
		MAX         = 3
	};

	/**
	 * Enum DeadIsland.EHitReactNetworkResolutionBehaviour
	 */
	enum class EHitReactNetworkResolutionBehaviour : uint8_t
	{
		CheckEquivalent  = 0,
		AssumeEquivalent = 1,
		Interrupt        = 2,
		Uncontested      = 3,
		MAX              = 4
	};

	/**
	 * Enum DeadIsland.EHitReactPhase
	 */
	enum class EHitReactPhase : uint8_t
	{
		Uninitialized              = 0,
		Initialized                = 1,
		PreparedResponses          = 2,
		AwaitingResponseCompletion = 3,
		Completed                  = 4,
		Interrupted                = 5,
		Failed                     = 6,
		MAX                        = 7
	};

	/**
	 * Enum DeadIsland.EAccumulationDistributionMethod
	 */
	enum class EAccumulationDistributionMethod : uint8_t
	{
		SumAccumulationAppliedToActorOnSingleImpact = 0,
		AllProjectilesApplyFullAccumulation         = 1,
		DistributeAccumulationEvenly                = 2,
		MAX                                         = 3
	};

	/**
	 * Enum DeadIsland.EForceDistributionMethod
	 */
	enum class EForceDistributionMethod : uint8_t
	{
		SumForceAppliedToActorOnSingleImpact = 0,
		AllProjectilesApplyFullForce         = 1,
		MAX                                  = 2
	};

	/**
	 * Enum DeadIsland.EShotRequestState
	 */
	enum class EShotRequestState : uint8_t
	{
		RequiresProcessing = 0,
		Complete           = 1,
		MAX                = 2
	};

	/**
	 * Enum DeadIsland.EHordeCharacterClassType
	 */
	enum class EHordeCharacterClassType : uint8_t
	{
		None    = 0,
		Medic   = 1,
		Hunter  = 2,
		Chemist = 3,
		MAX     = 4
	};

	/**
	 * Enum DeadIsland.EHordeMissionRepetitionType
	 */
	enum class EHordeMissionRepetitionType : uint8_t
	{
		AlwaysRepeatable = 0,
		CompleteOnce     = 1,
		PlayOnce         = 2,
		AvailableOnce    = 3,
		MAX              = 4
	};

	/**
	 * Enum DeadIsland.EHordeMutatorImpact
	 */
	enum class EHordeMutatorImpact : uint8_t
	{
		Neutral  = 0,
		Positive = 1,
		Negative = 2,
		MAX      = 3
	};

	/**
	 * Enum DeadIsland.EHordeMutatorType
	 */
	enum class EHordeMutatorType : uint8_t
	{
		None        = 0,
		Ambient     = 1,
		Perk        = 2,
		PostProcess = 3,
		MAX         = 4
	};

	/**
	 * Enum DeadIsland.EHordeMutatorBundleGroup
	 */
	enum class EHordeMutatorBundleGroup : uint8_t
	{
		Group_A   = 0,
		Group_B   = 1,
		Group_C   = 2,
		Group_D   = 3,
		Group_E   = 4,
		Group_Max = 5
	};

	/**
	 * Enum DeadIsland.EThreaditorGraphEdgeType
	 */
	enum class EThreaditorGraphEdgeType : uint8_t
	{
		ThreaditorEdge_Success = 0,
		ThreaditorEdge_Failure = 1,
		ThreaditorEdge_MAX     = 2
	};

	/**
	 * Enum DeadIsland.EHordeRewardType
	 */
	enum class EHordeRewardType : uint8_t
	{
		None          = 0,
		Survivors     = 1,
		TrapMaterials = 2,
		Weapons       = 3,
		MAX           = 4
	};

	/**
	 * Enum DeadIsland.EHordeObjectiveType
	 */
	enum class EHordeObjectiveType : uint8_t
	{
		None           = 0,
		Boss           = 1,
		Conquest       = 2,
		Fetch          = 3,
		Rescue         = 4,
		ShelterDefense = 5,
		MAX            = 6
	};

	/**
	 * Enum DeadIsland.ESpawnVariation
	 */
	enum class ESpawnVariation : uint8_t
	{
		None  = 0,
		Spike = 1,
		Super = 2,
		MAX   = 3
	};

	/**
	 * Enum DeadIsland.EHUDClusterDefaultBehaviour
	 */
	enum class EHUDClusterDefaultBehaviour : uint8_t
	{
		Off     = 0,
		Dynamic = 1,
		On      = 2,
		MAX     = 3
	};

	/**
	 * Enum DeadIsland.EHUDClusterParentBehaviour
	 */
	enum class EHUDClusterParentBehaviour : uint8_t
	{
		Both   = 0,
		Either = 1,
		MAX    = 2
	};

	/**
	 * Enum DeadIsland.EFadeDirection
	 */
	enum class EFadeDirection : uint8_t
	{
		FadeToEffect   = 0,
		FadeFromEffect = 1,
		MAX            = 2
	};

	/**
	 * Enum DeadIsland.EHUDGFxMaintainAspectRatioType
	 */
	enum class EHUDGFxMaintainAspectRatioType : uint8_t
	{
		MaintainHeight = 0,
		MaintainWidth  = 1,
		MaintainBoth   = 2,
		MAX            = 3
	};

	/**
	 * Enum DeadIsland.EHUDGFxAlignment
	 */
	enum class EHUDGFxAlignment : uint8_t
	{
		Custom       = 0,
		TopLeft      = 1,
		TopCenter    = 2,
		TopRight     = 3,
		CenterLeft   = 4,
		Center       = 5,
		CenterRight  = 6,
		BottomLeft   = 7,
		BottomCenter = 8,
		BottomRight  = 9,
		MAX          = 10
	};

	/**
	 * Enum DeadIsland.EHUDIconActorPositionType
	 */
	enum class EHUDIconActorPositionType : uint8_t
	{
		OriginLocation         = 0,
		BBoxCenter             = 1,
		TaggedComponentBBoxTop = 2,
		MAX                    = 3
	};

	/**
	 * Enum DeadIsland.ECoopSignalState
	 */
	enum class ECoopSignalState : uint8_t
	{
		None  = 0,
		Right = 1,
		Left  = 2,
		Clear = 3,
		MAX   = 4
	};

	/**
	 * Enum DeadIsland.EUIStabilityState
	 */
	enum class EUIStabilityState : uint8_t
	{
		None                    = 0,
		Normal                  = 1,
		Unstable                = 2,
		Vulnerable              = 3,
		VulnerableAndRecharging = 4,
		MAX                     = 5
	};

	/**
	 * Enum DeadIsland.EHUDReticleAppearance
	 */
	enum class EHUDReticleAppearance : uint8_t
	{
		None   = 0,
		Cross  = 1,
		Dot    = 2,
		Drop   = 3,
		Circle = 4,
		Sprint = 5,
		Throw  = 6,
		COUNT  = 7,
		MAX    = 8
	};

	/**
	 * Enum DeadIsland.EHordeNotification
	 */
	enum class EHordeNotification : uint8_t
	{
		None      = 0,
		Fancy     = 1,
		Simple    = 2,
		Warning   = 3,
		Distance  = 4,
		Stalker   = 5,
		Objective = 6,
		MAX       = 7
	};

	/**
	 * Enum DeadIsland.EFancyNotificationIcon
	 */
	enum class EFancyNotificationIcon : uint8_t
	{
		None        = 0,
		WaveCleared = 1,
		Survivor    = 2,
		MAX         = 3
	};

	/**
	 * Enum DeadIsland.ESuggestedQuestReason
	 */
	enum class ESuggestedQuestReason : uint8_t
	{
		QuestStarted = 0,
		QuestUpdated = 1,
		MAX          = 2
	};

	/**
	 * Enum DeadIsland.EHUDHintPopUpMessageType
	 */
	enum class EHUDHintPopUpMessageType : uint8_t
	{
		Uninitialised        = 0,
		None                 = 1,
		EquippedBrokenWeapon = 2,
		OutOfAmmo            = 3,
		OutOfStamina         = 4,
		WeaponJustBroken     = 5,
		FuryModeReady        = 6,
		MAX                  = 7
	};

	/**
	 * Enum DeadIsland.EBackgroundBarState
	 */
	enum class EBackgroundBarState : uint8_t
	{
		Default        = 0,
		LowHealth      = 1,
		CriticalHealth = 2,
		MAX            = 3
	};

	/**
	 * Enum DeadIsland.EDeltaBarState
	 */
	enum class EDeltaBarState : uint8_t
	{
		Default = 0,
		Loss    = 1,
		MAX     = 2
	};

	/**
	 * Enum DeadIsland.EHealthBarState
	 */
	enum class EHealthBarState : uint8_t
	{
		Default  = 0,
		Critical = 1,
		MAX      = 2
	};

	/**
	 * Enum DeadIsland.EPlayerUIRevivalState
	 */
	enum class EPlayerUIRevivalState : uint8_t
	{
		Normal   = 0,
		Downed   = 1,
		Reviving = 2,
		MAX      = 3
	};

	/**
	 * Enum DeadIsland.EHUDAutoHideType
	 */
	enum class EHUDAutoHideType : uint8_t
	{
		None   = 0,
		Basic  = 1,
		Combat = 2,
		MAX    = 3
	};

	/**
	 * Enum DeadIsland.EHUDActiveStateType
	 */
	enum class EHUDActiveStateType : uint8_t
	{
		AddToViewport = 0,
		SetVisibility = 1,
		MAX           = 2
	};

	/**
	 * Enum DeadIsland.EFoodEffectCapacityPolicy
	 */
	enum class EFoodEffectCapacityPolicy : uint8_t
	{
		Unlimited                            = 0,
		LimitEffectCountByEffectSlotCapacity = 1,
		LimitEffectCapacityToExplicitCount   = 2,
		MAX                                  = 3
	};

	/**
	 * Enum DeadIsland.EFoodEffectTriggerPolicy
	 */
	enum class EFoodEffectTriggerPolicy : uint8_t
	{
		ReceiveFoodEffectsOnlyIfNotFull = 0,
		AlwaysTrigger                   = 1,
		MAX                             = 2
	};

	/**
	 * Enum DeadIsland.EIconAnimationFlags
	 */
	enum class EIconAnimationFlags : uint8_t
	{
		None    = 0,
		Show    = 1,
		Hide    = 2,
		Remove  = 3,
		Default = 4,
		MAX     = 5
	};

	/**
	 * Enum DeadIsland.EIconLoaderDefaultCategory
	 */
	enum class EIconLoaderDefaultCategory : uint8_t
	{
		None      = 0,
		Item      = 1,
		Upgrade   = 2,
		Elemental = 3,
		MAX       = 4
	};

	/**
	 * Enum DeadIsland.EImpactEventType
	 */
	enum class EImpactEventType : uint8_t
	{
		General = 0,
		Point   = 1,
		Radial  = 2,
		MAX     = 3
	};

	/**
	 * Enum DeadIsland.EImpactGroupType
	 */
	enum class EImpactGroupType : uint8_t
	{
		AuthoritativeImpact = 0,
		LocalOnlyImpact     = 1,
		MAX                 = 2
	};

	/**
	 * Enum DeadIsland.EImpactModificationPriority
	 */
	enum class EImpactModificationPriority : uint8_t
	{
		RemovingImpactProperties  = 0,
		ModifyingImpactProperties = 1,
		AddingImpactProperties    = 2,
		ConvertImpactProperties   = 3,
		MAX                       = 4
	};

	/**
	 * Enum DeadIsland.EIconDisplayPolicy
	 */
	enum class EIconDisplayPolicy : uint8_t
	{
		Never            = 0,
		ModifierLifetime = 1,
		OnImpactModified = 2,
		MAX              = 3
	};

	/**
	 * Enum DeadIsland.EBlockDirectionCalculation
	 */
	enum class EBlockDirectionCalculation : uint8_t
	{
		UseDirectionToImpact   = 0,
		UseDirectionToAttacker = 1,
		MAX                    = 2
	};

	/**
	 * Enum DeadIsland.EAngularLimitCalculation
	 */
	enum class EAngularLimitCalculation : uint8_t
	{
		TestDirectionVictimToImpact             = 0,
		TestDirectionVictimToDamageCausingActor = 1,
		TestDirectionVictimToInstigatorPawn     = 2,
		MAX                                     = 3
	};

	/**
	 * Enum DeadIsland.ESpatialRequirementQueryOriginLocation
	 */
	enum class ESpatialRequirementQueryOriginLocation : uint8_t
	{
		VictimLocation   = 0,
		AttackerLocation = 1,
		MAX              = 2
	};

	/**
	 * Enum DeadIsland.ESensorSweepMethod
	 */
	enum class ESensorSweepMethod : uint8_t
	{
		FromCameraLocationToSensorCenter    = 0,
		FromCameraLocationInCameraDirection = 1,
		Count                               = 2,
		MAX                                 = 3
	};

	/**
	 * Enum DeadIsland.EIngredientSourceType
	 */
	enum class EIngredientSourceType : uint8_t
	{
		None     = 0,
		Zombie   = 1,
		Location = 2,
		MAX      = 3
	};

	/**
	 * Enum DeadIsland.EInstallationFeatureName
	 */
	enum class EInstallationFeatureName : uint8_t
	{
		MainGame = 0,
		Horde    = 1,
		MAX      = 2
	};

	/**
	 * Enum DeadIsland.EInteractionTestType
	 */
	enum class EInteractionTestType : uint8_t
	{
		Line   = 0,
		Sweep  = 1,
		NoTest = 2,
		MAX    = 3
	};

	/**
	 * Enum DeadIsland.EInteractionResponseNetworkPolicy
	 */
	enum class EInteractionResponseNetworkPolicy : uint8_t
	{
		Local          = 0,
		Server         = 1,
		LocalAndServer = 2,
		Others         = 3,
		Everybody      = 4,
		MAX            = 5
	};

	/**
	 * Enum DeadIsland.EInteractRangeIconType
	 */
	enum class EInteractRangeIconType : uint8_t
	{
		None        = 0,
		Standard    = 1,
		Counter     = 2,
		Use         = 3,
		Dock        = 4,
		Undock      = 5,
		Repair      = 6,
		Inspect     = 7,
		FastTravel  = 8,
		Locked      = 9,
		Unavailable = 10,
		MAX         = 11
	};

	/**
	 * Enum DeadIsland.EInteractionPriority
	 */
	enum class EInteractionPriority : uint8_t
	{
		Low    = 0,
		Medium = 1,
		High   = 2,
		MAX    = 3
	};

	/**
	 * Enum DeadIsland.EInteractionResult
	 */
	enum class EInteractionResult : uint8_t
	{
		Invalid             = 0,
		InteractionComplete = 1,
		InteractionBegan    = 2,
		MAX                 = 3
	};

	/**
	 * Enum DeadIsland.EItemRewardResult
	 */
	enum class EItemRewardResult : uint8_t
	{
		Error   = 0,
		Success = 1,
		MAX     = 2
	};

	/**
	 * Enum DeadIsland.EItemRewardState
	 */
	enum class EItemRewardState : uint8_t
	{
		NotGiven = 0,
		Pending  = 1,
		Received = 2,
		MAX      = 3
	};

	/**
	 * Enum DeadIsland.EUpgradeCustomisationType
	 */
	enum class EUpgradeCustomisationType : uint8_t
	{
		Customisable = 0,
		Forced       = 1,
		Any          = 2,
		MAX          = 3
	};

	/**
	 * Enum DeadIsland.EMultipleItemUpgradeRequirementType
	 */
	enum class EMultipleItemUpgradeRequirementType : uint8_t
	{
		AllMustPass        = 0,
		AtLeastOneMustPass = 1,
		MAX                = 2
	};

	/**
	 * Enum DeadIsland.EModType
	 */
	enum class EModType : uint8_t
	{
		AcidMod  = 0,
		BleedMod = 1,
		ShockMod = 2,
		FireMod  = 3,
		Max      = 4
	};

	/**
	 * Enum DeadIsland.EItemUpgradePurchaseResult
	 */
	enum class EItemUpgradePurchaseResult : uint8_t
	{
		Success                     = 0,
		Fail_AlreadyBought          = 1,
		Fail_UpgradeTooRare         = 2,
		Fail_ArchetypeLimitExceeded = 3,
		Fail_NotEnoughSlots         = 4,
		Fail_RequirementsNotMet     = 5,
		Fail_NotEnoughCash          = 6,
		Fail_NotEnoughIngredients   = 7,
		Fail_Error                  = 8,
		MAX                         = 9
	};

	/**
	 * Enum DeadIsland.EUpgradeDisplayType
	 */
	enum class EUpgradeDisplayType : uint8_t
	{
		Mod           = 0,
		ModLinkedPerk = 1,
		Perk          = 2,
		MAX           = 3
	};

	/**
	 * Enum DeadIsland.EItemUpgradeRequirementsFilter
	 */
	enum class EItemUpgradeRequirementsFilter : uint8_t
	{
		None               = 0,
		RequirementsMet    = 1,
		RequirementsNotMet = 2,
		All                = 3,
		MAX                = 4
	};

	/**
	 * Enum DeadIsland.EJornalImageLayout
	 */
	enum class EJornalImageLayout : uint8_t
	{
		Landscape = 0,
		Portrait  = 1,
		MAX       = 2
	};

	/**
	 * Enum DeadIsland.EJournalType
	 */
	enum class EJournalType : uint8_t
	{
		Text  = 0,
		Audio = 1,
		Image = 2,
		MAX   = 3
	};

	/**
	 * Enum DeadIsland.EKeyType
	 */
	enum class EKeyType : uint8_t
	{
		Key     = 0,
		Keycard = 1,
		Keycode = 2,
		MAX     = 3
	};

	/**
	 * Enum DeadIsland.EKeyForLockType
	 */
	enum class EKeyForLockType : uint8_t
	{
		None          = 0,
		Key           = 1,
		Code          = 2,
		Keycard       = 3,
		BiometricCode = 4,
		Clue          = 5,
		MAX           = 6
	};

	/**
	 * Enum DeadIsland.EPlatformSpecificContent
	 */
	enum class EPlatformSpecificContent : uint8_t
	{
		Spoon_Permitted = 0,
		Spoon_Enabled   = 1,
		Spoon_MAX       = 2
	};

	/**
	 * Enum DeadIsland.EQuestRecordOperator
	 */
	enum class EQuestRecordOperator : uint8_t
	{
		Equals             = 0,
		GreaterThanOrEqual = 1,
		GreaterThan        = 2,
		MAX                = 3
	};

	/**
	 * Enum DeadIsland.EQuestRecordCompleteType
	 */
	enum class EQuestRecordCompleteType : uint8_t
	{
		Host   = 0,
		Client = 1,
		All    = 2,
		MAX    = 3
	};

	/**
	 * Enum DeadIsland.EMultiplierSpecificationMethod
	 */
	enum class EMultiplierSpecificationMethod : uint8_t
	{
		FixedValue           = 0,
		NumericExpression    = 1,
		RangeBasedExpression = 2,
		MAX                  = 3
	};

	/**
	 * Enum DeadIsland.ERootImpulseSpecificationMethod
	 */
	enum class ERootImpulseSpecificationMethod : uint8_t
	{
		ExplicitImpulseDirection    = 0,
		RadialImpulseOriginLocation = 1,
		MAX                         = 2
	};

	/**
	 * Enum DeadIsland.EAngularImpulseSpecificationMethod
	 */
	enum class EAngularImpulseSpecificationMethod : uint8_t
	{
		ImpulseLocationAndDirection   = 0,
		RadialImpulseOriginLocation   = 1,
		ExplicitPitchAndYawMagnitudes = 2,
		MAX                           = 3
	};

	/**
	 * Enum DeadIsland.EScenarioLightTimeSource
	 */
	enum class EScenarioLightTimeSource : uint8_t
	{
		Progression = 0,
		UserChoice  = 1,
		Count       = 2,
		MAX         = 3
	};

	/**
	 * Enum DeadIsland.EArmLimbIKLimbId
	 */
	enum class EArmLimbIKLimbId : uint8_t
	{
		INVALID_KEY = 0,
		LeftArm     = 1,
		RightArm    = 2,
		KEYS_END    = 3,
		KEYS_BEGIN  = 4,
		KEYS_COUNT  = 5,
		MAX         = 6
	};

	/**
	 * Enum DeadIsland.EForceParseLocomotionAnimStatesH
	 */
	enum class EForceParseLocomotionAnimStatesH : uint8_t
	{
		Nope = 0,
		MAX  = 1
	};

	/**
	 * Enum DeadIsland.ELocomotionDebuggerEndMode
	 */
	enum class ELocomotionDebuggerEndMode : uint8_t
	{
		Wait    = 0,
		Release = 1,
		Loop    = 2,
		Count   = 3,
		MAX     = 4
	};

	/**
	 * Enum DeadIsland.ELocomotionDebuggerLocationSource
	 */
	enum class ELocomotionDebuggerLocationSource : uint8_t
	{
		Absolute               = 0,
		RelativeToThisActor    = 1,
		RelativeToContextActor = 2,
		Count                  = 3,
		MAX                    = 4
	};

	/**
	 * Enum DeadIsland.ELocomotionDesiredFacingDirectionSource
	 */
	enum class ELocomotionDesiredFacingDirectionSource : uint8_t
	{
		Invalid                     = 0,
		Current                     = 1,
		Movement                    = 2,
		MoveTargetBasis             = 3,
		ExplicitStrafe              = 4,
		ExplicitAim                 = 5,
		DirectionAtFinalDestination = 6,
		LookAt                      = 7,
		MAX                         = 8
	};

	/**
	 * Enum DeadIsland.EForceRotationType
	 */
	enum class EForceRotationType : uint8_t
	{
		Strafing       = 0,
		Steering       = 1,
		MoveCorrection = 2,
		MAX            = 3
	};

	/**
	 * Enum DeadIsland.ECrawlerLocomotionState
	 */
	enum class ECrawlerLocomotionState : uint8_t
	{
		Idle       = 0,
		Move       = 1,
		TurnOnSpot = 2,
		MAX        = 3
	};

	/**
	 * Enum DeadIsland.ELocomotionState
	 */
	enum class ELocomotionState : uint8_t
	{
		Idle         = 0,
		Move         = 1,
		Start        = 2,
		Stop         = 3,
		Pivot        = 4,
		StanceChange = 5,
		TurnOnSpot   = 6,
		MAX          = 7
	};

	/**
	 * Enum DeadIsland.EFoot
	 */
	enum class EFoot : uint8_t
	{
		BlendLeftFoot  = 0,
		BlendRightFoot = 1,
		MAX            = 2
	};

	/**
	 * Enum DeadIsland.ETransition
	 */
	enum class ETransition : uint8_t
	{
		EndStopToMove     = 0,
		EndMoveToStop     = 1,
		EndPivot          = 2,
		EndTurnOnSpot     = 3,
		EndCycleBreak     = 4,
		EndStanceChange   = 5,
		PivotTurningPoint = 6,
		MAX               = 7
	};

	/**
	 * Enum DeadIsland.ELootContainerMapDiscoveryType
	 */
	enum class ELootContainerMapDiscoveryType : uint8_t
	{
		Standard      = 0,
		ZombieLockbox = 1,
		TreasureHunt  = 2,
		FuseRoom      = 3,
		MAX           = 4
	};

	/**
	 * Enum DeadIsland.ELootDropBehaviour
	 */
	enum class ELootDropBehaviour : uint8_t
	{
		KillParticipants = 0,
		AnyParticipant   = 1,
		Always           = 2,
		MAX              = 3
	};

	/**
	 * Enum DeadIsland.ELootUpdating
	 */
	enum class ELootUpdating : uint8_t
	{
		None     = 0,
		Override = 1,
		Additive = 2,
		MAX      = 3
	};

	/**
	 * Enum DeadIsland.EItemUpgradeSpecificationMethod
	 */
	enum class EItemUpgradeSpecificationMethod : uint8_t
	{
		Auto              = 0,
		Explicit          = 1,
		Ranged            = 2,
		NumericExpression = 3,
		Count             = 4,
		MAX               = 5
	};

	/**
	 * Enum DeadIsland.EItemRaritySpecificationMethod
	 */
	enum class EItemRaritySpecificationMethod : uint8_t
	{
		Auto                    = 0,
		InlineWeightingConfig   = 1,
		ExternalWeightingConfig = 2,
		Explicit                = 3,
		Count                   = 4,
		MAX                     = 5
	};

	/**
	 * Enum DeadIsland.EItemLevelSpecificationMethod
	 */
	enum class EItemLevelSpecificationMethod : uint8_t
	{
		Auto                  = 0,
		Explicit              = 1,
		DeltaOnRecipientLevel = 2,
		DeltaOnRequesterLevel = 3,
		Count                 = 4,
		MAX                   = 5
	};

	/**
	 * Enum DeadIsland.ERoundingType
	 */
	enum class ERoundingType : uint8_t
	{
		Floor = 0,
		Ceil  = 1,
		MAX   = 2
	};

	/**
	 * Enum DeadIsland.ERebateType
	 */
	enum class ERebateType : uint8_t
	{
		Fixed      = 0,
		Percentage = 1,
		MAX        = 2
	};

	/**
	 * Enum DeadIsland.ELootGenerationState
	 */
	enum class ELootGenerationState : uint8_t
	{
		None               = 0,
		SpawningInProgress = 1,
		Error              = 2,
		SpawningComplete   = 3,
		MAX                = 4
	};

	/**
	 * Enum DeadIsland.ELightingLockedState
	 */
	enum class ELightingLockedState : uint8_t
	{
		LockedIfInProduction = 0,
		Unlocked             = 1,
		Locked               = 2,
		MAX                  = 3
	};

	/**
	 * Enum DeadIsland.EDLCTag
	 */
	enum class EDLCTag : uint8_t
	{
		Dev   = 0,
		Base  = 1,
		Horde = 2,
		DLC1  = 3,
		DLC2  = 4,
		MAX   = 5
	};

	/**
	 * Enum DeadIsland.EGameType
	 */
	enum class EGameType : uint8_t
	{
		Local    = 0,
		FindGame = 1,
		Host     = 2,
		MAX      = 3
	};

	/**
	 * Enum DeadIsland.EMapDistrictLockedState
	 */
	enum class EMapDistrictLockedState : uint8_t
	{
		NotSet   = 0,
		Locked   = 1,
		Unlocked = 2,
		MAX      = 3
	};

	/**
	 * Enum DeadIsland.EMeleeActionStateCallback
	 */
	enum class EMeleeActionStateCallback : uint8_t
	{
		None                 = 0,
		BeginWindUpAnimation = 1,
		BeginAttack          = 2,
		MAX                  = 3
	};

	/**
	 * Enum DeadIsland.EOverrideBool
	 */
	enum class EOverrideBool : uint8_t
	{
		UseDefault      = 0,
		OverrideToTrue  = 1,
		OverrideToFalse = 2,
		MAX             = 3
	};

	/**
	 * Enum DeadIsland.EAIMeleeHitDetectionSource
	 */
	enum class EAIMeleeHitDetectionSource : uint8_t
	{
		Bones  = 0,
		Weapon = 1,
		MAX    = 2
	};

	/**
	 * Enum DeadIsland.EMeleeType
	 */
	enum class EMeleeType : uint8_t
	{
		MT_Sweep = 0,
		MT_Stab  = 1,
		MT_MAX   = 2
	};

	/**
	 * Enum DeadIsland.EEvasionState
	 */
	enum class EEvasionState : uint8_t
	{
		None   = 0,
		Evaded = 1,
		Dodged = 2,
		MAX    = 3
	};

	/**
	 * Enum DeadIsland.EMeleeAttackHitBehaviour
	 */
	enum class EMeleeAttackHitBehaviour : uint8_t
	{
		StopAttackAndAnimation = 0,
		StopAttack             = 1,
		Continue               = 2,
		JumpToSection          = 3,
		PlayMontage            = 4,
		MAX                    = 5
	};

	/**
	 * Enum DeadIsland.ERepeatType
	 */
	enum class ERepeatType : uint8_t
	{
		StaticValue = 0,
		RandomValue = 1,
		MAX         = 2
	};

	/**
	 * Enum DeadIsland.EMeleeItemBrokenAttackBehaviour
	 */
	enum class EMeleeItemBrokenAttackBehaviour : uint8_t
	{
		Attack        = 0,
		ThrowOnAttack = 1,
		MAX           = 2
	};

	/**
	 * Enum DeadIsland.EMeleeItemState
	 */
	enum class EMeleeItemState : uint8_t
	{
		Idle           = 0,
		StandardAttack = 1,
		HeavyAttack    = 2,
		Aim            = 3,
		Throw          = 4,
		Count          = 5,
		MAX            = 6
	};

	/**
	 * Enum DeadIsland.EMenuActionAudioFlags
	 */
	enum class EMenuActionAudioFlags : uint8_t
	{
		None             = 0,
		OnInputPressed   = 1,
		OnInputReleased  = 2,
		OnPromptPressed  = 3,
		OnPromptReleased = 4,
		Default          = 5,
		MAX              = 6
	};

	/**
	 * Enum DeadIsland.EMenuActionDataType
	 */
	enum class EMenuActionDataType : uint8_t
	{
		Navigation = 0,
		Operation  = 1,
		MAX        = 2
	};

	/**
	 * Enum DeadIsland.EMenuElementObjectLinkageType
	 */
	enum class EMenuElementObjectLinkageType : uint8_t
	{
		None                     = 0,
		ExistingGFxPath          = 1,
		SpawnableClassName       = 2,
		SpawnableLoaderAssetPath = 3,
		SpawnableLoaderImagePath = 4,
		SpawnableEmptyMovieClip  = 5,
		MAX                      = 6
	};

	/**
	 * Enum DeadIsland.EMenuComponentPairedEventTypes
	 */
	enum class EMenuComponentPairedEventTypes : uint8_t
	{
		FocusInOut   = 0,
		HoverOverOut = 1,
		MAX          = 2
	};

	/**
	 * Enum DeadIsland.EMenuComponentSingleEventTypes
	 */
	enum class EMenuComponentSingleEventTypes : uint8_t
	{
		FocusIn   = 0,
		FocusOut  = 1,
		HoverOver = 2,
		HoverOut  = 3,
		MAX       = 4
	};

	/**
	 * Enum DeadIsland.EMenuElementConditionLogicalOperation
	 */
	enum class EMenuElementConditionLogicalOperation : uint8_t
	{
		Or  = 0,
		And = 1,
		MAX = 2
	};

	/**
	 * Enum DeadIsland.EMenuCharacterAction
	 */
	enum class EMenuCharacterAction : uint8_t
	{
		MenuAction   = 0,
		WeaponWheel  = 1,
		LocationMenu = 2,
		MAX          = 3
	};

	/**
	 * Enum DeadIsland.EMenuSetScreenType
	 */
	enum class EMenuSetScreenType : uint8_t
	{
		EnteringNewScreen     = 0,
		ReturningBackToScreen = 1,
		RefreshingScreen      = 2,
		ClosingScreen         = 3,
		MAX                   = 4
	};

	/**
	 * Enum DeadIsland.EMenuMapHandlerContextualAction
	 */
	enum class EMenuMapHandlerContextualAction : uint8_t
	{
		None       = 0,
		Waypoint   = 1,
		TrackQuest = 2,
		MAX        = 3
	};

	/**
	 * Enum DeadIsland.EMenuModelViewingType
	 */
	enum class EMenuModelViewingType : uint8_t
	{
		None                   = 0,
		Item                   = 1,
		PlayerCharacter        = 2,
		ZombieCharacter        = 3,
		PlayerCharacterInspect = 4,
		MAX                    = 5
	};

	/**
	 * Enum DeadIsland.EMapBrowserGameType
	 */
	enum class EMapBrowserGameType : uint8_t
	{
		Local    = 0,
		FindGame = 1,
		Host     = 2,
		Private  = 3,
		MAX      = 4
	};

	/**
	 * Enum DeadIsland.EVideoEndReason
	 */
	enum class EVideoEndReason : uint8_t
	{
		VideoEnd     = 0,
		VideoSkipped = 1,
		MenuClose    = 2,
		MAX          = 3
	};

	/**
	 * Enum DeadIsland.EUnlockSkillEventsFlow
	 */
	enum class EUnlockSkillEventsFlow : uint8_t
	{
		NoUnlockFlow    = 0,
		Zooming         = 1,
		ShowAllSlots    = 2,
		ShowAllSkills   = 3,
		Revealing       = 4,
		WaitingForInput = 5,
		WaitingToResume = 6,
		NextUnlock      = 7,
		Done            = 8,
		MAX             = 9
	};

	/**
	 * Enum DeadIsland.EWorldMapType
	 */
	enum class EWorldMapType : uint8_t
	{
		LocalDistrictMap = 0,
		LAOverviewMap    = 1,
		Count            = 2,
		MAX              = 3
	};

	/**
	 * Enum DeadIsland.EMinigamePhaseResult
	 */
	enum class EMinigamePhaseResult : uint8_t
	{
		Passed = 0,
		Failed = 1,
		MAX    = 2
	};

	/**
	 * Enum DeadIsland.EProgressionFactType
	 */
	enum class EProgressionFactType : uint8_t
	{
		X   = 0,
		Y   = 1,
		MAX = 2
	};

	/**
	 * Enum DeadIsland.EModifiableValuesMapping
	 */
	enum class EModifiableValuesMapping : uint8_t
	{
		None     = 0,
		VeryLow  = 1,
		Low      = 2,
		Medium   = 3,
		High     = 4,
		VeryHigh = 5,
		Max      = 6
	};

	/**
	 * Enum DeadIsland.EModifierApplicationMethod
	 */
	enum class EModifierApplicationMethod : uint8_t
	{
		Add      = 0,
		Multiply = 1,
		MAX      = 2
	};

	/**
	 * Enum DeadIsland.EModifierResolutionType
	 */
	enum class EModifierResolutionType : uint8_t
	{
		CumulativeTotal = 0,
		TakeMinimum     = 1,
		TakeMaximum     = 2,
		Multiplicative  = 3,
		Count           = 4,
		MAX             = 5
	};

	/**
	 * Enum DeadIsland.EDuplicateModifierPolicy
	 */
	enum class EDuplicateModifierPolicy : uint8_t
	{
		ProhibitDuplicates = 0,
		AllowDuplicates    = 1,
		RefCountDuplicates = 2,
		Count              = 3,
		MAX                = 4
	};

	/**
	 * Enum DeadIsland.EProjectileModuleExecutionRule
	 */
	enum class EProjectileModuleExecutionRule : uint8_t
	{
		ExecuteOnEveryone                  = 0,
		ExecuteOnServerOnly                = 1,
		ExecuteOnAuthorityOnly             = 2,
		ExecuteOnServerAndReplicatedClient = 3,
		MAX                                = 4
	};

	/**
	 * Enum DeadIsland.EBurstProjectileTargetRule
	 */
	enum class EBurstProjectileTargetRule : uint8_t
	{
		InheritTargetOnPrimaryProjectileOnly = 0,
		InheritTargetOnAllProjectiles        = 1,
		InheritNoTargets                     = 2,
		MAX                                  = 3
	};

	/**
	 * Enum DeadIsland.ERadialDamageBodyPartDistributionMethod
	 */
	enum class ERadialDamageBodyPartDistributionMethod : uint8_t
	{
		None                         = 0,
		ApplyTotalToEachPart         = 1,
		DistributeDividedAcrossParts = 2,
		DistributeToRandomParts      = 3,
		DistributeLowestHealthFirst  = 4,
		MAX                          = 5
	};

	/**
	 * Enum DeadIsland.ENavBarrierState
	 */
	enum class ENavBarrierState : uint8_t
	{
		Navigable = 0,
		Blocked   = 1,
		MAX       = 2
	};

	/**
	 * Enum DeadIsland.EDescriptionAndIconsActivationPolicy
	 */
	enum class EDescriptionAndIconsActivationPolicy : uint8_t
	{
		Simple             = 0,
		OverrideCompletion = 1,
		FullSpecification  = 2,
		MAX                = 3
	};

	/**
	 * Enum DeadIsland.ESimpleObjectiveActivationPolicy
	 */
	enum class ESimpleObjectiveActivationPolicy : uint8_t
	{
		Simple            = 0,
		OverrideStarted   = 1,
		FullSpecification = 2,
		MAX               = 3
	};

	/**
	 * Enum DeadIsland.EOnlineFeature
	 */
	enum class EOnlineFeature : uint8_t
	{
		AccountLinking   = 0,
		OnlineGameplay   = 1,
		OnlinePlay       = 2,
		OnlineService    = 3,
		OnlineHosting    = 4,
		PlatformService  = 5,
		ProsNewsfeed     = 6,
		ProsSignUp       = 7,
		ProsConnectivity = 8,
		Pros             = 9,
		Count            = 10,
		MAX              = 11
	};

	/**
	 * Enum DeadIsland.EOnlineGameActivityOutcome
	 */
	enum class EOnlineGameActivityOutcome : uint8_t
	{
		Completed = 0,
		Failed    = 1,
		Cancelled = 2,
		MAX       = 3
	};

	/**
	 * Enum DeadIsland.EOnlineGameActivityProgress
	 */
	enum class EOnlineGameActivityProgress : uint8_t
	{
		NotStarted = 0,
		Started    = 1,
		Completed  = 2,
		MAX        = 3
	};

	/**
	 * Enum DeadIsland.EOnlineGameActivityAvailability
	 */
	enum class EOnlineGameActivityAvailability : uint8_t
	{
		Unavailable = 0,
		Available   = 1,
		MAX         = 2
	};

	/**
	 * Enum DeadIsland.ELevelSequenceStartPosition
	 */
	enum class ELevelSequenceStartPosition : uint8_t
	{
		FirstFrame = 0,
		LastFrame  = 1,
		Custom     = 2,
		MAX        = 3
	};

	/**
	 * Enum DeadIsland.EOpenableMeshTransformRule
	 */
	enum class EOpenableMeshTransformRule : uint8_t
	{
		FullTransform = 0,
		LocationOnly  = 1,
		RotationOnly  = 2,
		ScaleOnly     = 3,
		MAX           = 4
	};

	/**
	 * Enum DeadIsland.EHUDClusterVisibilityOption
	 */
	enum class EHUDClusterVisibilityOption : uint8_t
	{
		Off     = 0,
		Dynamic = 1,
		On      = 2,
		COUNT   = 3,
		MAX     = 4
	};

	/**
	 * Enum DeadIsland.EPairedActionHitReactType
	 */
	enum class EPairedActionHitReactType : uint8_t
	{
		Knockback = 0,
		Death     = 1,
		MAX       = 2
	};

	/**
	 * Enum DeadIsland.EMissionFilterType
	 */
	enum class EMissionFilterType : uint8_t
	{
		ExplicitMission = 0,
		TypeOfMission   = 1,
		MAX             = 2
	};

	/**
	 * Enum DeadIsland.EInventoryAmountCondition
	 */
	enum class EInventoryAmountCondition : uint8_t
	{
		OccupiedSlots       = 0,
		AvailableSlots      = 1,
		PercentageOccupied  = 2,
		PercentageAvailable = 3,
		MAX                 = 4
	};

	/**
	 * Enum DeadIsland.EGoadGatherResult
	 */
	enum class EGoadGatherResult : uint8_t
	{
		Success         = 0,
		NoCandidates    = 1,
		NothingGoadable = 2,
		NothingInRange  = 3,
		UnknownType     = 4,
		MAX             = 5
	};

	/**
	 * Enum DeadIsland.ERarityCheckType
	 */
	enum class ERarityCheckType : uint8_t
	{
		GreaterThanOrEqual = 0,
		Equal              = 1,
		LessThanOrEqual    = 2,
		MAX                = 3
	};

	/**
	 * Enum DeadIsland.EChallengeFilterType
	 */
	enum class EChallengeFilterType : uint8_t
	{
		ExplicitChallenge = 0,
		TypeOfChallenge   = 1,
		MAX               = 2
	};

	/**
	 * Enum DeadIsland.EPerkConditionPlayerInventoryEventsDataSource
	 */
	enum class EPerkConditionPlayerInventoryEventsDataSource : uint8_t
	{
		InventoryComponent                = 0,
		InventoryPersistentDataController = 1,
		MAX                               = 2
	};

	/**
	 * Enum DeadIsland.EPerkNetworkingOverride
	 */
	enum class EPerkNetworkingOverride : uint8_t
	{
		None                   = 0,
		ServerOnlyNoRep        = 1,
		LocalPlayerOnlyNoRep   = 2,
		ServerToAllRep         = 3,
		ServerToAllLocalRep    = 4,
		ServerToAllNonlocalRep = 5,
		Count                  = 6,
		MAX                    = 7
	};

	/**
	 * Enum DeadIsland.EEffectTriggerPolicy
	 */
	enum class EEffectTriggerPolicy : uint8_t
	{
		RequireAllConditionsSatisfied = 0,
		RequireAnyConditionSatisfied  = 1,
		Count                         = 2,
		MAX                           = 3
	};

	/**
	 * Enum DeadIsland.EConditionTriggerWindow
	 */
	enum class EConditionTriggerWindow : uint8_t
	{
		DisabledWhilstEffectsActive             = 0,
		CanRetriggerWhilstPreviousEffectsActive = 1,
		Count                                   = 2,
		MAX                                     = 3
	};

	/**
	 * Enum DeadIsland.EDuplicatePerkPolicy
	 */
	enum class EDuplicatePerkPolicy : uint8_t
	{
		AllowDuplicateInstances = 0,
		RefCountExisting        = 1,
		Count                   = 2,
		MAX                     = 3
	};

	/**
	 * Enum DeadIsland.EPerkEffectExecutionRule
	 */
	enum class EPerkEffectExecutionRule : uint8_t
	{
		ExecuteOnEveryone             = 0,
		ExecuteOnServerOnly           = 1,
		ExecuteOnLocalPlayerOnly      = 2,
		ExecuteOnAllExceptLocalPlayer = 3,
		Count                         = 4,
		MAX                           = 5
	};

	/**
	 * Enum DeadIsland.EPerkInstanceState
	 */
	enum class EPerkInstanceState : uint8_t
	{
		Invalid     = 0,
		Active      = 1,
		CoolingDown = 2,
		Exhausted   = 3,
		Count       = 4,
		MAX         = 5
	};

	/**
	 * Enum DeadIsland.EConditionExecutionPolicy
	 */
	enum class EConditionExecutionPolicy : uint8_t
	{
		ServerOnly = 0,
		Everyone   = 1,
		Count      = 2,
		MAX        = 3
	};

	/**
	 * Enum DeadIsland.EConditionUsagePolicy
	 */
	enum class EConditionUsagePolicy : uint8_t
	{
		EffectActivation   = 0,
		EffectDeactivation = 1,
		MAX                = 2
	};

	/**
	 * Enum DeadIsland.EConditionSatisfiedAutoReset
	 */
	enum class EConditionSatisfiedAutoReset : uint8_t
	{
		Never                   = 0,
		SingleFrame             = 1,
		TimeSinceFirstSatisfied = 2,
		TimeSinceLastSatsified  = 3,
		MAX                     = 4
	};

	/**
	 * Enum DeadIsland.EPerkItemUpgradeRecipient
	 */
	enum class EPerkItemUpgradeRecipient : uint8_t
	{
		WeaponOwner = 0,
		Weapon      = 1,
		MAX         = 2
	};

	/**
	 * Enum DeadIsland.EPhysicalizationFullBodyLOD
	 */
	enum class EPhysicalizationFullBodyLOD : uint8_t
	{
		AlwaysEnabled  = 0,
		KeepIfEnabled  = 1,
		Default        = 2,
		ReadyToDisable = 3,
		Disabled       = 4,
		MAX            = 5
	};

	/**
	 * Enum DeadIsland.EPickupabilityRule
	 */
	enum class EPickupabilityRule : uint8_t
	{
		Everyone  = 0,
		OwnerOnly = 1,
		Nobody    = 2,
		MAX       = 3
	};

	/**
	 * Enum DeadIsland.EPickupVisibilityRule
	 */
	enum class EPickupVisibilityRule : uint8_t
	{
		Everyone           = 0,
		Pickupable         = 1,
		VisiblePreInteract = 2,
		MAX                = 3
	};

	/**
	 * Enum DeadIsland.EPickupabilityState
	 */
	enum class EPickupabilityState : uint8_t
	{
		Pickupable    = 0,
		NotPickupable = 1,
		None          = 2,
		MAX           = 3
	};

	/**
	 * Enum DeadIsland.EPickupVisibility
	 */
	enum class EPickupVisibility : uint8_t
	{
		Visible    = 0,
		NotVisible = 1,
		None       = 2,
		MAX        = 3
	};

	/**
	 * Enum DeadIsland.EPlayerGathererState
	 */
	enum class EPlayerGathererState : uint8_t
	{
		NotGathering = 0,
		Gathering    = 1,
		MAX          = 2
	};

	/**
	 * Enum DeadIsland.EMeshPerspective
	 */
	enum class EMeshPerspective : uint8_t
	{
		FirstPersonMesh = 0,
		ThirdPersonMesh = 1,
		Count           = 2,
		MAX             = 3
	};

	/**
	 * Enum DeadIsland.ELedgeGrabType
	 */
	enum class ELedgeGrabType : uint8_t
	{
		Climb        = 0,
		ClimbAndDrop = 1,
		Mantle       = 2,
		Vault        = 3,
		Custom       = 4,
		None         = 5,
		MAX          = 6
	};

	/**
	 * Enum DeadIsland.EPlayerActionState
	 */
	enum class EPlayerActionState : uint8_t
	{
		None     = 0,
		Reaching = 1,
		Success  = 2,
		Fail     = 3,
		MAX      = 4
	};

	/**
	 * Enum DeadIsland.EPlayerAction
	 */
	enum class EPlayerAction : uint8_t
	{
		Grabbing = 0,
		Slide    = 1,
		None     = 2,
		MAX      = 3
	};

	/**
	 * Enum DeadIsland.EForceParsePlayerLocomotionAnimStatesH
	 */
	enum class EForceParsePlayerLocomotionAnimStatesH : uint8_t
	{
		Nope = 0,
		MAX  = 1
	};

	/**
	 * Enum DeadIsland.EPlayerLocomotionState
	 */
	enum class EPlayerLocomotionState : uint8_t
	{
		Idle  = 0,
		Move  = 1,
		Slide = 2,
		InAir = 3,
		MAX   = 4
	};

	/**
	 * Enum DeadIsland.EPopupAnimationDamageCriteriaEffectiveness
	 */
	enum class EPopupAnimationDamageCriteriaEffectiveness : uint8_t
	{
		DontCare             = 0,
		MustFallBetweenRange = 1,
		MustFallOutsideRange = 2,
		MAX                  = 3
	};

	/**
	 * Enum DeadIsland.EPopupAnimationDamageCriteriaLimbChoice
	 */
	enum class EPopupAnimationDamageCriteriaLimbChoice : uint8_t
	{
		NoDamage                  = 0,
		MustBeBroken              = 1,
		MustBeDismembered         = 2,
		MustBeBrokenOrDismembered = 3,
		DontCare                  = 4,
		MAX                       = 5
	};

	/**
	 * Enum DeadIsland.EPopupAnimationDamageCriteriaChoice
	 */
	enum class EPopupAnimationDamageCriteriaChoice : uint8_t
	{
		MustBeFalse = 0,
		MustBeTrue  = 1,
		DontCare    = 2,
		MAX         = 3
	};

	/**
	 * Enum DeadIsland.EPrepareWorldCoordinatorTier
	 */
	enum class EPrepareWorldCoordinatorTier : uint8_t
	{
		Tier1 = 0,
		Tier2 = 1,
		Tier3 = 2,
		Tier4 = 3,
		Tier5 = 4,
		MAX   = 5
	};

	/**
	 * Enum DeadIsland.EValueSpecificationMethod
	 */
	enum class EValueSpecificationMethod : uint8_t
	{
		Fixed  = 0,
		Auto   = 1,
		Offset = 2,
		Count  = 3,
		MAX    = 4
	};

	/**
	 * Enum DeadIsland.EModifierApplicationRule
	 */
	enum class EModifierApplicationRule : uint8_t
	{
		MultiplyBaseValue = 0,
		SumWithBaseValue  = 1,
		Count             = 2,
		MAX               = 3
	};

	/**
	 * Enum DeadIsland.EModifierConfigType
	 */
	enum class EModifierConfigType : uint8_t
	{
		Modifier = 0,
		Perk     = 1,
		MAX      = 2
	};

	/**
	 * Enum DeadIsland.EProjectileSpawnerBlockReasonType
	 */
	enum class EProjectileSpawnerBlockReasonType : uint8_t
	{
		CosmeticEffectBlockReason     = 0,
		ProjectileSpawningBlockReason = 1,
		MAX                           = 2
	};

	/**
	 * Enum DeadIsland.ETargetPointRaycastType
	 */
	enum class ETargetPointRaycastType : uint8_t
	{
		RaycastLocalCameraFallbackToMuzzle = 0,
		RaycastFromMuzzle                  = 1,
		MAX                                = 2
	};

	/**
	 * Enum DeadIsland.EAuthorityType
	 */
	enum class EAuthorityType : uint8_t
	{
		PredictiveClient = 0,
		Authority        = 1,
		MAX              = 2
	};

	/**
	 * Enum DeadIsland.EDealAttemptResult
	 */
	enum class EDealAttemptResult : uint8_t
	{
		Success = 0,
		Fail    = 1,
		MAX     = 2
	};

	/**
	 * Enum DeadIsland.EQuestUIProgressType
	 */
	enum class EQuestUIProgressType : uint8_t
	{
		None          = 0,
		Count         = 1,
		XOfY          = 2,
		Percent       = 3,
		TimeIncrement = 4,
		TimeDecrement = 5,
		Max           = 6
	};

	/**
	 * Enum DeadIsland.EProximityDetonatedProjectileState
	 */
	enum class EProximityDetonatedProjectileState : uint8_t
	{
		None      = 0,
		Inactive  = 1,
		Armed     = 2,
		Triggered = 3,
		Detonated = 4,
		MAX       = 5
	};

	/**
	 * Enum DeadIsland.ERandomNumberGeneratorDistribution
	 */
	enum class ERandomNumberGeneratorDistribution : uint8_t
	{
		AbsoluteValue = 0,
		Uniform       = 1,
		Normal        = 2,
		Cauchy        = 3,
		Count         = 4,
		MAX           = 5
	};

	/**
	 * Enum DeadIsland.ERangeBehaviour
	 */
	enum class ERangeBehaviour : uint8_t
	{
		UntilRange = 0,
		AfterRange = 1,
		MAX        = 2
	};

	/**
	 * Enum DeadIsland.ERecoilHandlerState
	 */
	enum class ERecoilHandlerState : uint8_t
	{
		Inactive  = 0,
		Recoiling = 1,
		Decaying  = 2,
		MAX       = 3
	};

	/**
	 * Enum DeadIsland.EDonutRespawnPickerPriorityScheme
	 */
	enum class EDonutRespawnPickerPriorityScheme : uint8_t
	{
		Donut_Far_Near = 0,
		Donut_Near_Far = 1,
		Donut_MAX      = 2
	};

	/**
	 * Enum DeadIsland.EDistributionType
	 */
	enum class EDistributionType : uint8_t
	{
		FullWeights   = 0,
		EqualWeights  = 1,
		ScoredWeights = 2,
		MAX           = 3
	};

	/**
	 * Enum DeadIsland.ESaveGameType
	 */
	enum class ESaveGameType : uint8_t
	{
		Major    = 0,
		Minor    = 1,
		Critical = 2,
		Count    = 3,
		MAX      = 4
	};

	/**
	 * Enum DeadIsland.EScopedEffectKnowledgeBaseChangeType
	 */
	enum class EScopedEffectKnowledgeBaseChangeType : uint8_t
	{
		Add       = 0,
		Increment = 1,
		MAX       = 2
	};

	/**
	 * Enum DeadIsland.EItemCountMethod
	 */
	enum class EItemCountMethod : uint8_t
	{
		StackOnly  = 0,
		Procedural = 1,
		MAX        = 2
	};

	/**
	 * Enum DeadIsland.ESkillEffectExecutionRule
	 */
	enum class ESkillEffectExecutionRule : uint8_t
	{
		AllowLocalExecution    = 0,
		ExecuteOnAuthorityOnly = 1,
		MAX                    = 2
	};

	/**
	 * Enum DeadIsland.ESkillSlotTransactionType
	 */
	enum class ESkillSlotTransactionType : uint8_t
	{
		SkillAssignedManual  = 0,
		SkillAssignedDefault = 1,
		SkillAssignedRandom  = 2,
		SkillAssignedState   = 3,
		Count                = 4,
		MAX                  = 5
	};

	/**
	 * Enum DeadIsland.ESkillTreeLineConnectionType
	 */
	enum class ESkillTreeLineConnectionType : uint8_t
	{
		None    = 0,
		BeeLine = 1,
		ZigZag  = 2,
		MAX     = 3
	};

	/**
	 * Enum DeadIsland.ESkillTreeTierRequirementMode
	 */
	enum class ESkillTreeTierRequirementMode : uint8_t
	{
		MustMeetAtLeastOneRequirement = 0,
		MustMeetAllRequirements       = 1,
		MAX                           = 2
	};

	/**
	 * Enum DeadIsland.ESkillEventType
	 */
	enum class ESkillEventType : uint8_t
	{
		Invalid        = 0,
		SlotUnlock     = 1,
		SkillUnlock    = 2,
		CategoryUnlock = 3,
		MAX            = 4
	};

	/**
	 * Enum DeadIsland.EStaminaCostModifier
	 */
	enum class EStaminaCostModifier : uint8_t
	{
		None     = 0,
		Movement = 1,
		Combat   = 2,
		MAX      = 3
	};

	/**
	 * Enum DeadIsland.EStandUpOrientation
	 */
	enum class EStandUpOrientation : uint8_t
	{
		FaceDown    = 0,
		FaceUp      = 1,
		OnLeftSide  = 2,
		OnRightSide = 3,
		MAX         = 4
	};

	/**
	 * Enum DeadIsland.ELookAtType
	 */
	enum class ELookAtType : uint8_t
	{
		None        = 0,
		UpperBody   = 1,
		HeadAndEyes = 2,
		EyesOnly    = 3,
		MAX         = 4
	};

	/**
	 * Enum DeadIsland.EStatefulActivityExitState
	 */
	enum class EStatefulActivityExitState : uint8_t
	{
		DefaultState  = 0,
		PreviousState = 1,
		NextState     = 2,
		NamedState    = 3,
		ActivityOutOf = 4,
		ExitActivity  = 5,
		MAX           = 6
	};

	/**
	 * Enum DeadIsland.EStatefulActivityContinuousLoopTimeoutMode
	 */
	enum class EStatefulActivityContinuousLoopTimeoutMode : uint8_t
	{
		NoTimeout                        = 0,
		FixedTimeoutDuration             = 1,
		RandomTimeoutDurationWithinRange = 2,
		MAX                              = 3
	};

	/**
	 * Enum DeadIsland.EStatefulActivityLoopMode
	 */
	enum class EStatefulActivityLoopMode : uint8_t
	{
		NoLoop                = 0,
		ContinuousLoop        = 1,
		FixedLoopCount        = 2,
		RandomWithinRangeLoop = 3,
		HoldFirstFrame        = 4,
		MAX                   = 5
	};

	/**
	 * Enum DeadIsland.EStateChangeTypes
	 */
	enum class EStateChangeTypes : uint8_t
	{
		Immediate = 0,
		LoopEnd   = 1,
		MAX       = 2
	};

	/**
	 * Enum DeadIsland.EAreaOfEffectAutoResizePolicy
	 */
	enum class EAreaOfEffectAutoResizePolicy : uint8_t
	{
		NoAutoResize                     = 0,
		AutoResizeToOwnerCollisionRadius = 1,
		AutoResizeToTransmitRadius       = 2,
		MAX                              = 3
	};

	/**
	 * Enum DeadIsland.EStatGathererUpdateResponsibility
	 */
	enum class EStatGathererUpdateResponsibility : uint8_t
	{
		Authority = 0,
		Local     = 1,
		MAX       = 2
	};

	/**
	 * Enum DeadIsland.EStatusEffectUIIconProgressState
	 */
	enum class EStatusEffectUIIconProgressState : uint8_t
	{
		Accumulating = 0,
		Draining     = 1,
		Idle         = 2,
		MAX          = 3
	};

	/**
	 * Enum DeadIsland.EStickyReticleMagnetismMode
	 */
	enum class EStickyReticleMagnetismMode : uint8_t
	{
		Off          = 0,
		Full         = 1,
		RotationOnly = 2,
		MAX          = 3
	};

	/**
	 * Enum DeadIsland.EStimTestStateResult
	 */
	enum class EStimTestStateResult : uint8_t
	{
		Processing = 0,
		Succeeded  = 1,
		Failed     = 2,
		MAX        = 3
	};

	/**
	 * Enum DeadIsland.EStimTestResult
	 */
	enum class EStimTestResult : uint8_t
	{
		Uninitialised = 0,
		Processing    = 1,
		Sleeping      = 2,
		NotRequired   = 3,
		Succeeded     = 4,
		Failed        = 5,
		MAX           = 6
	};

	/**
	 * Enum DeadIsland.EStrafeDirection
	 */
	enum class EStrafeDirection : uint8_t
	{
		Left  = 0,
		Right = 1,
		MAX   = 2
	};

	/**
	 * Enum DeadIsland.ETalentUsageType
	 */
	enum class ETalentUsageType : uint8_t
	{
		Active  = 0,
		Passive = 1,
		MAX     = 2
	};

	/**
	 * Enum DeadIsland.EOffsetSpace
	 */
	enum class EOffsetSpace : uint8_t
	{
		Local = 0,
		World = 1,
		MAX   = 2
	};

	/**
	 * Enum DeadIsland.ETargetPointInfoType
	 */
	enum class ETargetPointInfoType : uint8_t
	{
		Actor     = 0,
		Component = 1,
		Bone      = 2,
		MAX       = 3
	};

	/**
	 * Enum DeadIsland.EGFxIconSubstitutitonTextfieldFlags
	 */
	enum class EGFxIconSubstitutitonTextfieldFlags : uint8_t
	{
		None                   = 0,
		ShowActionIconsAsHolds = 1,
		MAX                    = 2
	};

	/**
	 * Enum DeadIsland.ETextSubstitutionVerticalAlignment
	 */
	enum class ETextSubstitutionVerticalAlignment : uint8_t
	{
		Top    = 0,
		Middle = 1,
		Bottom = 2,
		MAX    = 3
	};

	/**
	 * Enum DeadIsland.ETextSubstitutionHorizontalAlignment
	 */
	enum class ETextSubstitutionHorizontalAlignment : uint8_t
	{
		Left   = 0,
		Middle = 1,
		Right  = 2,
		MAX    = 3
	};

	/**
	 * Enum DeadIsland.EResourceType
	 */
	enum class EResourceType : uint8_t
	{
		Ammo          = 0,
		CooldownTimer = 1,
		MAX           = 2
	};

	/**
	 * Enum DeadIsland.ECooldownState
	 */
	enum class ECooldownState : uint8_t
	{
		Ready       = 0,
		CoolingDown = 1,
		MAX         = 2
	};

	/**
	 * Enum DeadIsland.EDisarmInteractSettings
	 */
	enum class EDisarmInteractSettings : uint8_t
	{
		E_First  = 0,
		E_Second = 1,
		E_Both   = 2,
		E_MAX    = 3
	};

	/**
	 * Enum DeadIsland.ETraversalGenerationFailureStage
	 */
	enum class ETraversalGenerationFailureStage : uint8_t
	{
		Uninitialised  = 0,
		FindStartPoint = 1,
		FindStartEdge  = 2,
		FindEndPoint   = 3,
		FindGap        = 4,
		OutsideMetrics = 5,
		MAX            = 6
	};

	/**
	 * Enum DeadIsland.ETutorialNetOwner
	 */
	enum class ETutorialNetOwner : uint8_t
	{
		LocalPlayer = 0,
		Host        = 1,
		MAX         = 2
	};

	/**
	 * Enum DeadIsland.ETutorialType
	 */
	enum class ETutorialType : uint8_t
	{
		HUD             = 0,
		Menu            = 1,
		ViewedFromStart = 2,
		None            = 3,
		MAX             = 4
	};

	/**
	 * Enum DeadIsland.EMenuTutorialLocation
	 */
	enum class EMenuTutorialLocation : uint8_t
	{
		Right = 0,
		Left  = 1,
		MAX   = 2
	};

	/**
	 * Enum DeadIsland.EUIStateDataBlockingIcon
	 */
	enum class EUIStateDataBlockingIcon : uint8_t
	{
		Unavailable = 0,
		Locked      = 1,
		MAX         = 2
	};

	/**
	 * Enum DeadIsland.EUIStateDataType
	 */
	enum class EUIStateDataType : uint8_t
	{
		None             = 0,
		BasicInteract    = 1,
		BlockingInteract = 2,
		MAX              = 3
	};

	/**
	 * Enum DeadIsland.EEquipmentSlotsWheelType
	 */
	enum class EEquipmentSlotsWheelType : uint8_t
	{
		NONE    = 0,
		Weapons = 1,
		Emotes  = 2,
		Count   = 3,
		MAX     = 4
	};

	/**
	 * Enum DeadIsland.EIconFormat
	 */
	enum class EIconFormat : uint8_t
	{
		Texture = 0,
		Vector  = 1,
		MAX     = 2
	};

	/**
	 * Enum DeadIsland.EUnlockableType
	 */
	enum class EUnlockableType : uint8_t
	{
		Invalid = 0,
		Trap    = 1,
		Weapon  = 2,
		Value   = 3,
		Level   = 4,
		Item    = 5,
		Perk    = 6,
		Count   = 7,
		MAX     = 8
	};

	/**
	 * Enum DeadIsland.EUnlockRequirementsFilter
	 */
	enum class EUnlockRequirementsFilter : uint8_t
	{
		None               = 0,
		RequirementsMet    = 1,
		RequirementsNotMet = 2,
		All                = 3,
		MAX                = 4
	};

	/**
	 * Enum DeadIsland.EValueSource
	 */
	enum class EValueSource : uint8_t
	{
		Raw        = 0,
		Blackboard = 1,
		DataAsset  = 2,
		MAX        = 3
	};

	/**
	 * Enum DeadIsland.EVendorGenerationPolicy
	 */
	enum class EVendorGenerationPolicy : uint8_t
	{
		NONE        = 0,
		OnBeginPlay = 1,
		OnInteract  = 2,
		Custom      = 3,
		MAX         = 4
	};

	/**
	 * Enum DeadIsland.EViewTargetSelection
	 */
	enum class EViewTargetSelection : uint8_t
	{
		Camera        = 0,
		PlayerCapsule = 1,
		MAX           = 2
	};

	/**
	 * Enum DeadIsland.EViewTargetDiffOutcome
	 */
	enum class EViewTargetDiffOutcome : uint8_t
	{
		Blend             = 0,
		SkipBlend         = 1,
		UnregisterRequest = 2,
		MAX               = 3
	};

	/**
	 * Enum DeadIsland.EViewTargetValueSource
	 */
	enum class EViewTargetValueSource : uint8_t
	{
		FromTargetPointInfo = 0,
		FromExplicitValue   = 1,
		Count               = 2,
		MAX                 = 3
	};

	/**
	 * Enum DeadIsland.ELineTracePriority
	 */
	enum class ELineTracePriority : uint8_t
	{
		Low      = 0,
		Medium   = 1,
		High     = 2,
		VeryHigh = 3,
		Count    = 4,
		MAX      = 5
	};

	/**
	 * Enum DeadIsland.EVoiceChatType
	 */
	enum class EVoiceChatType : uint8_t
	{
		Disabled   = 0,
		PushToTalk = 1,
		Toggle     = 2,
		Talk       = 3,
		MAX        = 4
	};

	/**
	 * Enum DeadIsland.EVoiceCommandState
	 */
	enum class EVoiceCommandState : uint8_t
	{
		None                       = 0,
		InitVoiceSystem            = 1,
		PendingInitResult          = 2,
		PendingUserAuthentication  = 3,
		CheckForAuthentication     = 4,
		PendingVoiceAuthentication = 5,
		BeginConnection            = 6,
		VoiceInitializationFailure = 7,
		WaitForAuthenticationCode  = 8,
		WaitingForConnection       = 9,
		AuthenticationFailed       = 10,
		ConnectionFailed           = 11,
		ConnectionFailedAccept     = 12,
		ReadyForVoiceCommands      = 13,
		MAX                        = 14
	};

	/**
	 * Enum DeadIsland.EVoiceComponentStatus
	 */
	enum class EVoiceComponentStatus : uint8_t
	{
		None                  = 0,
		VoiceCommandsDisabled = 1,
		NoOnlineConnection    = 2,
		NoAudioInputDevice    = 3,
		NotAuthenticated      = 4,
		NotConnected          = 5,
		AccountIneligible     = 6,
		ReadyForVoiceCommands = 7,
		MAX                   = 8
	};

	/**
	 * Enum DeadIsland.EVoiceComponentString
	 */
	enum class EVoiceComponentString : uint8_t
	{
		None                  = 0,
		InitializationFailed  = 1,
		AuthenticationPending = 2,
		AuthenticationFailed  = 3,
		ConnectionFailed      = 4,
		NoAudioDevice         = 5,
		ValidationCode        = 6,
		ValidationCodeQR      = 7,
		GameIneligible        = 8,
		AccountIneligible     = 9,
		LocationIneligible    = 10,
		LocaleIneligible      = 11,
		UnknownIneligible     = 12,
		MAX                   = 13
	};

	/**
	 * Enum DeadIsland.EWeaponTypeFilter
	 */
	enum class EWeaponTypeFilter : uint8_t
	{
		BareHands = 0,
		Melee     = 1,
		FireArms  = 2,
		MAX       = 3
	};

	/**
	 * Enum DeadIsland.EWeaponChangeType
	 */
	enum class EWeaponChangeType : uint8_t
	{
		Power      = 0,
		Profile    = 1,
		Damage     = 2,
		WeaponType = 3,
		Next       = 4,
		Previous   = 5,
		MAX        = 6
	};

	/**
	 * Enum DeadIsland.EGoadQueryFilter
	 */
	enum class EGoadQueryFilter : uint8_t
	{
		None      = 0,
		Nearest   = 1,
		Strongest = 2,
		Weakest   = 3,
		MAX       = 4
	};

	/**
	 * Enum DeadIsland.EWaypointableQueryFilter
	 */
	enum class EWaypointableQueryFilter : uint8_t
	{
		Nearest  = 0,
		Furthest = 1,
		MAX      = 2
	};

	/**
	 * Enum DeadIsland.EWaypointableQueryType
	 */
	enum class EWaypointableQueryType : uint8_t
	{
		PointOfInterest       = 0,
		Workbench             = 1,
		UsedFusebox           = 2,
		UnusedFusebox         = 3,
		FastTravelPoint       = 4,
		FastTravelBoard       = 5,
		ZombieLootbox         = 6,
		ClosedZombieLootbox   = 7,
		TreasureLootbox       = 8,
		ClosedTreasureLootbox = 9,
		Vendor                = 10,
		Safehouse             = 11,
		MAX                   = 12
	};

	/**
	 * Enum DeadIsland.EWeaponProfile
	 */
	enum class EWeaponProfile : uint8_t
	{
		Default      = 0,
		Breach       = 1,
		CrowdControl = 2,
		Flurry       = 3,
		Harvester    = 4,
		Precision    = 5,
		Rapid        = 6,
		Sharpshooter = 7,
		Tactical     = 8,
		MAX          = 9
	};

	/**
	 * Enum DeadIsland.EWeaponHand
	 */
	enum class EWeaponHand : uint8_t
	{
		Mainhand = 0,
		Offhand  = 1,
		Num      = 2,
		MAX      = 3
	};

	/**
	 * Enum DeadIsland.EMeleeWeaponDurabilityThresholdType
	 */
	enum class EMeleeWeaponDurabilityThresholdType : uint8_t
	{
		Percentage = 0,
		Absolute   = 1,
		MAX        = 2
	};

	/**
	 * Enum DeadIsland.EMeleeItemCondition
	 */
	enum class EMeleeItemCondition : uint8_t
	{
		Fine    = 0,
		Damaged = 1,
		Broken  = 2,
		MAX     = 3
	};

	/**
	 * Enum DeadIsland.EWeaponActorSource
	 */
	enum class EWeaponActorSource : uint8_t
	{
		WeaponOwner          = 0,
		WeaponProxyComponent = 1,
		MAX                  = 2
	};

	/**
	 * Enum DeadIsland.EImpactType
	 */
	enum class EImpactType : uint8_t
	{
		Blunt  = 0,
		Sharp  = 1,
		Ranged = 2,
		Other  = 3,
		MAX    = 4
	};

	// --------------------------------------------------
	// # Structs
	// --------------------------------------------------
	/**
	 * ScriptStruct DeadIsland.AccumulatingEffectRepItem
	 * Size -> 0x0014 (FullSize[0x0020] - InheritedSize[0x000C])
	 */
	struct FAccumulatingEffectRepItem : public FFastArraySerializerItem
	{
	public:
		int32_t                                                    ReplicatedInstanceIndex;                                 // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAccumulatingEffectState                                   EffectState;                                             // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ITE1[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastUpdatedValue;                                        // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastUpdatedTimeStamp;                                    // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastUpdatedDecayRate;                                    // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AccumulatingEffectRepData
	 * Size -> 0x0018 (FullSize[0x0120] - InheritedSize[0x0108])
	 */
	struct FAccumulatingEffectRepData : public FFastArraySerializer
	{
	public:
		TArray<struct FAccumulatingEffectRepItem>                  Items;                                                   // 0x0108(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class UAccumulatingEffectComponent*                        Owner;                                                   // 0x0118(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AccumulatingEffectSettings
	 * Size -> 0x0058
	 */
	struct FAccumulatingEffectSettings
	{
	public:
		float                                                      AccumulatingDecayRatePerSecond;                          // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultEffectDuration;                                   // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccumulatingPauseDuration;                               // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PauseDuration;                                           // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAccumulatingEffectImplementation*                   EffectImplementation;                                    // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UModifiableValueDefinition*                          GainModifier;                                            // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UModifiableValueDefinition*                          DecayModifier;                                           // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UModifiableValueDefinition*                          EffectDurationModifier;                                  // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCosmeticEffectsDefinition*                          LocalComseticEffect;                                     // 0x0030(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUIElementalData*                                    UIElementalData;                                         // 0x0038(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                UIDisplayName;                                           // 0x0040(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ActionAliasBindingList
	 * Size -> 0x0010
	 */
	struct FActionAliasBindingList
	{
	public:
		TArray<class UActionAliasBinding*>                         PriorityOrderedActionBindings;                           // 0x0000(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ActionAliasBindingRecord
	 * Size -> 0x0018
	 */
	struct FActionAliasBindingRecord
	{
	public:
		unsigned char                                              UnknownData_EAMM[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UActionAliasBinding*                                 ActionAliasBinding;                                      // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ActionAliasBindingStack
	 * Size -> 0x0010
	 */
	struct FActionAliasBindingStack
	{
	public:
		TArray<struct FActionAliasBindingRecord>                   RegisteredActionAliasBindingRecords;                     // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ActionRequesterRequestData
	 * Size -> 0x0020
	 */
	struct FActionRequesterRequestData
	{
	public:
		class UActionDefinition*                                   ActionToRequest;                                         // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCustomActionParamsBase*                             ParamsForActionToRequest;                                // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharacterActionRequestHelper*                       RequestHelper;                                           // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bControlRequestedActionsLifetime;                        // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J1KH[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ActionRequesterRequestRuntimeInfo
	 * Size -> 0x0010
	 */
	struct FActionRequesterRequestRuntimeInfo
	{
	public:
		class UCharacterActionRequestHelper*                       RequestHelper;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PHJZ[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ActionSequencerRequestData
	 * Size -> 0x0090
	 */
	struct FActionSequencerRequestData
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UActionDefinition*                                   ActionToRequest;                                         // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ParamsClassPtrForActionToRequest;                        // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      ParamsClassForActionToRequest;                           // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCustomActionParamsBase*                             ParamsForActionToRequest;                                // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AdvanceOnCustomSignals[0x50];                            // 0x0038(0x0050) UNKNOWN PROPERTY: SetProperty
		EActionSequencerSubActionEarlyFinishResponse               RequestFailResponse;                                     // 0x0088(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EActionSequencerSubActionEarlyFinishResponse               InterruptedResponse;                                     // 0x0089(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IM4H[0x6];                                   // 0x008A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ActionSequencerRequestRuntimeInfo
	 * Size -> 0x0018
	 */
	struct FActionSequencerRequestRuntimeInfo
	{
	public:
		class UCharacterActionRequestHelper*                       RequestHelper;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KYTU[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.TargetPointInfo
	 * Size -> 0x0050
	 */
	struct FTargetPointInfo
	{
	public:
		TWeakObjectPtr<class USceneComponent>                      SceneComponent;                                          // 0x0000(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TWeakObjectPtr<class AActor>                               Actor;                                                   // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                BoneName;                                                // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                SocketName;                                              // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             VectorLocation;                                          // 0x0020(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bVectorValid;                                            // 0x002C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bRotatorValid;                                           // 0x002D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bUserProvidedMeshValid;                                  // 0x002E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_F6SP[0x1];                                   // 0x002F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                            RotatorRotation;                                         // 0x0030(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
		struct FVector                                             AdditionalLocalSpaceOffset;                              // 0x003C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TWeakObjectPtr<class UMeshComponent>                       CachedMeshComponent;                                     // 0x0048(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.ActiveCombatRepositioningSettings
	 * Size -> 0x001C
	 */
	struct FActiveCombatRepositioningSettings
	{
	public:
		float                                                      MaxRepositioningDistance;                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Timeout;                                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Tolerance;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetCollisionTolerance;                                // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TravelSpeed;                                             // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaximumRelativeVerticalOffsetTargetIsConsideredValid;    // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseActorLocation;                                       // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseRootMotionSource;                                    // 0x0019(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P6V5[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CosmeticEffectWrapper
	 * Size -> 0x0018
	 */
	struct FCosmeticEffectWrapper
	{
	public:
		bool                                                       bSpecifyDirectly;                                        // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KXUY[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCosmeticEffectsDefinition*                          CosmeticEffectDefinition;                                // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CosmeticEffectObjectSetName;                             // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.StimChooser
	 * Size -> 0x0010
	 */
	struct FStimChooser
	{
	public:
		class UStimTemplate*                                       StimTemplate;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RowName;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.ProjectileConfiguration
	 * Size -> 0x0030
	 */
	struct FProjectileConfiguration
	{
	public:
		class UClass*                                              ProjectileType;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EProjectileCreationParameterSource                         ParameterSource;                                         // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ENLY[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UProjectileCreationParams*                           CreationParams;                                          // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UProjectileCreationParameterGenerator*               CreationParamGenerator;                                  // 0x0018(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCustomProjectileSpawnMethod*                        ProjectileSpawnMethod;                                   // 0x0020(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UProjectileTrajectoryAdjustmentHelper*               TrajectoryAdjustmentHelper;                              // 0x0028(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AngleRangeClampSettings
	 * Size -> 0x0014
	 */
	struct FAngleRangeClampSettings
	{
	public:
		bool                                                       bEnforceMaxPositivePitchAdjustMagnitude;                 // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_229W[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxPositivePitchAdjustMagnitudeInDegrees;                // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReturnClampedPositiveIfExceeds;                         // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnforceMaxNegativePitchAdjustMagnitude;                 // 0x0009(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H123[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxNegativePitchAdjustMagnitudeInDegrees;                // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReturnClampedNegativeIfExceeds;                         // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_88N6[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AttributeLevelScalingSettings
	 * Size -> 0x0050
	 */
	struct FAttributeLevelScalingSettings
	{
	public:
		ELevelScalingMethod                                        LevelScalingMethod;                                      // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y8DM[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRangeBasedScalar                                   Range;                                                   // 0x0008(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      LinearPerLevelGrowthAsFractionOfBase;                    // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IncrementPerLevel;                                       // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         LevelScalingCurve;                                       // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAttributeValuePerLevelMap*                          ExplicitAttributeLevelValues;                            // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ExplicitAttributeName;                                   // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttributeEffect
	 * Size -> 0x0020
	 */
	struct FAttributeEffect
	{
	public:
		class UModifiableValueDefinition*                          ModifierType;                                            // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bModifierValueShouldMatchAttributeValue;                 // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YLDH[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AttributeQuantityToApplyZeroModifier;                    // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RequiredAttributeIncrement;                              // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ModifierAppliedPerIncrement;                             // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowModifierForPartialIncrements;                      // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3KFO[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AttributeState
	 * Size -> 0x0018
	 */
	struct FAttributeState
	{
	public:
		float                                                      RawValue;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RawValueLevelScaled;                                     // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RawValueLevelScaledAndModified;                          // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RawValueLevelScaledModifiedAndRounded;                   // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RawValueLevelScaledModifiedAndRoundedClamped;            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectiveLevel;                                          // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttributeInitialSettings
	 * Size -> 0x0068
	 */
	struct FAttributeInitialSettings
	{
	public:
		bool                                                       bUseTypeDefaultValue;                                    // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDefaultValueOverrideType                                  OverrideType;                                            // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I4DA[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DesiredValue;                                            // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinValue;                                                // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxValue;                                                // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDefaultLevelScalingSettings;                         // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7JRM[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAttributeLevelScalingSettings                      DesiredLevelScalingSettings;                             // 0x0018(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttributeTypeAndValue
	 * Size -> 0x0070
	 */
	struct FAttributeTypeAndValue
	{
	public:
		class UAttributeType*                                      Type;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAttributeInitialSettings                           InitialSettings;                                         // 0x0008(0x0068) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttributeInstanceRepItem
	 * Size -> 0x002C (FullSize[0x0038] - InheritedSize[0x000C])
	 */
	struct FAttributeInstanceRepItem : public FFastArraySerializerItem
	{
	public:
		struct FAttributeState                                     InstanceState;                                           // 0x000C(0x0018) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BURY[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAttributeInstance*                                  ReplicatedInstance;                                      // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Index;                                                   // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4O9C[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AttributeInstanceRepData
	 * Size -> 0x0018 (FullSize[0x0120] - InheritedSize[0x0108])
	 */
	struct FAttributeInstanceRepData : public FFastArraySerializer
	{
	public:
		TArray<struct FAttributeInstanceRepItem>                   Items;                                                   // 0x0108(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class UAttributesComponent*                                Owner;                                                   // 0x0118(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MaxHealthAttributeTypeAndInitialSettings
	 * Size -> 0x0070
	 */
	struct FMaxHealthAttributeTypeAndInitialSettings
	{
	public:
		class UMaxHealthAttributeType*                             AttributeType;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAttributeInitialSettings                           InitialSettings;                                         // 0x0008(0x0068) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.BaseDamageAttributeTypeAndInitialSettings
	 * Size -> 0x0070
	 */
	struct FBaseDamageAttributeTypeAndInitialSettings
	{
	public:
		class UAIBaseDamageAttributeType*                          AttributeType;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAttributeInitialSettings                           InitialSettings;                                         // 0x0008(0x0068) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.BaseForceAttributeTypeAndInitialSettings
	 * Size -> 0x0070
	 */
	struct FBaseForceAttributeTypeAndInitialSettings
	{
	public:
		class UAIBaseForceAttributeType*                           AttributeType;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAttributeInitialSettings                           InitialSettings;                                         // 0x0008(0x0068) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.BaseStabilityAttributeTypeAndInitialSettings
	 * Size -> 0x0070
	 */
	struct FBaseStabilityAttributeTypeAndInitialSettings
	{
	public:
		class UAIBaseStabilityAttributeType*                       AttributeType;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAttributeInitialSettings                           InitialSettings;                                         // 0x0008(0x0068) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.XPRewardAttributeTypeAndInitialSettings
	 * Size -> 0x0070
	 */
	struct FXPRewardAttributeTypeAndInitialSettings
	{
	public:
		class UXPRewardAttributeType*                              AttributeType;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAttributeInitialSettings                           InitialSettings;                                         // 0x0008(0x0068) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FuryRewardAttributeTypeAndInitialSettings
	 * Size -> 0x0070
	 */
	struct FFuryRewardAttributeTypeAndInitialSettings
	{
	public:
		class UFuryRewardAttributeType*                            AttributeType;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAttributeInitialSettings                           InitialSettings;                                         // 0x0008(0x0068) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AICharacterLevelInfo
	 * Size -> 0x0004
	 */
	struct FAICharacterLevelInfo
	{
	public:
		int32_t                                                    OnKilledXP;                                              // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RandomNumberGenerator_Float
	 * Size -> 0x0028
	 */
	struct FRandomNumberGenerator_Float
	{
	public:
		ERandomNumberGeneratorDistribution                         Distribution;                                            // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M3JL[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExpectedValue;                                           // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StandardDeviation;                                       // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Min;                                                     // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Max;                                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Lambda;                                                  // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Offset;                                                  // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QV5H[0xC];                                   // 0x001C(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AimCorrectionSettings
	 * Size -> 0x0010
	 */
	struct FAimCorrectionSettings
	{
	public:
		EAimCorrectionStartMethod                                  StartMethod;                                             // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DXT7[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StartDelay;                                              // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAutoAimDataAsset*                                   AutoAimSettings;                                         // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttributeValueProxy
	 * Size -> 0x0018
	 */
	struct FAttributeValueProxy
	{
	public:
		EAttributeValueSource                                      Source;                                                  // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OZGQ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Value;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAttributeType*                                      AttributeType;                                           // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IMR6[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CoopWeaponAnimation
	 * Size -> 0x0030
	 */
	struct FCoopWeaponAnimation
	{
	public:
		bool                                                       bUseAnimSets;                                            // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0LE3[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AnimSetName;                                             // 0x0004(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CharacterAssetLinkName;                                  // 0x000C(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                WeaponAssetLinkName;                                     // 0x0014(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1IJ1[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        WeaponAnimation;                                         // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                        CharacterAnimation;                                      // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AIMeleeCommitmentAndHitDistanceConfig
	 * Size -> 0x0018
	 */
	struct FAIMeleeCommitmentAndHitDistanceConfig
	{
	public:
		float                                                      BaseHitDistance;                                         // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JJEN[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UModifiableValueDefinition*                          AggressorCommitmentHitDistanceModifier;                  // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UModifiableValueDefinition*                          TargetHitDistanceModifier;                               // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MeleeActionMiscParams
	 * Size -> 0x0070
	 */
	struct FMeleeActionMiscParams
	{
	public:
		bool                                                       bSkipWindUp;                                             // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldOverrideHitBehaviour;                             // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMeleeAttackHitBehaviour                                   OverrideHitBehaviour;                                    // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOverrideBool                                              UseFallbackAttackOverride;                               // 0x0003(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverrideMaxAngleToLaunchFallbackAttack;                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlwaysSucceed;                                          // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U730[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            SuccessfulImpactExpression;                              // 0x0010(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldPerformLocomotiveWindUps;                         // 0x0048(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4MAV[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinVariableWindUpToPerform;                              // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldAlwaysPerformFixedWindUp;                         // 0x0050(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQ30[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinVariableWindUpToForceFixedWindUp;                     // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRequiresCombatTarget;                                   // 0x0058(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XVS8[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAttackSequence*                                     AttackSequence;                                          // 0x0060(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M63F[0x8];                                   // 0x0068(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MeleeAttack
	 * Size -> 0x0010
	 */
	struct FMeleeAttack
	{
	public:
		class UMeleeImpactProfile*                                 OverrideImpactProfile;                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMeleeAttackHitBehaviour                                   HitBehaviour;                                            // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2CID[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MeleeHitDetectionConfig
	 * Size -> 0x0030
	 */
	struct FMeleeHitDetectionConfig
	{
	public:
		struct FMeleeAttack                                        Attack;                                                  // 0x0000(0x0010) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                SectionToJumpTo;                                         // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                        MontageToPlay;                                           // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DesiredHitTime;                                          // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHitDetectionCanBeEvaded;                                // 0x0024(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KUSS[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BlockWindowScalar;                                       // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DodgeWindowScalar;                                       // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AIMeleeHitDetectionNotifyStateConfig
	 * Size -> 0x0038
	 */
	struct FAIMeleeHitDetectionNotifyStateConfig
	{
	public:
		class UMeleeImpactProfile*                                 ImpactProfile;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMeleeHitDetectionConfig                            HitDetectionConfig;                                      // 0x0008(0x0030) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AIMeleeHitDetection
	 * Size -> 0x01A0
	 */
	struct FAIMeleeHitDetection
	{
	public:
		class UAttributeType*                                      BaseDamageAttributeType;                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAttributeType*                                      BaseForceAttributeType;                                  // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DLQE[0x98];                                  // 0x0010(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, struct FAIMeleeHitDetectionNotifyStateConfig> HitDetectionConfigs;                                     // 0x00A8(0x0050) NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_K4Z1[0xA8];                                  // 0x00F8(0x00A8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AIMovementSpeedBaseValue
	 * Size -> 0x0098
	 */
	struct FAIMovementSpeedBaseValue
	{
	public:
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0000(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRandomNumberGenerator_Float                        BaseSpeed;                                               // 0x0038(0x0028) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		float                                                      ClampedMin;                                              // 0x0060(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClampedMax;                                              // 0x0064(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EModifierApplicationMethod                                 ModifierApplicationMethod;                               // 0x0068(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0051[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomNumberGenerator_Float                        BaseAcceleration;                                        // 0x0070(0x0028) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AIMovementSpeedModifier
	 * Size -> 0x0040
	 */
	struct FAIMovementSpeedModifier
	{
	public:
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0000(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0038(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5HVJ[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.StimID
	 * Size -> 0x0004
	 */
	struct FStimID
	{
	public:
		uint32_t                                                   ID;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.StimEmitter
	 * Size -> 0x0028
	 */
	struct FStimEmitter
	{
	public:
		struct FStimChooser                                        StimTemplate;                                            // 0x0000(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       AttachStimToEmitter;                                     // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T20E[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AActor>                               Instigator;                                              // 0x0014(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActive;                                               // 0x001C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S5XK[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStimID                                             CurrentStimID;                                           // 0x0020(0x0004) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Q3LF[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.InstanceOverrideAlarmData
	 * Size -> 0x0048
	 */
	struct FInstanceOverrideAlarmData
	{
	public:
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0000(0x0038) Edit, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UScriptedSequenceStage*>                      OverriddenStages;                                        // 0x0038(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FallbackAlarmData
	 * Size -> 0x0040
	 */
	struct FFallbackAlarmData
	{
	public:
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0000(0x0038) Edit, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UScriptedSequenceDataAsset*                          ScriptedSequenceDataAsset;                               // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AmbientLookTargetDefinition
	 * Size -> 0x0030
	 */
	struct FAmbientLookTargetDefinition
	{
	public:
		class UStimTemplate*                                       Stim;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRandomNumberGenerator_Float                        LookDuration;                                            // 0x0008(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ImpactData
	 * Size -> 0x000C
	 */
	struct FDeadIsland_FImpactData
	{
	public:
		bool                                                       bCanCauseBreak;                                          // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanCauseDismember;                                      // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpawnLimbsOnDismember;                                  // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanCut;                                                 // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanCauseBisection;                                      // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9JNX[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BisectionChance;                                         // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RemapParameterToRangeHelper
	 * Size -> 0x00F0
	 */
	struct FRemapParameterToRangeHelper
	{
	public:
		struct FKnowledgeBaseExpression                            InputValueStartRangeExpression;                          // 0x0000(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            InputValueEndRangeExpression;                            // 0x0038(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EScalingMethod                                             ScalingMethod;                                           // 0x0070(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4NPB[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            OutputValueAtStartRangeExpression;                       // 0x0078(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            OutputValueAtEndRangeExpression;                         // 0x00B0(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         OutputRangeScalingCurve;                                 // 0x00E8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ImpactSourceInfo
	 * Size -> 0x0018
	 */
	struct FImpactSourceInfo
	{
	public:
		struct FEventInstigator                                    Instigator;                                              // 0x0000(0x0010) BlueprintVisible, NoDestructor, ExposeOnSpawn, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               DamageCauser;                                            // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimatedReactionMontageParams
	 * Size -> 0x0018
	 */
	struct FAnimatedReactionMontageParams
	{
	public:
		float                                                      MontagePlayRate;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MontagePlayWeight;                                       // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MontageStartDelay;                                       // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B9W8[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        Montage;                                                 // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MoveTargetBasis
	 * Size -> 0x0018
	 */
	struct FMoveTargetBasis
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Velocity;                                                // 0x000C(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SharedLocomotionState
	 * Size -> 0x0088
	 */
	struct FSharedLocomotionState
	{
	public:
		struct FVector                                             CurrentPoint;                                            // 0x0000(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Destination;                                             // 0x000C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Point2;                                                  // 0x0018(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             FinalDestination;                                        // 0x0024(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMoveTargetBasis                                    FinalDestinationBasis;                                   // 0x0030(0x0018) Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FMoveTargetBasisBehaviour                           FinalDestinationBasisBehaviour;                          // 0x0048(0x0008) Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             ExternalVelocity;                                        // 0x0050(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSpeed;                                                // 0x005C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Acceleration;                                            // 0x0060(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             DirectionAtFinalDestination;                             // 0x0064(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EStrafeMode                                                StrafeMode;                                              // 0x0070(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1GK3[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULocomotionStance*                                   DesiredStance;                                           // 0x0078(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FXZC[0x8];                                   // 0x0080(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimationMasterLocomotionState
	 * Size -> 0x0048 (FullSize[0x00D0] - InheritedSize[0x0088])
	 */
	struct FAnimationMasterLocomotionState : public FSharedLocomotionState
	{
	public:
		struct FVector                                             Location;                                                // 0x0088(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Direction;                                               // 0x0094(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Velocity;                                                // 0x00A0(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SyncStateID;                                             // 0x00AC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PathID;                                                  // 0x00B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PathLength;                                              // 0x00B4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DestinationPointIndex;                                   // 0x00B8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsRepathing;                                            // 0x00BC(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENavigationState                                           NavigationState;                                         // 0x00BD(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y37Z[0x2];                                   // 0x00BE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             StrafeTarget;                                            // 0x00C0(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BE1B[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SharedLookAtState
	 * Size -> 0x0020
	 */
	struct FSharedLookAtState
	{
	public:
		struct FVector                                             LookTarget;                                              // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldLook;                                             // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R3CC[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             AimTarget;                                               // 0x0010(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldAim;                                              // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S0J7[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimationMasterLookAtState
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FAnimationMasterLookAtState : public FSharedLookAtState
	{	};

	/**
	 * ScriptStruct DeadIsland.VocalAsset
	 * Size -> 0x0038
	 */
	struct FVocalAsset
	{
	public:
		class UAkAudioEvent*                                       AudioEvent;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDialogueTriggerChooser                             DialogueTrigger;                                         // 0x0008(0x0018) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class UDialogueTriggerDataAsset*                           DialogueTriggerDataAsset;                                // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FKnowledgeBaseValueSelector>                 ContextKnowledgeBaseValues;                              // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.TriggerNearbyConfigDataBP
	 * Size -> 0x0020
	 */
	struct FTriggerNearbyConfigDataBP
	{
	public:
		float                                                      MaxDistance;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TriggerCount;                                            // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Factions[0x10];                                          // 0x0008(0x0010) UNKNOWN PROPERTY: ArrayProperty
		bool                                                       bOnlyConsiderParticipants;                               // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOnlyConsiderNonParticipants;                            // 0x0019(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PZM2[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.TargetPointInfoGenerator
	 * Size -> 0x0028
	 */
	struct FTargetPointInfoGenerator
	{
	public:
		ETargetPointInfoType                                       Type;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RGWL[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                BoneOrSocketName;                                        // 0x0004(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsSocket;                                               // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GFYH[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             LocalSpaceOffset;                                        // 0x0010(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            LocalRotationOffset;                                     // 0x001C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ImpactSensorSweepSettings
	 * Size -> 0x0010
	 */
	struct FImpactSensorSweepSettings
	{
	public:
		bool                                                       bUseSensorRadiusForSweepRadius;                          // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_REPX[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SweepTestSphereRadius;                                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESensorSweepMethod                                         SensorSweepMethod;                                       // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X5SX[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SweepLengthAsFractionOfCamToSensorDist;                  // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimSetTraversalGroupState
	 * Size -> 0x0020
	 */
	struct FAnimSetTraversalGroupState
	{
	public:
		class UAnimSetSelectionOrder*                              Order;                                                   // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G1IS[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bExpressionValue;                                        // 0x0018(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M546[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimSetVelocityAngleGroupState
	 * Size -> 0x0010
	 */
	struct FAnimSetVelocityAngleGroupState
	{
	public:
		class UAnimSetSelectionOrder*                              Order;                                                   // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J8Y6[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimSetVelocitySpeedGroupState
	 * Size -> 0x0058
	 */
	struct FAnimSetVelocitySpeedGroupState
	{
	public:
		TArray<struct FAnimSetVelocityAngleGroupState>             AngleGroupStates;                                        // 0x0000(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_83G4[0x48];                                  // 0x0010(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.FactConfigurationHelper
	 * Size -> 0x0020
	 */
	struct FFactConfigurationHelper
	{
	public:
		TArray<struct FKnowledgeBaseValueSelector>                 Facts;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FKnowledgeBaseFactKey>                       CounterFacts;                                            // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimSetCollectionItem
	 * Size -> 0x0030
	 */
	struct FAnimSetCollectionItem
	{
	public:
		class UClass*                                              AnimSetClass;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSetData*                                        AnimSetData;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             AnimAsset;                                               // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             InstancedAnimAsset;                                      // 0x0018(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObjectSet*                                          AnimSet;                                                 // 0x0020(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ICX0[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimSetItem
	 * Size -> 0x0040
	 */
	struct FAnimSetItem
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WI43[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             Asset;                                                   // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UObject*                                             InstancedAsset;                                          // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              AsyncAsset[0x28];                                        // 0x0018(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct DeadIsland.AnimSetGroup
	 * Size -> 0x0060
	 */
	struct FAnimSetGroup
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0008(0x0038) Edit, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              Order;                                                   // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowSingleNullEntry;                                   // 0x0048(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4V06[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAnimSetItem>                                Items;                                                   // 0x0050(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimSetTraversalGroup
	 * Size -> 0x0050 (FullSize[0x00B0] - InheritedSize[0x0060])
	 */
	struct FAnimSetTraversalGroup : public FAnimSetGroup
	{
	public:
		struct FFloatRange                                         AscentRange;                                             // 0x0060(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatRange                                         DescentRange;                                            // 0x0070(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatRange                                         ObstacleWidthRange;                                      // 0x0080(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatRange                                         HeightClearanceRange;                                    // 0x0090(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatRange                                         DistanceRange;                                           // 0x00A0(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimSetVelocityAngleGroup
	 * Size -> 0x0030
	 */
	struct FAnimSetVelocityAngleGroup
	{
	public:
		bool                                                       bMatchesZeroVelocity;                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SO0S[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              Order;                                                   // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAnimSetItem>                                Items;                                                   // 0x0010(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FVector                                             AngleRangeCentreDirection;                               // 0x0020(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      CosAngleRangeCentreExtent;                               // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.AnimSetVelocitySpeedGroup
	 * Size -> 0x0058
	 */
	struct FAnimSetVelocitySpeedGroup
	{
	public:
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0000(0x0038) Edit, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatRange                                         SpeedRange;                                              // 0x0038(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAnimSetVelocityAngleGroup>                  AngleGroups;                                             // 0x0048(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.OverlappedAreaInstanceInfo
	 * Size -> 0x0010
	 */
	struct FOverlappedAreaInstanceInfo
	{
	public:
		TWeakObjectPtr<class UAreaOfEffectBase>                    AreaOfEffect;                                            // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S3LS[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.OverlappedAreaTypeInfo
	 * Size -> 0x0010
	 */
	struct FOverlappedAreaTypeInfo
	{
	public:
		TArray<struct FOverlappedAreaInstanceInfo>                 AreaInstances;                                           // 0x0000(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ArmSwayLayerData
	 * Size -> 0x0004
	 */
	struct FArmSwayLayerData
	{
	public:
		float                                                      SmoothTime;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttachmentSetup
	 * Size -> 0x0024
	 */
	struct FAttachmentSetup
	{
	public:
		class FName                                                AttachmentName;                                          // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseFactKey                               AttachedFact;                                            // 0x0008(0x000C) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCreateAttachedFact;                                     // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SJD6[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseFactKey                               BreakingConditionsFactName;                              // 0x0018(0x000C) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttachmentHealthConfig
	 * Size -> 0x0010
	 */
	struct FAttachmentHealthConfig
	{
	public:
		float                                                      MaxHealthFromTheFractionOfOwnersMaxHealth;               // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseFactKey                               HealthFactName;                                          // 0x0004(0x000C) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttachmentImpactConfig
	 * Size -> 0x0014
	 */
	struct FAttachmentImpactConfig
	{
	public:
		int32_t                                                    RequiredNumberOfImpacts;                                 // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseFactKey                               ImpactsRequiredFactName;                                 // 0x0004(0x000C) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bImpactsInitialised;                                     // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5ONQ[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AttachmentDamageAndImpactsToIgnoreConfig
	 * Size -> 0x0020
	 */
	struct FAttachmentDamageAndImpactsToIgnoreConfig
	{
	public:
		TArray<struct FKnowledgeBaseFactKey>                       IgnoreImpactsWhileTheseFactsAreActive;                   // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FKnowledgeBaseFactKey>                       ImpactFactsToIgnore;                                     // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttachmentRemovalConfig
	 * Size -> 0x001C
	 */
	struct FAttachmentRemovalConfig
	{
	public:
		bool                                                       bRemoveAttachment;                                       // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2BYV[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                DetachmentEventName;                                     // 0x0004(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseFactKey                               ForcedDetachmentImpactFact;                              // 0x000C(0x000C) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ForceRequirementForForcedDetachment;                     // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttachmentFuryConfig
	 * Size -> 0x0010
	 */
	struct FAttachmentFuryConfig
	{
	public:
		bool                                                       bFuryConditionsToForceDetach;                            // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GUW5[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FuryDamageAsAFractionOfMaxHealthRequirement;             // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCurrentHealthFractionInsteadOfMaxHealth;                // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LMOA[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FuryForceRequirement;                                    // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttachmentPieceSettings
	 * Size -> 0x00A8
	 */
	struct FAttachmentPieceSettings
	{
	public:
		struct FAttachmentSetup                                    RequiredAttachmentSetup;                                 // 0x0000(0x0024) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FAttachmentHealthConfig                             AttachmentHealthSettings;                                // 0x0024(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FAttachmentImpactConfig                             AttachmentImpactSettings;                                // 0x0034(0x0014) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FAttachmentDamageAndImpactsToIgnoreConfig           AttachmentImpactsAndDamageToIgnore;                      // 0x0048(0x0020) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FAttachmentRemovalConfig                            AttachmentRemovalSettings;                               // 0x0068(0x001C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FAttachmentFuryConfig                               AttachmentFurySettings;                                  // 0x0084(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XN0A[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UPerkDefinition*>                             UniqueAttachmentPerk;                                    // 0x0098(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.StateTransmissionSettings
	 * Size -> 0x0020
	 */
	struct FStateTransmissionSettings
	{
	public:
		ETransmittableStatus                                       StatusType;                                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1S7O[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TransmissionRadius;                                      // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActivation;                                           // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BSE3[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Strength;                                                // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAddBlockReason;                                         // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6LRC[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                BlockReason;                                             // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlockDuration;                                           // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.StatusEffectSettings
	 * Size -> 0x0018
	 */
	struct FStatusEffectSettings
	{
	public:
		class UClass*                                              StatusEffectType;                                        // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              StatusEffectIgnoredForReactions;                         // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R2W1[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StatusEffectTriggerChance;                               // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStatusEffectParams*                                 StatusEffectParams;                                      // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.StatusEffectArray
	 * Size -> 0x0010
	 */
	struct FStatusEffectArray
	{
	public:
		TArray<struct FStatusEffectSettings>                       Effects;                                                 // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AccumulatingEffectTypeAndValue
	 * Size -> 0x000C
	 */
	struct FAccumulatingEffectTypeAndValue
	{
	public:
		EAccumulatingEffectType                                    EffectType;                                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyMaxValue;                                          // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2LRJ[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ValueToApply;                                            // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanExtendEffectDuration;                                 // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SXVS[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AccumulatingEffectArray
	 * Size -> 0x0010
	 */
	struct FAccumulatingEffectArray
	{
	public:
		TArray<struct FAccumulatingEffectTypeAndValue>             AccumulatingEffects;                                     // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizedWorldBroadcastSettings
	 * Size -> 0x0014
	 */
	struct FPhysicalizedWorldBroadcastSettings
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBroadcastInRadius;                                      // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TE8Q[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Radius;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPhysicalizedWorldAffectedActorsPolicy                     AffectedActorPolicy;                                     // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HRDJ[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizedWorldStateBroadcastSettings
	 * Size -> 0x001C
	 */
	struct FPhysicalizedWorldStateBroadcastSettings
	{
	public:
		struct FPhysicalizedWorldBroadcastSettings                 Settings;                                                // 0x0000(0x0014) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bBeginState;                                             // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFiniteDuration;                                         // 0x0015(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N5RW[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Duration;                                                // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizedWorldStatesAndEvents
	 * Size -> 0x0020
	 */
	struct FPhysicalizedWorldStatesAndEvents
	{
	public:
		TArray<struct FPhysicalizedWorldBroadcastSettings>         Events;                                                  // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FPhysicalizedWorldStateBroadcastSettings>    States;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ImpactSettings
	 * Size -> 0x00C8
	 */
	struct FImpactSettings
	{
	public:
		float                                                      WeaponSizeMultiplier;                                    // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XMOS[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FStateTransmissionSettings>                  EnvironmentalMessagesToTransmit;                         // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		struct FStatusEffectArray                                  StatusEffects;                                           // 0x0018(0x0010) Edit, BlueprintVisible, RepSkip, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FAccumulatingEffectArray                            AccumulatingEffectsToApply;                              // 0x0028(0x0010) Edit, BlueprintVisible, RepSkip, NativeAccessSpecifierPublic
		struct FPhysicalizedWorldStatesAndEvents                   PhysicalizedWorldStatesAndEventsToApply;                 // 0x0038(0x0020) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FStimChooser                                        ImpactStim;                                              // 0x0058(0x0010) Edit, BlueprintVisible, RepSkip, NoDestructor, NativeAccessSpecifierPublic
		float                                                      ImpactStimRadius;                                        // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ImpactStimDuration;                                      // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHitEffectTree*                                      AttackerEffectTree;                                      // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHitEffectTree*                                      VictimEffectTree;                                        // 0x0078(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHitEffectTree*                                      EnvironmentEffectTree;                                   // 0x0080(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WorldSpaceImpulseMagnitude;                              // 0x0088(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PhysicalizedReactionMagnitude;                           // 0x008C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDoesCancelHealthRegen;                                  // 0x0090(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanCauseCosmeticFlinches;                               // 0x0091(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanLaunch;                                              // 0x0092(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NSPD[0x5];                                   // 0x0093(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULaunchSettings*                                     LaunchSettings;                                          // 0x0098(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDamageLevelScalingPolicy                                  DamageLevelScalingPolicy;                                // 0x00A0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAccumulatingEffectScalingPolicy                           AccumulatingEffectsScalingPolicy;                        // 0x00A1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3BQB[0x6];                                   // 0x00A2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAttributeLevelScalingSettingsWrapper*               OverrideDefaultDamageScalingSettings;                    // 0x00A8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAttributeLevelScalingSettingsWrapper*               OverrideDefaultAccumulatingEffectsScalingSettings;       // 0x00B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FKnowledgeBaseValueSelector>                 CustomImpactFacts;                                       // 0x00B8(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ImpactConfiguration
	 * Size -> 0x00D8
	 */
	struct FImpactConfiguration
	{
	public:
		bool                                                       bUseImpactSettingsPreset;                                // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VOL0[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UImpactSettingsPreset*                               PresetSettings;                                          // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FImpactSettings                                     Settings;                                                // 0x0010(0x00C8) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttackDefinitionAttack
	 * Size -> 0x0018
	 */
	struct FAttackDefinitionAttack
	{
	public:
		class UAnimMontage*                                        FixedWindUpMontage;                                      // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                        Montage;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackLocationOffset;                                    // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverrideSuccessDistance;                                 // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttackDefinitionWindUp
	 * Size -> 0x0078
	 */
	struct FAttackDefinitionWindUp
	{
	public:
		class UWindUpDefinition*                                   WindUp;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            Condition;                                               // 0x0008(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CancelInvisibleWindUpAfterSeconds;                       // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WindUpVisibleAtDistance;                                 // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CancelWindUpAtDistance;                                  // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CannotCancelWindUpWithinDistance;                        // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CancelWindUpAfterSeconds;                                // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMeleeImpactProfile*                                 DefaultImpactProfile;                                    // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxForwardLeadDistance;                                  // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxBackwardLeadistance;                                  // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAttackDefinitionAttack>                     Attacks;                                                 // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.LevelToValueArray
	 * Size -> 0x0010
	 */
	struct FLevelToValueArray
	{
	public:
		TArray<float>                                              AttributeValueAtLevel;                                   // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AugmentAnimData
	 * Size -> 0x0018
	 */
	struct FAugmentAnimData
	{
	public:
		class FName                                                AugmentActionName;                                       // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                        LeftHandMontage;                                         // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                        RightHandMontage;                                        // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ProceduralGenerationContext
	 * Size -> 0x0038
	 */
	struct FProceduralGenerationContext
	{
	public:
		int32_t                                                    Seed;                                                    // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ERGT[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UProceduralPropertiesDefinition*                     ProceduralPropertiesDefinition;                          // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemRarity                                                RequiredRarity;                                          // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_88NV[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RequiredLevel;                                           // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UpgradeCount;                                            // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ModLevel;                                                // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayerUnlockedPerksOnly;                                // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TI91[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UItemInitialUpgradeConfig*                           ItemPerkUpgradeConfigOverride;                           // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UItemInitialUpgradeConfig*                           ItemModUpgradeConfigOverride;                            // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AutoAimSensitivityCurves
	 * Size -> 0x0010
	 */
	struct FAutoAimSensitivityCurves
	{
	public:
		class UCurveFloat*                                         ControllerCurve;                                         // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         MouseAndKeyboardCurve;                                   // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.TargetSelectionScoreSettings
	 * Size -> 0x0050
	 */
	struct FTargetSelectionScoreSettings
	{
	public:
		float                                                      MaxDegreesFromForwardDir;                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceHeuristicWeighting;                              // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AngleHeuristicWeighting;                                 // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HorizontalVsVerticalAngularScoreDistribution;            // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScreenSpaceOverlapHeuristicWeighting;                    // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDebugDraw;                                              // 0x0014(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTargetMustMeetKBRequirements;                           // 0x0015(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTargetWithoutKBComponentTreatedAsValid;                 // 0x0016(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J1Q9[0x1];                                   // 0x0017(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            TargetEligibilityExpression;                             // 0x0018(0x0038) Edit, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.TargetSelectionSettings
	 * Size -> 0x0060
	 */
	struct FTargetSelectionSettings
	{
	public:
		float                                                      MinDistance;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDistance;                                             // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bProhibitModificationIfRequestDirectionAlreadyHitsTarget; // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SLHH[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTargetSelectionScoreSettings                       ScoreSettings;                                           // 0x0010(0x0050) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DynamicContextScaleMultipliers
	 * Size -> 0x0020
	 */
	struct FDynamicContextScaleMultipliers
	{
	public:
		bool                                                       bDistanceScalingActive;                                  // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3DU2[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ScaleMultiplierStartDistance;                            // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScaleMultiplierEndDistance;                              // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScaleMultiplierAppliedAtStartDistance;                   // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlobalScaleMultiplier;                                   // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAdjustSillhouetteTargetPointsInsideMesh;                // 0x0014(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H80Q[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SillhoueteEdgeToContextCenterAdjustFraction;             // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaximumSillhoueteEdgeToContextCenterAdjustDistance;      // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ViewTargetParams
	 * Size -> 0x003C
	 */
	struct FViewTargetParams
	{
	public:
		float                                                      SmoothTime;                                              // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchSmoothTime;                                         // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDegreesPerSecondAdjustRate;                           // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableIfTargetTooFarFromViewDir;                       // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CN3F[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ToleratedAngularDeviationFromViewDir;                    // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUserInputCanDisable;                                    // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QI58[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ToleratedInputDirectionDeviationInDegrees;               // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EViewTargetDiffOutcome                                     DiffSubstantialEnoughOutcome;                            // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUnregisterRequestIfSourceIsAtTargetPoint;               // 0x001D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IGCM[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TargetPointToleranceYawAxis;                             // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetPointTolerancePitchAxis;                           // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bYawAdjustEnabled;                                       // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EViewTargetValueSource                                     YawAdjustValueSource;                                    // 0x0029(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6LB3[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OptionalTargetYawAbsoluteValue;                          // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPitchAdjustEnabled;                                     // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EViewTargetValueSource                                     PitchAdjustValueSource;                                  // 0x0031(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NQUY[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OptionalTargetPitchAbsoluteValue;                        // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutoAimSensitivity;                                      // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AutoAimParameters
	 * Size -> 0x0138
	 */
	struct FAutoAimParameters
	{
	public:
		struct FTargetSelectionSettings                            ActorSelectionSettings;                                  // 0x0000(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FTargetSelectionSettings                            ContextSelectionSettings;                                // 0x0060(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		class FString                                              OptionalTargetContextConfigSetName;                      // 0x00C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDynamicContextScaleMultipliers                     DynamicContextScaleMultipliers;                          // 0x00D0(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FViewTargetParams                                   ViewGuidanceSettings;                                    // 0x00F0(0x003C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		float                                                      ReticleMaxDistance;                                      // 0x012C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectiveAttackRange;                                    // 0x0130(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MVHZ[0x4];                                   // 0x0134(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AutophageContributionSource
	 * Size -> 0x001C
	 */
	struct FAutophageContributionSource
	{
	public:
		float                                                      IncreaseQuantity;                                        // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VWWM[0x18];                                  // 0x0004(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ActiveAutophageEffects
	 * Size -> 0x0038
	 */
	struct FActiveAutophageEffects
	{
	public:
		unsigned char                                              UnknownData_LVAE[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAutophageEffectTierDefinition*>              ActiveAutophageEffectTiers;                              // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FGuid>                                       ActivePerks;                                             // 0x0018(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FGuid>                                       ActiveModifiers;                                         // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ModifierAndValue
	 * Size -> 0x0010
	 */
	struct FModifierAndValue
	{
	public:
		class UModifiableValueDefinition*                          Modifier;                                                // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R5HU[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ZombieWeightedList
	 * Size -> 0x0018
	 */
	struct FZombieWeightedList
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UHLS[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      ZombieTypes;                                             // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ZombieSpawnEntry
	 * Size -> 0x0020
	 */
	struct FZombieSpawnEntry
	{
	public:
		uint32_t                                                   From;                                                    // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   To;                                                      // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemRarity                                                ZombieRank;                                              // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K7P5[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FZombieWeightedList>                         ZombiesToSpawn;                                          // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.WeaponFilter
	 * Size -> 0x0090
	 */
	struct FWeaponFilter
	{
	public:
		bool                                                       bFilterByImpactType;                                     // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8WDN[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EImpactType>                                        ImpactTypes;                                             // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bFilterBySize;                                           // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CH71[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESizeCategory>                                      SizeCategories;                                          // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bFilterByHoldType;                                       // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HLQ2[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EHoldCategory>                                      HoldCategories;                                          // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bFilterByKBFact;                                         // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GR9D[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            KBExpression;                                            // 0x0050(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFilterRule                                                FilterRule;                                              // 0x0088(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZJ4M[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.BodyPartImpalingFilter
	 * Size -> 0x0030
	 */
	struct FBodyPartImpalingFilter
	{
	public:
		TArray<class FName>                                        BodyPartNames;                                           // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FWeaponFilter>                               WeaponFilters;                                           // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		class FString                                              ArrayElementTitleText;                                   // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.GameplayState
	 * Size -> 0x0002
	 */
	struct FGameplayState
	{
	public:
		EBodyPartGameplayState                                     GameplayState;                                           // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSuppressResponses;                                      // 0x0001(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DSDamageDataForBodyPart
	 * Size -> 0x0008
	 */
	struct FDSDamageDataForBodyPart
	{
	public:
		bool                                                       bHeavyAttack;                                            // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanCauseBreak;                                          // 0x0001(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanCauseDismember;                                      // 0x0002(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpawnLimbsOnDismember;                                  // 0x0003(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Force;                                                   // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ClippedGlassSettings
	 * Size -> 0x0008
	 */
	struct FClippedGlassSettings
	{
	public:
		float                                                      ImpulseJitterPercent;                                    // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwakeTimeSeconds;                                        // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.BreathingAudioMouthAnimationConfigState
	 * Size -> 0x000C
	 */
	struct FBreathingAudioMouthAnimationConfigState
	{
	public:
		float                                                      MiniumumMouthAdditive;                                   // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaximumMouthAdditive;                                    // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClampMouthAdditiveFraction;                             // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7UDK[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DataAssetReflector
	 * Size -> 0x0030
	 */
	struct FDataAssetReflector
	{
	public:
		struct FBlackboardKeySelector                              AssetBlackboardKey;                                      // 0x0000(0x0028) Edit, NativeAccessSpecifierPublic
		class FName                                                AssetPropertyName;                                       // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FloatValueSource
	 * Size -> 0x0060
	 */
	struct FFloatValueSource
	{
	public:
		EValueSource                                               Source;                                                  // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M0CR[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ValueRaw;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBlackboardKeySelector                              ValueBlackboard;                                         // 0x0008(0x0028) Edit, NativeAccessSpecifierPublic
		struct FDataAssetReflector                                 ValueDataAsset;                                          // 0x0030(0x0030) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.OffsetCheckCondition
	 * Size -> 0x001C
	 */
	struct FOffsetCheckCondition
	{
	public:
		struct FVector                                             Direction;                                               // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOffsetCheckSpace                                          Space;                                                   // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOffsetCheckPredicate                                      Predicate;                                               // 0x000D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OWMY[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Value;                                                   // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Tolerance;                                               // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEitherDirection;                                        // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U65I[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SurfacePenetrationSettings
	 * Size -> 0x0008
	 */
	struct FSurfacePenetrationSettings
	{
	public:
		bool                                                       bPenetrationAllowed;                                     // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0JIU[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PenetrationHPReduction;                                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CameraModifierVariables
	 * Size -> 0x0014
	 */
	struct FCameraModifierVariables
	{
	public:
		EModifierType                                              CurrentType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EValueType                                                 ValueType;                                               // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7725[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DesiredValue;                                            // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0ZSD[0xC];                                   // 0x0008(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MenuElementObjectLinkageData
	 * Size -> 0x0060
	 */
	struct FMenuElementObjectLinkageData
	{
	public:
		EMenuElementObjectLinkageType                              Type;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8BWQ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              GFxPath;                                                 // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ClassName;                                               // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              InstanceName;                                            // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USwfMovie*                                           LoaderSwfMovie;                                          // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     LoaderImageAsset;                                        // 0x0040(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSetInitObject;                                          // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bElementLocksChangingType;                               // 0x0059(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6LN7[0x6];                                   // 0x005A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.TravelRequestParams
	 * Size -> 0x0058
	 */
	struct FTravelRequestParams
	{
	public:
		class UObjectiveData*                                      DebugObjectiveData;                                      // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     OverrideEquipmentPack;                                   // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     InitialFactState;                                        // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EAIS[0x20];                                  // 0x0038(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.EquippableGameEventStates
	 * Size -> 0x0010
	 */
	struct FEquippableGameEventStates
	{
	public:
		class UGameEventState*                                     WeaponEquippedState;                                     // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameEventState*                                     WeaponState;                                             // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.EquippableAudioParams
	 * Size -> 0x0048
	 */
	struct FEquippableAudioParams
	{
	public:
		struct FAkPostEventExtraParams                             PostEventExtraParams;                                    // 0x0000(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_17F7[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAudioFactNameSwitchGroupNamePair*>           AudioFactsAndSwitchGroups;                               // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class UAudioFactNameRTPCNamePair*>                  AudioFactsAndRTPCs;                                      // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       OnAssignedEvent;                                         // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       OnRemovedEvent;                                          // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAuxBus*                                           EarlyReflectionBus;                                      // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.EquippableData
	 * Size -> 0x0150
	 */
	struct FEquippableData
	{
	public:
		class UHeldItemData*                                       HeldItemData;                                            // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ModelActor;                                              // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 HoldOffset;                                              // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bEnableHoldingHandIK_1_UsingBone;                        // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NNW9[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULimbIKConfigDefinition*                             HoldingLeftHandIKConfig;                                 // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULimbIKConfigDefinition*                             HoldingRightHandIKConfig;                                // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HoldingLeftHandIKBoneName;                               // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HoldingRightHandIKBoneName;                              // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableHoldingHandIK_2_UsingTable;                       // 0x0048(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_50LW[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULimbIKConfigDefinition*                             HoldingLeftHandIKConfig_2_UsingTable;                    // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULimbIKConfigDefinition*                             HoldingRightHandIKConfig_2_UsingTable;                   // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 HandIKTransforms;                                        // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                HoldingHandIK_2_RelativeCharacterBoneForTableTransforms; // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableHoldingHandIK_3_UsingSocket;                      // 0x0078(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5TN7[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULimbIKConfigDefinition*                             HoldingLeftHandIKConfig_3_UsingSocket;                   // 0x0080(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULimbIKConfigDefinition*                             HoldingRightHandIKConfig_3_UsingSocket;                  // 0x0088(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HoldingLeftHandIKSocketName;                             // 0x0090(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HoldingRightHandIKSocketName;                            // 0x0098(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHoldCategory                                              HoldStyle;                                               // 0x00A0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESizeCategory                                              SizeCategory;                                            // 0x00A1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EImpactType                                                ImpactType;                                              // 0x00A2(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2I1I[0xD];                                   // 0x00A3(0x000D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          OffhandRelativeTransform;                                // 0x00B0(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FKnowledgeBaseValueSelector>                 FactsSetWhenHeld;                                        // 0x00E0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class UAkSwitchValue*>                              AkSwitchValues;                                          // 0x00F0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FEquippableAudioParams                              AudioParams;                                             // 0x0100(0x0048) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      ArmSwayStrengthMultiplier;                               // 0x0148(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ArmSwayLagMultiplier;                                    // 0x014C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MeleeSweepParams
	 * Size -> 0x0020
	 */
	struct FMeleeSweepParams
	{
	public:
		float                                                      TraceDistance;                                           // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TraceHeight;                                             // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StabTraceDistance;                                       // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StabSphereRadius;                                        // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                StabDisplacementCurveName;                               // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ImpactOnCollisionParams_RequestBase
	 * Size -> 0x0040
	 */
	struct FImpactOnCollisionParams_RequestBase
	{
	public:
		unsigned char                                              UnknownData_X44K[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPrimitiveComponent*                                 Collider;                                                // 0x0008(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FEventInstigator                                    Instigator;                                              // 0x0010(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      ActorTypesToIgnore;                                      // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ImpactOnCollisionParams_HitRequest
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	struct FImpactOnCollisionParams_HitRequest : public FImpactOnCollisionParams_RequestBase
	{	};

	/**
	 * ScriptStruct DeadIsland.ImpactOnCollisionParams_OverlapRequest
	 * Size -> 0x0010 (FullSize[0x0050] - InheritedSize[0x0040])
	 */
	struct FImpactOnCollisionParams_OverlapRequest : public FImpactOnCollisionParams_RequestBase
	{
	public:
		TArray<ECollisionChannel>                                  CollisionObjectTypes;                                    // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ImpactOnCollisionDetection_InstigatorDependency
	 * Size -> 0x0028
	 */
	struct FImpactOnCollisionDetection_InstigatorDependency
	{
	public:
		struct FEventInstigator                                    Instigator;                                              // 0x0000(0x0010) NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FGuid>                                       DependentRequests;                                       // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bBoundControllerEndPlay;                                 // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBoundPawnEndPlay;                                       // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DZFL[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CentralNotificationLocationNameParams
	 * Size -> 0x0020
	 */
	struct FCentralNotificationLocationNameParams
	{
	public:
		struct FSoftObjectPath                                     LocationImage;                                           // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       LocationAudio;                                           // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MissionTelemetryHandler
	 * Size -> 0x0048
	 */
	struct FMissionTelemetryHandler
	{
	public:
		class UQuestUIEntity*                                      QuestUIEntity;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              MissionName;                                             // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              MissionNamespace;                                        // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              MissionTypeName;                                         // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              MissionFileName;                                         // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.QuestUIFlourishParams
	 * Size -> 0x00A8
	 */
	struct FQuestUIFlourishParams
	{
	public:
		struct FGuid                                               QuestGuid;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                QuestName;                                               // 0x0010(0x0018) NativeAccessSpecifierPublic
		class FText                                                QuestNameAllCaps;                                        // 0x0028(0x0018) NativeAccessSpecifierPublic
		EQuestUIState                                              FlourishState;                                           // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OWUB[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDIMissionType*                                      MissionType;                                             // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameReward*                                         Reward;                                                  // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowUntrackedObjectiveUpdates;                          // 0x0058(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3G9T[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMissionTelemetryHandler                            MissionTelemetryHandler;                                 // 0x0060(0x0048) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ObjectiveUIQuestData
	 * Size -> 0x0003
	 */
	struct FObjectiveUIQuestData
	{
	public:
		EUIAudioTriggerEvent                                       ObjectiveAudio;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bQuestIsTracked;                                         // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowUpdatesEvenIfQuestUntracked;                        // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ObjectiveTelemetryHandler
	 * Size -> 0x0048
	 */
	struct FObjectiveTelemetryHandler
	{
	public:
		class UObjectiveUIEntity_DIObjectiveData*                  ObjectiveUIEntity;                                       // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              ObjectiveFileName;                                       // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              ObjectiveType;                                           // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              MissionName;                                             // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              MissionNamespace;                                        // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.ObjectiveUIFlourishParams
	 * Size -> 0x0080
	 */
	struct FObjectiveUIFlourishParams
	{
	public:
		struct FGuid                                               ObjectiveGuid;                                           // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0010(0x0018) NativeAccessSpecifierPublic
		EObjectiveUIState                                          FlourishState;                                           // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XEYK[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           FlourishProgress;                                        // 0x002C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FObjectiveUIQuestData                               QuestData;                                               // 0x0034(0x0003) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L1M4[0x1];                                   // 0x0037(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FObjectiveTelemetryHandler                          TelemetryHandler;                                        // 0x0038(0x0048) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ItemRepresentation
	 * Size -> 0x0068
	 */
	struct FItemRepresentation
	{
	public:
		class UItemArchetype*                                      Archetype;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UIIcon;                                                  // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                CustomPlayerAssignedName;                                // 0x0018(0x0018) NativeAccessSpecifierPublic
		TArray<class FText>                                        Prefixes;                                                // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class FText                                                ShorthandName;                                           // 0x0040(0x0018) NativeAccessSpecifierPublic
		int32_t                                                    ItemLevel;                                               // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemRepresentationType                                    ItemType;                                                // 0x005C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELootTier                                                  LootTier;                                                // 0x005D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EUIItemBackgroundStyle                                     BackgroundStyle;                                         // 0x005E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemRarity                                                Rarity;                                                  // 0x005F(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMeleeWeaponDurability                                     WeaponDurability;                                        // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5OXL[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MaxStaminaAttributeTypeAndInitialSettings
	 * Size -> 0x0070
	 */
	struct FMaxStaminaAttributeTypeAndInitialSettings
	{
	public:
		class UMaxStaminaAttributeType*                            AttributeType;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAttributeInitialSettings                           InitialSettings;                                         // 0x0008(0x0068) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CharacterContextTargetQueryParams
	 * Size -> 0x0040
	 */
	struct FCharacterContextTargetQueryParams
	{
	public:
		class UKnowledgeBaseComponent*                             RequesterKnowledgeBaseComponent;                         // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerController*                                   RequesterPlayerController;                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4F91[0x30];                                  // 0x0010(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.QueryResultSummary
	 * Size -> 0x0078
	 */
	struct FQueryResultSummary
	{
	public:
		bool                                                       bValid;                                                  // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N4MR[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCharacterContext*                                   CharacterContext;                                        // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTargetPointInfo                                    TargetPointInfo;                                         // 0x0010(0x0050) BlueprintVisible, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOwnerOnScreen;                                          // 0x0060(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WN2B[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ScreenSpaceOverlapScoreNormalized;                       // 0x0064(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           OwnerScreenSpaceDimensionsNormalized;                    // 0x0068(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ScreenSpaceLocation;                                     // 0x0070(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CharacterContextSelectionCandidate
	 * Size -> 0x00E0
	 */
	struct FCharacterContextSelectionCandidate
	{
	public:
		bool                                                       bHasVictimKBConditions;                                  // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X5SL[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            VictimKBConditions;                                      // 0x0008(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasRequesterKBConditions;                               // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BOJU[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            RequesterKBConditions;                                   // 0x0048(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasKBConditions;                                        // 0x0080(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NVEI[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            KBConditions;                                            // 0x0088(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMaxOwnerScreenSpaceSize;                                // 0x00C0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0QHS[0x3];                                   // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxOwnerScreenSpaceSize;                                 // 0x00C4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMinOwnerScreenSpaceSize;                                // 0x00C8(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_227R[0x3];                                   // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinOwnerScreenSpaceSize;                                 // 0x00CC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharacterContext*                                   CharacterContext;                                        // 0x00D0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PHTT[0x8];                                   // 0x00D8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CharacterGenderData
	 * Size -> 0x0128
	 */
	struct FCharacterGenderData
	{
	public:
		class FText                                                DisplayName;                                             // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                DisplayClassName;                                        // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                DisplayQuote;                                            // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                DisplayDescription;                                      // 0x0048(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                DisplayBio;                                              // 0x0060(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DisplayImage;                                            // 0x0078(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DisplayProfileImage;                                     // 0x0090(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSelectable;                                             // 0x00A8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSelectedByDefault;                                      // 0x00A9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PTJW[0x6];                                   // 0x00AA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     PreviewMesh;                                             // 0x00B0(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PreviewMontage;                                          // 0x00C8(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     CharacterAttributeValueSetRef;                           // 0x00E0(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SkillSlotsConfigRef;                                     // 0x00F8(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     CharacterNameTexture;                                    // 0x0110(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CharacterArchetype
	 * Size -> 0x000C
	 */
	struct FCharacterArchetype
	{
	public:
		TWeakObjectPtr<class UCharacterData>                       CharacterType;                                           // 0x0000(0x0008) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharacterGender                                           CharacterGender;                                         // 0x0008(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MV9O[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CharacterProfileProgressionData
	 * Size -> 0x0028
	 */
	struct FCharacterProfileProgressionData
	{
	public:
		class FText                                                ProgressCaption;                                         // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FName                                                StatID;                                                  // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Weighting;                                               // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W8QF[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SmoothLocationTracker
	 * Size -> 0x0018
	 */
	struct FSmoothLocationTracker
	{
	public:
		float                                                      AngleToTargetSmoothTime;                                 // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FQLF[0x14];                                  // 0x0004(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CombatEffectivenessValues
	 * Size -> 0x0010
	 */
	struct FCombatEffectivenessValues
	{
	public:
		float                                                      AttackCorrectionDistanceScale;                           // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackCorrectionAngleScale;                              // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WindUpSuccessDistanceScale;                              // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WindUpSuccessAngleScale;                                 // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CombatEnvelope
	 * Size -> 0x0010
	 */
	struct FCombatEnvelope
	{
	public:
		float                                                      AttackTime;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReleaseTime;                                             // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4X29[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CombatStimBaseValues
	 * Size -> 0x0028
	 */
	struct FCombatStimBaseValues
	{
	public:
		float                                                      Score;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCombatEnvelope                                     Envelope;                                                // 0x0004(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FCombatEnvelope                                     CurrentTargetEnvelope;                                   // 0x0014(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bMakesTargetPerceptible;                                 // 0x0024(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SCRH[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CombatStimModifier
	 * Size -> 0x0170
	 */
	struct FCombatStimModifier
	{
	public:
		ECombatStimModifierType                                    Type;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8FDK[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0008(0x0038) Edit, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  ValueToCombatScoreMultiplier;                            // 0x0040(0x0098) Edit, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  ValueToEnvelopeAttackMultiplier;                         // 0x00D8(0x0098) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CombatStimModifierSet
	 * Size -> 0x0010
	 */
	struct FCombatStimModifierSet
	{
	public:
		TArray<struct FCombatStimModifier>                         Modifiers;                                               // 0x0000(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.IconData
	 * Size -> 0x0058
	 */
	struct FIconData
	{
	public:
		EIconFormat                                                IconFormat;                                              // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3J4D[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     IconImage;                                               // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USwfMovie*                                           IconSwfClass;                                            // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              IconSwfSymbol;                                           // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              IconSwfLabel;                                            // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Offset;                                                  // 0x004C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R5J9[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ConditionalBasePoseCandidate
	 * Size -> 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
	 */
	struct FConditionalBasePoseCandidate : public FConditionalListElement
	{
	public:
		class UAnimSequence*                                       AdditivePose;                                            // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TransitionIntoTime;                                      // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinimumTimeToBeSpentInPose;                              // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPoseBlendMode                                             TransitionBlendMode;                                     // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0YHZ[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ConditionalLootFactCollectionCandidate
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FConditionalLootFactCollectionCandidate : public FConditionalListElement
	{
	public:
		class ULootRollFactCollection*                             LootRollFactCollection;                                  // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ModifierDefinition
	 * Size -> 0x0050
	 */
	struct FModifierDefinition
	{
	public:
		class UModifiableValueDefinition*                          ValueType;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpecifyModifierAsAbsoluteValue;                         // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CRTN[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Modifier;                                                // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            ModifierValueNumericExpression;                          // 0x0010(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bResolveExpressionToAbsoluteValue;                       // 0x0048(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3PSR[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ConditionalModifierDefinition
	 * Size -> 0x0030
	 */
	struct FConditionalModifierDefinition
	{
	public:
		class FString                                              KBRequirements;                                          // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FModifierDefinition>                         Modifiers;                                               // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		class FString                                              ArrayElementTitleText;                                   // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.ConditionalObjectiveDescriptionCandidate
	 * Size -> 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
	 */
	struct FConditionalObjectiveDescriptionCandidate : public FConditionalListElement
	{
	public:
		class FText                                                Description;                                             // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RarityWeightingConfigListElement
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FRarityWeightingConfigListElement : public FConditionalListElement
	{
	public:
		class URarityWeightingConfig*                              RarityWeightingConfig;                                   // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizedWorldStateConfig
	 * Size -> 0x0010
	 */
	struct FPhysicalizedWorldStateConfig
	{
	public:
		class FName                                                StateName;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEndAutomaticallyAfterTime;                              // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VCQS[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FiniteDuration;                                          // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizedWorldStateAndEventConfig
	 * Size -> 0x0020
	 */
	struct FPhysicalizedWorldStateAndEventConfig
	{
	public:
		TArray<struct FPhysicalizedWorldStateConfig>               States;                                                  // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FName>                                        Events;                                                  // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ConditionalPhysicalizedWorldStateAndEventConfig
	 * Size -> 0x0058
	 */
	struct FConditionalPhysicalizedWorldStateAndEventConfig
	{
	public:
		struct FKnowledgeBaseExpression                            KBRequirements;                                          // 0x0000(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPhysicalizedWorldStateAndEventConfig               StatesAndEventConfig;                                    // 0x0038(0x0020) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.WeightedScoringFactor
	 * Size -> 0x0078
	 */
	struct FWeightedScoringFactor
	{
	public:
		struct FKnowledgeBaseExpression                            ScoringFactorKBExpression;                               // 0x0000(0x0038) ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RelativeWeight;                                          // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C9H6[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0040(0x0038) ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HitEffectCosmeticEffect
	 * Size -> 0x0010
	 */
	struct FHitEffectCosmeticEffect
	{
	public:
		class UCosmeticEffectsDefinition*                          Definition;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DirectionInterpolationFactor;                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YIR4[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ConditionalUINamePrefixCandidate
	 * Size -> 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
	 */
	struct FConditionalUINamePrefixCandidate : public FConditionalListElement
	{
	public:
		class FText                                                Prefix;                                                  // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ContextualAnimationCandidate
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FContextualAnimationCandidate : public FConditionalListElement
	{
	public:
		class UAnimMontage*                                        Montage;                                                 // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.BlockableActionConfig
	 * Size -> 0x000C
	 */
	struct FBlockableActionConfig
	{
	public:
		float                                                      AttackRange;                                             // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackAngleDegrees;                                      // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAngleToTargetDegrees;                                 // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DodgeableActionConfig
	 * Size -> 0x0050
	 */
	struct FDodgeableActionConfig
	{
	public:
		float                                                      BaseChanceToDodge;                                       // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackRange;                                             // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackAngleDegrees;                                      // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3FR2[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            AllowDodgeExpression;                                    // 0x0010(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowDodgeAwayFromTarget;                               // 0x0048(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowDodgeSideways;                                     // 0x0049(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LZS4[0x2];                                   // 0x004A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DodgeSidewaysThreshold;                                  // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ContextualGradualDamageEffectCandidate
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FContextualGradualDamageEffectCandidate : public FConditionalListElement
	{
	public:
		class UGradualDamageEffect*                                EffectData;                                              // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ContextualNotificationRecipesTabData
	 * Size -> 0x0010
	 */
	struct FContextualNotificationRecipesTabData
	{
	public:
		class FName                                                TabID;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMenuListHandlerRecipesCategoryData*                 InventoryCategoryData;                                   // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ContextualNotificationRecipesMenuOpenData
	 * Size -> 0x0028
	 */
	struct FContextualNotificationRecipesMenuOpenData
	{
	public:
		class FName                                                ScreenName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UMenuListHandlerRecipesCategoryData*>         InventoryCategoryDatas;                                  // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FContextualNotificationRecipesTabData>       InventoryCategoriesWithTabs;                             // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ContextualNotificationUpgradesTabData
	 * Size -> 0x0010
	 */
	struct FContextualNotificationUpgradesTabData
	{
	public:
		class FName                                                TabID;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMenuListHandlerUpgradesGroupsData*                  UpgradeGroupData;                                        // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ContextualNotificationUpgradesMenuOpenData
	 * Size -> 0x0028
	 */
	struct FContextualNotificationUpgradesMenuOpenData
	{
	public:
		class FName                                                ScreenName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UMenuListHandlerUpgradesGroupsData*>          UpgradeGroupDatas;                                       // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FContextualNotificationUpgradesTabData>      UpgradeGroupsWithTabs;                                   // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ResolvableAnimationConfig
	 * Size -> 0x0020
	 */
	struct FResolvableAnimationConfig
	{
	public:
		bool                                                       bUseAnimSet;                                             // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BIR1[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AnimSetName;                                             // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OAZZ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        ExplicitOverrideMontage;                                 // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                        ResolvedMontage;                                         // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.LandingSettings
	 * Size -> 0x0030
	 */
	struct FLandingSettings
	{
	public:
		struct FResolvableAnimationConfig                          LandAnimationConfig;                                     // 0x0000(0x0020) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bAlwaysTriggerKnockdownOnLand;                           // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFlatSurfaceDetectionEnabled;                            // 0x0021(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VWK7[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CapsuleHeightToSensorConversionMultiplier;               // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SensorExtentMultiplier;                                  // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QPDG[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.FallDistanceBasedLandingSettings
	 * Size -> 0x0038
	 */
	struct FFallDistanceBasedLandingSettings
	{
	public:
		float                                                      RequiredDistance;                                        // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DONJ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLandingSettings                                    LandingSettings;                                         // 0x0008(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RequestItem
	 * Size -> 0x0018
	 */
	struct FRequestItem
	{
	public:
		class UCoopRequest*                                        Request;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ServerStartTime;                                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W9D2[0xC];                                   // 0x000C(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.FastTravelInstanceKey
	 * Size -> 0x0008
	 */
	struct FFastTravelInstanceKey
	{
	public:
		struct FHashResultIgnoreCase                               Hash;                                                    // 0x0000(0x0004) NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EFastTravelInstanceType                                    InstanceType;                                            // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_LXXF[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GatherContext
	 * Size -> 0x0020
	 */
	struct FGatherContext
	{
	public:
		EGatherContextType                                         ContextType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7CCA[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFastTravelInstanceKey                              DestinationKey;                                          // 0x0004(0x0008) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V9L9[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMissionData*                                        MissionData;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObjectiveInstance*                                  ObjectiveInstance;                                       // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CounterReplicatedStateBlock
	 * Size -> 0x0014
	 */
	struct FCounterReplicatedStateBlock
	{
	public:
		ECounterReplicateState                                     CounterState;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U66D[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               ImpactID;                                                // 0x0004(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GrappleReplicatedStateBlock
	 * Size -> 0x0001
	 */
	struct FGrappleReplicatedStateBlock
	{
	public:
		EGrappleReplicateState                                     GrappleState;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ImpactGroupID
	 * Size -> 0x0004
	 */
	struct FImpactGroupID
	{
	public:
		unsigned char                                              UnknownData_FUWD[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DamageTypeAndQuantity
	 * Size -> 0x0010
	 */
	struct FDamageTypeAndQuantity
	{
	public:
		class UClass*                                              DamageType;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageQuantity;                                          // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OHVW[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GeneralImpactEventParams
	 * Size -> 0x01B8
	 */
	struct FGeneralImpactEventParams
	{
	public:
		struct FGuid                                               ID;                                                      // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FImpactGroupID                                      ImpactGroupID;                                           // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ODPA[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FDamageTypeAndQuantity>                      DamageEventsToApply;                                     // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		EImpactRequestNetworkPolicy                                NetworkingPolicy;                                        // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EImpactGameplayCategory                                    ImpactGameplayCategory;                                  // 0x0029(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9MFB[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             WorldSpaceImpulseDirNormalized;                          // 0x002C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseObjectSerializer                      ImpactKB;                                                // 0x0038(0x00B8) NativeAccessSpecifierPublic
		struct FImpactSettings                                     ImpactSettings;                                          // 0x00F0(0x00C8) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DSDamageSettings
	 * Size -> 0x0008
	 */
	struct FDSDamageSettings
	{
	public:
		class UClass*                                              DamageType;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DSDamageData
	 * Size -> 0x0058
	 */
	struct FDSDamageData
	{
	public:
		struct FDSDamageSettings                                   DamageSettings;                                          // 0x0000(0x0008) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bFriendlyFireAllowed;                                    // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCriticalHit;                                            // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHeavyAttack;                                            // 0x000A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4Z9V[0x1];                                   // 0x000B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HeavyAttackChargeValue;                                  // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bThrownAttack;                                           // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CKQL[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             AttackOrigin;                                            // 0x0014(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTriggerLocalClientFeedback;                             // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YTD9[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ThrownSFXWeaponObjectName;                               // 0x0024(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseDamage;                                              // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageMultiplier;                                        // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Force;                                                   // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CriticalHitDamageMultiplier;                             // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CriticalHitForceMultiplier;                              // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDeadIsland_FImpactData                             ImpactData;                                              // 0x0040(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIgnoreHitfX;                                            // 0x004C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2VPQ[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DismembermentChanceOnKill;                               // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQEE[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CommonImpactDamageParams
	 * Size -> 0x0090
	 */
	struct FCommonImpactDamageParams
	{
	public:
		TWeakObjectPtr<class AActor>                               DamagedActor;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FEventInstigator                                    Instigator;                                              // 0x0008(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               DamageCauser;                                            // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDSDamageData                                       DSDamageData;                                            // 0x0020(0x0058) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bForceKill;                                              // 0x0078(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldTriggerHitEffects;                                // 0x0079(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldTriggerHitReacts;                                 // 0x007A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldTriggerClientPredictiveHitReacts;                 // 0x007B(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8D43[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UImpactModificationComponent*>                CustomOutgoingImpactEventModifiers;                      // 0x0080(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PointImpactDamageParams
	 * Size -> 0x0150
	 */
	struct FPointImpactDamageParams
	{
	public:
		struct FCommonImpactDamageParams                           CommonDamageParams;                                      // 0x0000(0x0090) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FVector                                             HitFromDirection;                                        // 0x0090(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N10B[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHitResult                                          HitInfo;                                                 // 0x00A0(0x00B0) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PointImpactEventRequest
	 * Size -> 0x0308
	 */
	struct FPointImpactEventRequest
	{
	public:
		struct FGeneralImpactEventParams                           ImpactParams;                                            // 0x0000(0x01B8) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FPointImpactDamageParams                            DamageParams;                                            // 0x01B8(0x0150) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MeleeHitMultipliers
	 * Size -> 0x0008
	 */
	struct FMeleeHitMultipliers
	{
	public:
		float                                                      DamageMultiplier;                                        // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ForceMultiplier;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlaySequenceData
	 * Size -> 0x0018
	 */
	struct FPlaySequenceData
	{
	public:
		class UInputMapperAction*                                  SkipSequenceAction;                                      // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              SequenceHUDState;                                        // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       SkipSequenceStopSequenceAudioEvent;                      // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FeedTransitionParams
	 * Size -> 0x0008
	 */
	struct FFeedTransitionParams
	{
	public:
		float                                                      Duration;                                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAlphaBlendOption                                          BlendOption;                                             // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOutgoingViewOption                                        OutgoingViewOption;                                      // 0x0005(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9U1F[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameSequenceBoundActorConfig
	 * Size -> 0x0030
	 */
	struct FGameSequenceBoundActorConfig
	{
	public:
		class FName                                                CollisionProfile;                                        // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CollisionRequestReason;                                  // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSetMovementMode;                                        // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMovementMode                                              MovementMode;                                            // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QHMZ[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                MovementModeRequestReason;                               // 0x0014(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDeferCollisionAndMovementModeRemovalOnEnd;              // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DRV7[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimationLayerGroup*                                LayerGroupToDisable;                                     // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyActorToRootBoneTransform;                          // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RSS6[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.BoundActor
	 * Size -> 0x0160
	 */
	struct FBoundActor
	{
	public:
		bool                                                       bUseDefaultCameraFeedIfNoneProvided;                     // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8VQP[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFeed*                                               Feed;                                                    // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFeedTransitionParams                               FeedBlendIn;                                             // 0x0010(0x0008) BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FFeedTransitionParams                               FeedBlendOut;                                            // 0x0018(0x0008) BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bRestorePreAnimatedStateOnEject;                         // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_79FX[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                BindName;                                                // 0x0024(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TWeakObjectPtr<class AActor>                               BindActor;                                               // 0x002C(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      BlendTime;                                               // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FGameSequenceBoundActorConfig                       Config;                                                  // 0x0038(0x0030) BlueprintVisible, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Z0V1[0xF8];                                  // 0x0068(0x00F8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PlayerCutsceneConfig
	 * Size -> 0x0038
	 */
	struct FPlayerCutsceneConfig
	{
	public:
		bool                                                       bAddAllPlayersAsParticipants;                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBindLocalPlayer;                                        // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableTorchForPlayerDuringCutscene;                     // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B63B[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LocalPlayerBlendInTime;                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameSequenceBoundActorConfig                       BoundConfig;                                             // 0x0008(0x0030) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ExpressionContextFactDefinition
	 * Size -> 0x001C
	 */
	struct FExpressionContextFactDefinition
	{
	public:
		struct FKnowledgeBaseFactKey                               KnowledgeBaseObjectName;                                 // 0x0000(0x000C) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseFactKey                               FactName;                                                // 0x000C(0x000C) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EKnowledgeBaseFactType                                     FactType;                                                // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_86FL[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.FluidSplatterParams
	 * Size -> 0x0008
	 */
	struct FFluidSplatterParams
	{
	public:
		float                                                      Strength;                                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanSpawnGibs;                                           // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KAQM[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PlayerHandsParams
	 * Size -> 0x0010
	 */
	struct FPlayerHandsParams
	{
	public:
		TArray<class UMaterialParameterMap*>                       MaterialParametersAssetSet;                              // 0x0000(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MappedRange
	 * Size -> 0x0010
	 */
	struct FMappedRange
	{
	public:
		float                                                      MinValue;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxValue;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InputForMin;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InputForMax;                                             // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SplatterModifiers
	 * Size -> 0x00B0
	 */
	struct FSplatterModifiers
	{
	public:
		struct FMappedRange                                        DamageToScaleRange;                                      // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		class UCurveFloat*                                         HealthRemainingToScaleCurve;                             // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         HitsToDeathToScaleCurve;                                 // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         HealthRemainingtToStrengthCurve;                         // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         HitsToDeathToStrengthCurve;                              // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         HealthRemainingToRuptureLimitCurve;                      // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         HitsToDeathToRuptureLimitCurve;                          // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         HealthRemainingToRuptureDepthCurve;                      // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         HitsToDeathToRuptureDepthCurve;                          // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         HealthRemainingToRuptureRadiusCurve;                     // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         HitsToDeathToRuptureRadiusCurve;                         // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         HealthRemainingToRuptureCountCurve;                      // 0x0060(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         HitsToDeathToRuptureCountCurve;                          // 0x0068(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxBlendThreshold;                                       // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HitsToDeathMaxBlendThreshold;                            // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UVScaleVariation;                                        // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AlignmentAngle;                                          // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AlignmentVariation;                                      // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DepthVariation;                                          // 0x0084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyStrengthVariationToTextureInfluence;               // 0x0088(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4B1H[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UTexture2D*>                                  AlternateWoundTextures;                                  // 0x0090(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UTexture2D*>                                  AlternateSecondaryTextures;                              // 0x00A0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MinigameAudio
	 * Size -> 0x0008
	 */
	struct FMinigameAudio
	{
	public:
		class UAkAudioEvent*                                       FoleyLoopEvent;                                          // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CounterAnimations
	 * Size -> 0x0028
	 */
	struct FCounterAnimations
	{
	public:
		class FName                                                IntoAnimSet;                                             // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LoopAnimSet;                                             // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MinigameStagePassedAnimSet;                              // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SuccessEnemyAnimSet;                                     // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FatalityEnemyAnimSet;                                    // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MinigameSuccessParams
	 * Size -> 0x0020
	 */
	struct FMinigameSuccessParams
	{
	public:
		class UClass*                                              DamageType;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDeadIsland_FImpactData                             ImpactData;                                              // 0x0008(0x000C) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		float                                                      BaseDamage;                                              // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Force;                                                   // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ADFM[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CounterMinigameSuccessParams
	 * Size -> 0x0020 (FullSize[0x0040] - InheritedSize[0x0020])
	 */
	struct FCounterMinigameSuccessParams : public FMinigameSuccessParams
	{
	public:
		float                                                      HealthThresholdToKillTarget;                             // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PerIntoHitDamageScaler;                                  // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PerHitDamageScaler;                                      // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FinalForSuccessHitDamageScaler;                          // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FinalForFailureHitDamageScaler;                          // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseStaminaPercentageReward;                             // 0x0034(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseStaminaPercentageRewardFatality;                     // 0x0038(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaPercentageRewardPerStage;                         // 0x003C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.InputPoolForMinigamePhases
	 * Size -> 0x0010
	 */
	struct FInputPoolForMinigamePhases
	{
	public:
		TArray<class UInputMapperAction*>                          InputMapperActions;                                      // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MinigamePhasesPerStage
	 * Size -> 0x0010
	 */
	struct FMinigamePhasesPerStage
	{
	public:
		TArray<class UMinigamePhase*>                              Phases;                                                  // 0x0000(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PhasedMinigameData
	 * Size -> 0x0028
	 */
	struct FPhasedMinigameData
	{
	public:
		class UInputMapperActionFilterDefinition*                  ActionFilterDefinition;                                  // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FInputPoolForMinigamePhases                         InputPoolForMinigamePhases;                              // 0x0008(0x0010) Edit, NativeAccessSpecifierPublic
		TArray<struct FMinigamePhasesPerStage>                     PhasesPerStage;                                          // 0x0018(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CraftingIngredient
	 * Size -> 0x0010
	 */
	struct FCraftingIngredient
	{
	public:
		class UItemArchetype*                                      Item;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H1TC[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DamageRestrictionEntry
	 * Size -> 0x0018
	 */
	struct FDamageRestrictionEntry
	{
	public:
		unsigned char                                              UnknownData_1CV6[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DamageEffectsPropagation_ExpressionParam
	 * Size -> 0x0040
	 */
	struct FDamageEffectsPropagation_ExpressionParam
	{
	public:
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0000(0x0038) Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HZ4N[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DamageEffectsPropagation_EffectDefinition
	 * Size -> 0x0088
	 */
	struct FDamageEffectsPropagation_EffectDefinition
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnabled;                                                // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1YKK[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCosmeticEffectsDefinition*                          CosmeticEffect;                                          // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, float>                                   CosmeticEffectParameters;                                // 0x0018(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		float                                                      CosmeticEffectThreshold;                                 // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DI9L[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FDamageEffectsPropagation_ExpressionParam>   PropagationSpeed;                                        // 0x0070(0x0010) Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FColor                                              DebugColor;                                              // 0x0080(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DN1T[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.BisectionConfig
	 * Size -> 0x0010
	 */
	struct FBisectionConfig
	{
	public:
		TArray<class FName>                                        BisectableParts;                                         // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RadialImpactBisectionConfig
	 * Size -> 0x0010
	 */
	struct FRadialImpactBisectionConfig
	{
	public:
		TArray<class FName>                                        BisectableParts;                                         // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MajorWoundParams
	 * Size -> 0x0060
	 */
	struct FMajorWoundParams
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BodyPartName;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          Transform;                                               // 0x0010(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             InitialDirection;                                        // 0x0040(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialForce;                                            // 0x004C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESplatterType                                              WoundType;                                               // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpawnCutLimb;                                           // 0x0051(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsBisection;                                            // 0x0052(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KEN8[0xD];                                   // 0x0053(0x000D) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MajorWoundParamsItem
	 * Size -> 0x0064 (FullSize[0x0070] - InheritedSize[0x000C])
	 */
	struct FMajorWoundParamsItem : public FFastArraySerializerItem
	{
	public:
		unsigned char                                              UnknownData_EVEL[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMajorWoundParams                                   MajorWoundParams;                                        // 0x0010(0x0060) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MajorWoundParamsArray
	 * Size -> 0x0018 (FullSize[0x0120] - InheritedSize[0x0108])
	 */
	struct FMajorWoundParamsArray : public FFastArraySerializer
	{
	public:
		TArray<struct FMajorWoundParamsItem>                       Data;                                                    // 0x0108(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class UDamageRepercussions*                                Owner;                                                   // 0x0118(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DefaultFailureResponseSettingsForType
	 * Size -> 0x0048
	 */
	struct FDefaultFailureResponseSettingsForType
	{
	public:
		unsigned char                                              ObjectiveActorClass[0x28];                               // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		struct FObjectiveFailureResponseSettings                   FailureResponseSettings;                                 // 0x0028(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQY4[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ArrayElementTitleText;                                   // 0x0038(0x0010) Edit, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.DeployablePlacementInfo
	 * Size -> 0x002C
	 */
	struct FDeployablePlacementInfo
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x000C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             SurfaceNormal;                                           // 0x0018(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       InRange;                                                 // 0x0024(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       NotEncroachingWorld;                                     // 0x0025(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PlacementValid;                                          // 0x0026(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       NotInShelter;                                            // 0x0027(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       FailedToFindSurface;                                     // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IIS9[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DICharacterMostRecentMoveBlockingHitInfo
	 * Size -> 0x00D8
	 */
	struct FDICharacterMostRecentMoveBlockingHitInfo
	{
	public:
		unsigned char                                              UnknownData_X3FX[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AActor>                               HitActor;                                                // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              HitActorClass;                                           // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHitResult                                          HitResult;                                               // 0x0028(0x00B0) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MenuActionData
	 * Size -> 0x00D0
	 */
	struct FMenuActionData
	{
	public:
		class UInputMapperAction*                                  ActionInput;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Caption;                                                 // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		struct FPlatformSpecificTextPicker                         CaptionPlatformOverrides;                                // 0x0020(0x0050) Edit, NativeAccessSpecifierPublic
		bool                                                       bUseCaptionPlatformOverrides;                            // 0x0070(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMenuActionDataType                                        Type;                                                    // 0x0071(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EUIAudioTriggerEvent                                       AudioEventOnAction;                                      // 0x0072(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AudioPlayFlags;                                          // 0x0073(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8E3X[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             Owner;                                                   // 0x0078(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NM7Q[0x50];                                  // 0x0080(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DialogPopUpTutorialSection
	 * Size -> 0x0040
	 */
	struct FDialogPopUpTutorialSection
	{
	public:
		struct FSoftObjectPath                                     SectionImage;                                            // 0x0000(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                SectionCaption;                                          // 0x0018(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FString                                              FlashSymbolOverride;                                     // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CharacterConversationEntry
	 * Size -> 0x0050
	 */
	struct FCharacterConversationEntry
	{
	public:
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0000(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTriggerOnlyOnce;                                        // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ANCF[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UDialogueSelectorData*>                       DialogueData;                                            // 0x0040(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PerlinNoiseChannel
	 * Size -> 0x0038
	 */
	struct FPerlinNoiseChannel
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableUserSeed;                                         // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U8GB[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Seed;                                                    // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Octaves;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RemapRangeMinValue;                                      // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RemapRangeMaxValue;                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedScale;                                              // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BJJW[0x20];                                  // 0x0018(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_Facial
	 * Size -> 0x0010
	 */
	struct FAnimInterest_Facial
	{
	public:
		unsigned char                                              UnknownData_U34Q[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_Facial_Emotion
	 * Size -> 0x0080 (FullSize[0x0090] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_Facial_Emotion : public FAnimInterest_Facial
	{
	public:
		class UAnimSequence*                                       EmotionA;                                                // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       EmotionB;                                                // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EmotionBAlpha;                                           // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CombinedEmotionAlpha;                                    // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EmotionAnimSetName;                                      // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EmotionBlendDuration;                                    // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QCSH[0x5C];                                  // 0x0034(0x005C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_Facial_Eyes
	 * Size -> 0x0240 (FullSize[0x0250] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_Facial_Eyes : public FAnimInterest_Facial
	{
	public:
		struct FRotator                                            SaccadeRotation;                                         // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MBMX[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomNumberGenerator_Float                        SaccadeInterval;                                         // 0x0020(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FRandomNumberGenerator_Float                        SmallSaccadePitch;                                       // 0x0048(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FRandomNumberGenerator_Float                        SmallSaccadeYaw;                                         // 0x0070(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FRandomNumberGenerator_Float                        LargeSaccadePitch;                                       // 0x0098(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FRandomNumberGenerator_Float                        LargeSaccadeYaw;                                         // 0x00C0(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FRandomNumberGenerator_Int                          LargeSaccadeInterval;                                    // 0x00E8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      SaccadeRotationSpeed;                                    // 0x00F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentBlinkAmount;                                      // 0x00FC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FacialIdle;                                              // 0x0100(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FacialBlink;                                             // 0x0108(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       FacialIdleSequence;                                      // 0x0110(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       FacialBlinkSequence;                                     // 0x0118(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRandomNumberGenerator_Float                        BlinkDuration;                                           // 0x0120(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FRandomNumberGenerator_Float                        StandardBlinkInterval;                                   // 0x0148(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FRandomNumberGenerator_Float                        DoubleBlinkInterval;                                     // 0x0170(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FRandomNumberGenerator_Int                          StandardBlinksBeforeDoubleBlink;                         // 0x0198(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RP3L[0xA8];                                  // 0x01A8(0x00A8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RatioName
	 * Size -> 0x0018
	 */
	struct FRatioName
	{
	public:
		int32_t                                                    Numerator;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Denominator;                                             // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RatioName;                                               // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CharacterTemplate
	 * Size -> 0x0058
	 */
	struct FCharacterTemplate
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<ECharacterGender, struct FSoftClassPath>              Templates;                                               // 0x0008(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DINPCIKGoalConfig
	 * Size -> 0x0020
	 */
	struct FDINPCIKGoalConfig
	{
	public:
		class UBIKRigTargetTransformGoalObject*                    GoalTemplate;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HitReactTaskName;                                        // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseForFootPlacement;                                    // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseForCrawler;                                          // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1SUJ[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FootPlacementGroundSampleIndex;                          // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CrawlerGroundSampleIndex;                                // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L17U[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DINPCIKGroundSampleConfig
	 * Size -> 0x000C
	 */
	struct FDINPCIKGroundSampleConfig
	{
	public:
		struct FVector                                             ComponentSpaceLocation;                                  // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.LaunchVelocityConfig
	 * Size -> 0x0020
	 */
	struct FLaunchVelocityConfig
	{
	public:
		bool                                                       bPhysicalize;                                            // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyLaunchVelocity;                                    // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OEJH[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             VelocityPrimaryDirection;                                // 0x0004(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VelocityMagnitudeMin;                                    // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VelocityMagnitudeMax;                                    // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VelocityRandConeInDegrees;                               // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AngularVelocityMagnitudeDegrees;                         // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GuidedProceduralItemConfig
	 * Size -> 0x0050
	 */
	struct FGuidedProceduralItemConfig
	{
	public:
		bool                                                       bExplicitRarity;                                         // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemRarity                                                ItemRarity;                                              // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YFIX[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URarityWeightingConfig*                              RarityWeightingConfig;                                   // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFixedItemLevel;                                         // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OTV1[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FixedItemLevel;                                          // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinItemLevel;                                            // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxItemLevel;                                            // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFixedModLevel;                                          // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O6FR[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FixedModLevel;                                           // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinModLevel;                                             // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxModLevel;                                             // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFixedUpgradeCount;                                      // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W52V[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FixedUpgradeCount;                                       // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinUpgradeCount;                                         // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxUpgradeCount;                                         // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideSeed;                                           // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H6F0[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemSeed;                                                // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UProceduralPropertiesDefinition*                     ProceduralPropertiesDefinitionOverride;                  // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ItemConfig
	 * Size -> 0x00C0
	 */
	struct FItemConfig
	{
	public:
		EItemCreationMethod                                        ItemCreationMethod;                                      // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DMLB[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UItemArchetype*                                      ItemArchetype;                                           // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UProceduralItemArchetype*                            ProceduralItemArchetype;                                 // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              OptionalItemInstanceDataClass;                           // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuidedProceduralItemConfig                         GuidedProceduralItemConfig;                              // 0x0020(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FProceduralGenerationContext                        ExplicitProceduralItemConfig;                            // 0x0070(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		class UCustomItemCreationMethod*                           CustomItemCreationMethod;                                // 0x00A8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFixedCount;                                             // 0x00B0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7KY1[0x3];                                   // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Count;                                                   // 0x00B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RandomCountMin;                                          // 0x00B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RandomCountMax;                                          // 0x00BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DILocationDirectionCollatorItem
	 * Size -> 0x0004
	 */
	struct FDILocationDirectionCollatorItem
	{
	public:
		float                                                      Weighting;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimState
	 * Size -> 0x0008
	 */
	struct FAnimState
	{
	public:
		unsigned char                                              UnknownData_CKMT[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_NPCLocomotion
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FAnimState_NPCLocomotion : public FAnimState
	{
	public:
		unsigned char                                              UnknownData_WHVY[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ELocomotionState>                                   TransitionOverrides;                                     // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimSetPerCombatState
	 * Size -> 0x0018
	 */
	struct FAnimSetPerCombatState
	{
	public:
		class FName                                                CalmAnimSetName;                                         // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AlertAnimSetName;                                        // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CombatAnimSetName;                                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Idle
	 * Size -> 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
	 */
	struct FAnimState_Idle : public FAnimState_NPCLocomotion
	{
	public:
		bool                                                       bTransitionToStart;                                      // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToStanceChange;                               // 0x0029(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToTurnOnSpot;                                 // 0x002A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToMove;                                       // 0x002B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAnimSetPerCombatState                              AnimSets;                                                // 0x002C(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UMQB[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSet_Base*                                       CalmAnimSet;                                             // 0x0048(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSet_Base*                                       AlertAnimSet;                                            // 0x0050(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSet_Base*                                       CombatAnimSet;                                           // 0x0058(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       WindUpAnimSequence;                                      // 0x0060(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WindUpSamplePosition;                                    // 0x0068(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WindUpBlendValue;                                        // 0x006C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinStateWeightForTurnOnSpot;                             // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1A2W[0xC];                                   // 0x0074(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AdditiveSteering
	 * Size -> 0x0020
	 */
	struct FAdditiveSteering
	{
	public:
		struct FVector                                             InitialFacingDirection;                                  // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      AngleToBeCoveredByAnimation;                             // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      AngleCoveredBySteering;                                  // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_K9JI[0xC];                                   // 0x0014(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Start
	 * Size -> 0x0080 (FullSize[0x00A8] - InheritedSize[0x0028])
	 */
	struct FAnimState_Start : public FAnimState_NPCLocomotion
	{
	public:
		bool                                                       bTransitionToIdle;                                       // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToMove;                                       // 0x0029(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToMoveCombat;                                 // 0x002A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToStop;                                       // 0x002B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NonStrafeAnimSetName;                                    // 0x002C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                StrafeAnimSetName;                                       // 0x0034(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AD7F[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSet_Base*                                       BlendspaceAnimSet;                                       // 0x0040(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                         BlendSpace;                                              // 0x0048(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStrafing;                                               // 0x0050(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QC85[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       WindUpAnimSequenceAdditive;                              // 0x0058(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinStateWeightForIdle;                                   // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRemainingTimeToExit;                                  // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationTarget;                                          // 0x0068(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      SpeedTarget;                                             // 0x006C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_0OYY[0x10];                                  // 0x0070(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Duration;                                                // 0x0080(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_GQXK[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAdditiveSteering                                   Steering;                                                // 0x0088(0x0020) NoDestructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Stop
	 * Size -> 0x0040 (FullSize[0x0068] - InheritedSize[0x0028])
	 */
	struct FAnimState_Stop : public FAnimState_NPCLocomotion
	{
	public:
		bool                                                       bTransitionToIdle;                                       // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8QS1[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSet_Base*                                       StopAnimSet;                                             // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                StopAnimSetName;                                         // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                         BlendSpace;                                              // 0x0040(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationTarget;                                          // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedTarget;                                             // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       WindUpAnimSequenceAdditive;                              // 0x0050(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WindUpSamplePosition;                                    // 0x0058(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WindUpBlendValue;                                        // 0x005C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRemainingTimeToIdle;                                  // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0064(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Pivot
	 * Size -> 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
	 */
	struct FAnimState_Pivot : public FAnimState_NPCLocomotion
	{
	public:
		bool                                                       bTransitionToMove;                                       // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I3LL[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpace*                                         BlendSpace;                                              // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RightFootAnimSetName;                                    // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LeftFootAnimSetName;                                     // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationTarget;                                          // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedTarget;                                             // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRemainingTimeToExit;                                  // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_StanceChange
	 * Size -> 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
	 */
	struct FAnimState_StanceChange : public FAnimState_NPCLocomotion
	{
	public:
		bool                                                       bTransitionToIdle;                                       // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToMove;                                       // 0x0029(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8RIY[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpace*                                         BlendSpace;                                              // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedTarget;                                             // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendSpaceStartPosition;                                 // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BlendSpaceAnimSetName;                                   // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRemainingTimeToExit;                                  // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x004C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_TurnOnSpot
	 * Size -> 0x0070 (FullSize[0x0098] - InheritedSize[0x0028])
	 */
	struct FAnimState_TurnOnSpot : public FAnimState_NPCLocomotion
	{
	public:
		bool                                                       bTransitionToStart;                                      // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToIdle;                                       // 0x0029(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_INLD[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAnimSetPerCombatState                              AnimSets;                                                // 0x002C(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PYLB[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSet_Base*                                       CalmAnimSet;                                             // 0x0048(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSet_Base*                                       AlertAnimSet;                                            // 0x0050(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSet_Base*                                       CombatAnimSet;                                           // 0x0058(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationTarget;                                          // 0x0060(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationSpeed;                                           // 0x0064(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRemainingTimeToExit;                                  // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FJ9D[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Duration;                                                // 0x0070(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BTGT[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAdditiveSteering                                   Steering;                                                // 0x0078(0x0020) NoDestructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Move
	 * Size -> 0x0118 (FullSize[0x0140] - InheritedSize[0x0028])
	 */
	struct FAnimState_Move : public FAnimState_NPCLocomotion
	{
	public:
		bool                                                       bTransitionToStop;                                       // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToStopWeight;                                 // 0x0029(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToPivot;                                      // 0x002A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToStanceChange;                               // 0x002B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToIdle;                                       // 0x002C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_63RX[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                NonStrafeBlendSpaceAnimSetName;                          // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                         NonStrafeBlendSpace;                                     // 0x0038(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ForwardStrafeBlendSpaceAnimSetName;                      // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BackwardStrafeBlendSpaceAnimSetName;                     // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                         ForwardStrafeBlendSpace;                                 // 0x0050(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                         BackwardStrafeBlendSpace;                                // 0x0058(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAnimSetPerCombatState                              BreakAnimSets;                                           // 0x0060(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		class UAnimSet_Base*                                       BreakCalmAnimSet;                                        // 0x0078(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSet_Base*                                       BreakAlertAnimSet;                                       // 0x0080(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSet_Base*                                       BreakCombatAnimSet;                                      // 0x0088(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedTarget;                                             // 0x0090(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendSpaceStartPosition;                                 // 0x0094(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPrimarySystem;                                          // 0x0098(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZDYO[0x3];                                   // 0x0099(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PrimaryStrafeAngle;                                      // 0x009C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SecondaryStrafeAngle;                                    // 0x00A0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BackwardBlendValue;                                      // 0x00A4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                         WindUpRunAnimSequence;                                   // 0x00A8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxStateWeightForStop;                                   // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinStateWeightForPivot;                                  // 0x00B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I4PY[0x88];                                  // 0x00B8(0x0088) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_NPC
	 * Size -> 0x0010
	 */
	struct FAnimInterest_NPC
	{
	public:
		unsigned char                                              UnknownData_L0FV[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_NPC_Debug
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_NPC_Debug : public FAnimInterest_NPC
	{	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_NPC_BaseLocomotion
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_NPC_BaseLocomotion : public FAnimInterest_NPC
	{
	public:
		class FName                                                StateMachineName;                                        // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_NPCCrawlerLocomotion
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FAnimState_NPCCrawlerLocomotion : public FAnimState
	{
	public:
		unsigned char                                              UnknownData_OCYS[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ECrawlerLocomotionState>                            TransitionOverrides;                                     // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Crawler_Idle
	 * Size -> 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
	 */
	struct FAnimState_Crawler_Idle : public FAnimState_NPCCrawlerLocomotion
	{
	public:
		bool                                                       bTransitionToMove;                                       // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToTurnOnSpot;                                 // 0x0029(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NEO3[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                LeftHandCalmAnimSetName;                                 // 0x002C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RightHandCalmAnimSetName;                                // 0x0034(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LeftHandCombatAnimSetName;                               // 0x003C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RightHandCombatAnimSetName;                              // 0x0044(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KVCT[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       CalmSequence;                                            // 0x0050(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       CombatSequence;                                          // 0x0058(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Crawler_Move
	 * Size -> 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
	 */
	struct FAnimState_Crawler_Move : public FAnimState_NPCCrawlerLocomotion
	{
	public:
		bool                                                       bTransitionToIdle;                                       // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToTurnOnSpot;                                 // 0x0029(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WNIY[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpace*                                         BlendSpace;                                              // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationTarget;                                          // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedTarget;                                             // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendSpaceStartPosition;                                 // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BlendSpaceAnimSetName;                                   // 0x0044(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeftBlendSpaceStartPosition;                             // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RightBlendSpaceStartPosition;                            // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MIJQ[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Crawler_TurnOnSpot
	 * Size -> 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
	 */
	struct FAnimState_Crawler_TurnOnSpot : public FAnimState_NPCCrawlerLocomotion
	{
	public:
		bool                                                       bTransitionToIdle;                                       // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToMove;                                       // 0x0029(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2LD4[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                LeftHandAnimSetName;                                     // 0x002C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RightHandAnimSetName;                                    // 0x0034(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BJO0[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpace*                                         BlendSpace;                                              // 0x0040(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationTarget;                                          // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationSpeed;                                           // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRemainingTimeToExit;                                  // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_NPC_CrawlerLocomotion
	 * Size -> 0x0140 (FullSize[0x0158] - InheritedSize[0x0018])
	 */
	struct FAnimInterest_NPC_CrawlerLocomotion : public FAnimInterest_NPC_BaseLocomotion
	{
	public:
		unsigned char                                              UnknownData_2ENC[0x28];                                  // 0x0018(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAnimState_Crawler_Idle                             AnimState_Idle;                                          // 0x0040(0x0060) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FAnimState_Crawler_Move                             AnimState_Move;                                          // 0x00A0(0x0058) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FAnimState_Crawler_TurnOnSpot                       AnimState_TurnOnSpot;                                    // 0x00F8(0x0058) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QBXS[0x8];                                   // 0x0150(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_NPC_FootSync
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_NPC_FootSync : public FAnimInterest_NPC
	{
	public:
		EFoot                                                      BlendingFoot;                                            // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NJQS[0xF];                                   // 0x0011(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_NPC_Locomotion
	 * Size -> 0x0118 (FullSize[0x0130] - InheritedSize[0x0018])
	 */
	struct FAnimInterest_NPC_Locomotion : public FAnimInterest_NPC_BaseLocomotion
	{
	public:
		unsigned char                                              UnknownData_TBKP[0x118];                                 // 0x0018(0x0118) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_NPC_LookAt
	 * Size -> 0x01A0 (FullSize[0x01B0] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_NPC_LookAt : public FAnimInterest_NPC
	{
	public:
		class FName                                                RootBoneName;                                            // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FJ7Y[0x198];                                 // 0x0018(0x0198) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_NPC_Melee
	 * Size -> 0x0038 (FullSize[0x0048] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_NPC_Melee : public FAnimInterest_NPC
	{
	public:
		float                                                      AttackWindUpAmount;                                      // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1HYJ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWindUpDefinition*                                   LastWindUpDefinition;                                    // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                StaticSlotName;                                          // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseStaticSlot;                                          // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QL35[0xF];                                   // 0x0029(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWindUpDefinition*                                   ChosenWindUpDefinition;                                  // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6RU1[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_NPC_Misc
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_NPC_Misc : public FAnimInterest_NPC
	{
	public:
		float                                                      BlockHeight;                                             // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_76BP[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_NPC_Ragdoll
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_NPC_Ragdoll : public FAnimInterest_NPC
	{
	public:
		class FName                                                RagdollPoseSnapshotName;                                 // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RagdollBlendWeight;                                      // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6AYB[0x14];                                  // 0x001C(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_NPC_Velocity
	 * Size -> 0x00C0 (FullSize[0x00D0] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_NPC_Velocity : public FAnimInterest_NPC
	{
	public:
		struct FLazyUpdater                                        SpeedUpdater;                                            // 0x0010(0x0018) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F0PB[0xA8];                                  // 0x0028(0x00A8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimationSlaveLookAtState
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FAnimationSlaveLookAtState : public FSharedLookAtState
	{	};

	/**
	 * ScriptStruct DeadIsland.OptionHandlerSystemSpec
	 * Size -> 0x0010
	 */
	struct FOptionHandlerSystemSpec
	{
	public:
		TArray<class FString>                                      ConsoleCommands;                                         // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_Player
	 * Size -> 0x0010
	 */
	struct FAnimInterest_Player
	{
	public:
		unsigned char                                              UnknownData_MG2J[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_Player_BaseLocomotion
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_Player_BaseLocomotion : public FAnimInterest_Player
	{
	public:
		class FName                                                StateMachineName;                                        // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedThresholdForMoveState;                              // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInAir;                                                // 0x001C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSliding;                                                // 0x001D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSprinting;                                              // 0x001E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JNNI[0x1];                                   // 0x001F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FallDistance;                                            // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V6WB[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Player_Locomotion
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FAnimState_Player_Locomotion : public FAnimState
	{
	public:
		TArray<EPlayerLocomotionState>                             TransitionOverrides;                                     // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_08HE[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Player_Idle
	 * Size -> 0x0008 (FullSize[0x0028] - InheritedSize[0x0020])
	 */
	struct FAnimState_Player_Idle : public FAnimState_Player_Locomotion
	{
	public:
		bool                                                       bTransitionToMove;                                       // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToSlide;                                      // 0x0021(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToInAir;                                      // 0x0022(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MWUE[0x1];                                   // 0x0023(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CrouchTransitionTime;                                    // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Player_Idle_LowerBody
	 * Size -> 0x00D0 (FullSize[0x00F8] - InheritedSize[0x0028])
	 */
	struct FAnimState_Player_Idle_LowerBody : public FAnimState_Player_Idle
	{
	public:
		unsigned char                                              UnknownData_L99H[0x10];                                  // 0x0028(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                TurnOnSpotAnimSetName;                                   // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CrouchedTurnOnSpotAnimSetName;                           // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                         TurnOnSpotBlendSpace;                                    // 0x0048(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                         CrouchedTurnOnSpotBlendSpace;                            // 0x0050(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpot_BlendsSpaceAngle;                             // 0x0058(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpot_BlendSpaceSpeed;                              // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpot_BlendSpaceNormalizedTime;                     // 0x0060(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpot_AngleInputMagnitude;                          // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpot_MaxAngleCoveredByAnimation;                   // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpot_StopInterpolationSpeed;                       // 0x006C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpot_TurningThreshold;                             // 0x0070(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FullBodyMontageAlphaInterpSpeed;                         // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FullBodyMontageAlpha;                                    // 0x0078(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XL1D[0x7C];                                  // 0x007C(0x007C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Player_Move
	 * Size -> 0x00F0 (FullSize[0x0110] - InheritedSize[0x0020])
	 */
	struct FAnimState_Player_Move : public FAnimState_Player_Locomotion
	{
	public:
		bool                                                       bTransitionToIdle;                                       // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToSlide;                                      // 0x0021(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToInAir;                                      // 0x0022(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_23N9[0x1];                                   // 0x0023(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                WalkAnimSetName;                                         // 0x0024(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CrouchedWalkAnimSetName;                                 // 0x002C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RunAnimSetName;                                          // 0x0034(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y5UB[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpace*                                         WalkBlendSpace;                                          // 0x0040(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                         CrouchedWalkBlendSpace;                                  // 0x0048(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                         RunBlendSpace;                                           // 0x0050(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RunThresholdVelocity;                                    // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsRunning;                                              // 0x005C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0RSC[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CrouchTransitionTime;                                    // 0x0060(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RunningTransitionTime;                                   // 0x0064(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3ILZ[0xA8];                                  // 0x0068(0x00A8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Player_Move_LowerBody
	 * Size -> 0x0010 (FullSize[0x0120] - InheritedSize[0x0110])
	 */
	struct FAnimState_Player_Move_LowerBody : public FAnimState_Player_Move
	{
	public:
		unsigned char                                              UnknownData_EWG4[0x10];                                  // 0x0110(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Player_InAir
	 * Size -> 0x0108 (FullSize[0x0128] - InheritedSize[0x0020])
	 */
	struct FAnimState_Player_InAir : public FAnimState_Player_Locomotion
	{
	public:
		bool                                                       bTransitionToIdle;                                       // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToMove;                                       // 0x0021(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToSlide;                                      // 0x0022(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1DQB[0x1];                                   // 0x0023(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                InAirEnterAnimSetName;                                   // 0x0024(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                InAirLoopAnimSetName;                                    // 0x002C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                InAirLandingAnimSetName;                                 // 0x0034(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4G6G[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpace*                                         InAirEnterBlendSpace3P;                                  // 0x0040(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                         InAirLoopBlendSpace3P;                                   // 0x0048(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                         InAirLandingBlendSpace3P;                                // 0x0050(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       InAirLandingSequence1P;                                  // 0x0058(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EInAirState                                                InAirState;                                              // 0x0060(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I3AS[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LocalSpaceVelocitySignedZ;                               // 0x0064(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AbsFallDistance;                                         // 0x0068(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinimumTransitionTime;                                   // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_765S[0xB8];                                  // 0x0070(0x00B8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Player_InAir_LowerBody
	 * Size -> 0x0020 (FullSize[0x0148] - InheritedSize[0x0128])
	 */
	struct FAnimState_Player_InAir_LowerBody : public FAnimState_Player_InAir
	{
	public:
		unsigned char                                              UnknownData_EHLV[0x10];                                  // 0x0128(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       InAirLoopSequence1P;                                     // 0x0138(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace1D*                                       InAirEnter1DBlendSpace1P;                                // 0x0140(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Player_Slide
	 * Size -> 0x00F8 (FullSize[0x0118] - InheritedSize[0x0020])
	 */
	struct FAnimState_Player_Slide : public FAnimState_Player_Locomotion
	{
	public:
		bool                                                       bTransitionToIdle;                                       // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionToInAir;                                      // 0x0021(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_70LD[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SlideEnterAnimSetName;                                   // 0x0024(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SlideLoopAnimSetName;                                    // 0x002C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SlideExitAnimSetName;                                    // 0x0034(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BE9D[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       SlideEnterSequence;                                      // 0x0040(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       SlideLoopSequence;                                       // 0x0048(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       SlideExitSequence;                                       // 0x0050(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESlideState                                                SlideState;                                              // 0x0058(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NRWJ[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimumTransitionTime;                                   // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D5XR[0xB8];                                  // 0x0060(0x00B8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Player_Slide_LowerBody
	 * Size -> 0x0010 (FullSize[0x0128] - InheritedSize[0x0118])
	 */
	struct FAnimState_Player_Slide_LowerBody : public FAnimState_Player_Slide
	{
	public:
		unsigned char                                              UnknownData_5SNL[0x10];                                  // 0x0118(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_Player_Locomotion_LowerBody
	 * Size -> 0x04B0 (FullSize[0x04D8] - InheritedSize[0x0028])
	 */
	struct FAnimInterest_Player_Locomotion_LowerBody : public FAnimInterest_Player_BaseLocomotion
	{
	public:
		unsigned char                                              UnknownData_W4U9[0x28];                                  // 0x0028(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAnimState_Player_Idle_LowerBody                    AnimState_Idle;                                          // 0x0050(0x00F8) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FAnimState_Player_Move_LowerBody                    AnimState_Move;                                          // 0x0148(0x0120) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FAnimState_Player_InAir_LowerBody                   AnimState_InAir;                                         // 0x0268(0x0148) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FAnimState_Player_Slide_LowerBody                   AnimState_Slide;                                         // 0x03B0(0x0128) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Player_Idle_UpperBody
	 * Size -> 0x00A0 (FullSize[0x00C8] - InheritedSize[0x0028])
	 */
	struct FAnimState_Player_Idle_UpperBody : public FAnimState_Player_Idle
	{
	public:
		unsigned char                                              UnknownData_CAIK[0x10];                                  // 0x0028(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                IdleAnimSetName;                                         // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CrouchedIdleAnimSetName;                                 // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       IdleSequence;                                            // 0x0048(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       CrouchedIdleSequence;                                    // 0x0050(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QXP7[0x70];                                  // 0x0058(0x0070) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Player_Move_UpperBody
	 * Size -> 0x0070 (FullSize[0x0180] - InheritedSize[0x0110])
	 */
	struct FAnimState_Player_Move_UpperBody : public FAnimState_Player_Move
	{
	public:
		unsigned char                                              UnknownData_P14V[0x10];                                  // 0x0110(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                WalkRunSprintAnimSetName;                                // 0x0120(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace1D*                                       WalkRunSprintBlendSpace;                                 // 0x0128(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintingTransitionTimeX;                                // 0x0130(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintingTransitionTimeY;                                // 0x0134(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WalkRunSprintBlendSpaceNormalizedVelocity;               // 0x0138(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NormalizedSprintVelocityMagnitude;                       // 0x013C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NormalizedWalkRunVelocityMagnitude;                      // 0x0140(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SPU0[0x3C];                                  // 0x0144(0x003C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Player_InAir_UpperBody
	 * Size -> 0x0020 (FullSize[0x0148] - InheritedSize[0x0128])
	 */
	struct FAnimState_Player_InAir_UpperBody : public FAnimState_Player_InAir
	{
	public:
		unsigned char                                              UnknownData_HLML[0x10];                                  // 0x0128(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       InAirEnterSequence1P;                                    // 0x0138(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace1D*                                       InAirLoop1DBlendSpace1P;                                 // 0x0140(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimState_Player_Slide_UpperBody
	 * Size -> 0x0010 (FullSize[0x0128] - InheritedSize[0x0118])
	 */
	struct FAnimState_Player_Slide_UpperBody : public FAnimState_Player_Slide
	{
	public:
		unsigned char                                              UnknownData_2UL3[0x10];                                  // 0x0118(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_Player_Locomotion_UpperBody
	 * Size -> 0x04E0 (FullSize[0x0508] - InheritedSize[0x0028])
	 */
	struct FAnimInterest_Player_Locomotion_UpperBody : public FAnimInterest_Player_BaseLocomotion
	{
	public:
		unsigned char                                              UnknownData_3CC7[0x28];                                  // 0x0028(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAnimState_Player_Idle_UpperBody                    AnimState_Idle;                                          // 0x0050(0x00C8) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FAnimState_Player_Move_UpperBody                    AnimState_Move;                                          // 0x0118(0x0180) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FAnimState_Player_InAir_UpperBody                   AnimState_InAir;                                         // 0x0298(0x0148) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FAnimState_Player_Slide_UpperBody                   AnimState_Slide;                                         // 0x03E0(0x0128) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_Player_AimOffset
	 * Size -> 0x0058 (FullSize[0x0068] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_Player_AimOffset : public FAnimInterest_Player
	{
	public:
		class FName                                                AimOffsetAnimSetName;                                    // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CrouchedAlpha;                                           // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LocalSpacePitch;                                         // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LocalSpaceYaw;                                           // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFirstPersonOr3PersonShadow;                           // 0x0024(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TJWN[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAimOffsetBlendSpace*                                AimOffsetBlendSpace;                                     // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3PDN[0x38];                                  // 0x0030(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_Player_ArmSway
	 * Size -> 0x0100 (FullSize[0x0110] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_Player_ArmSway : public FAnimInterest_Player
	{
	public:
		class FName                                                ArmSwayCamAnimSetName;                                   // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ArmSwayMoveAnimSetName;                                  // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                WeaponPoseAnimSetName;                                   // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                         ArmSwayCamBlendSpace;                                    // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                         ArmSwayMoveBlendSpace;                                   // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       WeaponPoseSequence;                                      // 0x0038(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpDownSwayValue;                                         // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ForwardBackSwayValue;                                    // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeftRightSwayValue;                                      // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ArmSwayMaxedAlpha;                                       // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponAdditivePoseAlpha;                                 // 0x0050(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ST8W[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimationLayer*                                     ArmSwayLeftRightLayer;                                   // 0x0058(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimationLayer*                                     ArmSwayUpDownLayer;                                      // 0x0060(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0FXB[0xA8];                                  // 0x0068(0x00A8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_Player_Debug
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_Player_Debug : public FAnimInterest_Player
	{	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_Player_ArmIK
	 * Size -> 0x0110 (FullSize[0x0120] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_Player_ArmIK : public FAnimInterest_Player
	{
	public:
		float                                                      LeftArmAlpha;                                            // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RightArmAlpha;                                           // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X3CF[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          LeftArmTransform;                                        // 0x0020(0x0030) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTransform                                          RightArmTransform;                                       // 0x0050(0x0030) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FFabrikCustomSettings                               LeftArmFabrik;                                           // 0x0080(0x0020) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FFabrikCustomSettings                               RightArmFabrik;                                          // 0x00A0(0x0020) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		class UAnimationLayer*                                     ArmIKLeftLayer;                                          // 0x00C0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimationLayer*                                     ArmIKRightLayer;                                         // 0x00C8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_207F[0x50];                                  // 0x00D0(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_Player_CameraStability
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_Player_CameraStability : public FAnimInterest_Player
	{
	public:
		float                                                      CameraAlpha;                                             // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraAlphaLerpSpeed;                                    // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraAlphaTolerance;                                    // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HN0U[0xC];                                   // 0x001C(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimInterest_Player_UpperBodyAdditive
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FAnimInterest_Player_UpperBodyAdditive : public FAnimInterest_Player
	{
	public:
		float                                                      UpperBodyAdditiveLeftHandAlpha;                          // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpperBodyAdditiveRightHandAlpha;                         // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpperBodyAdditiveMainPathCorrectiveAlpha;                // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpperBodyAdditiveNonMainPathCorrectiveAlpha;             // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpperBodyAdditiveMainPathPoseAlpha;                      // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpperBodyAdditiveNonMainPathPoseAlpha;                   // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ModularRotationAnimInstData
	 * Size -> 0x000C
	 */
	struct FModularRotationAnimInstData
	{
	public:
		float                                                      LegsYaw;                                                 // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CapsuleYaw;                                              // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LegsOffsetFromCapsule;                                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PoseDetails
	 * Size -> 0x0008
	 */
	struct FPoseDetails
	{
	public:
		float                                                      LeftHandAlpha;                                           // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RightHandAlpha;                                          // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AdditivePoseRequest
	 * Size -> 0x0028
	 */
	struct FAdditivePoseRequest
	{
	public:
		class UAnimSequence*                                       AdditivePose;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPoseDetails                                        PoseDetails;                                             // 0x0008(0x0008) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class UAnimSequence*                                       CorrectivePose;                                          // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DesiredTransitionDuration;                               // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinimumTimeToPersist;                                    // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPoseBlendMode                                             TransitionBlendMode;                                     // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsClearRequest;                                         // 0x0021(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCodeControlled;                                       // 0x0022(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HNFX[0x5];                                   // 0x0023(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AdditivePoseState
	 * Size -> 0x0078
	 */
	struct FAdditivePoseState
	{
	public:
		class UAnimSequence*                                       CurrentAdditivePose;                                     // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPoseDetails                                        CurrentPoseDetails;                                      // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		class UAnimSequence*                                       PrevAdditivePose;                                        // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPoseDetails                                        PrevPoseDetails;                                         // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		class UAnimSequence*                                       CurrentCorrectivePose;                                   // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       PrevCorrectivePose;                                      // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InternalBlendValue;                                      // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PrevToCurrentBlendValue;                                 // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPoseDetails                                        PrevToCurrentBlendPoseDetails;                           // 0x0038(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		float                                                      TransitionDuration;                                      // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentAdditivePoseCooldown;                             // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPoseBlendMode                                             CurrentBlendMode;                                        // 0x0048(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyOnMainPath;                                        // 0x0049(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YVP3[0x6];                                   // 0x004A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAdditivePoseRequest                                PendingAdditiveRequest;                                  // 0x0050(0x0028) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ArmLimbIKConfigValues
	 * Size -> 0x0060
	 */
	struct FArmLimbIKConfigValues
	{
	public:
		struct FTransform                                          EffectorTransform;                                       // 0x0000(0x0030) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
		struct FFabrikCustomSettings                               FabrikSettings;                                          // 0x0030(0x0020) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate
		float                                                      Alpha;                                                   // 0x0050(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Y37U[0xC];                                   // 0x0054(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ArmLimbIKValues
	 * Size -> 0x0050
	 */
	struct FArmLimbIKValues
	{
	public:
		TMap<EArmLimbIKLimbId, struct FArmLimbIKConfigValues>      LimbValuesMap;                                           // 0x0000(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.CameraAspectRatioProfile
	 * Size -> 0x0008
	 */
	struct FCameraAspectRatioProfile
	{
	public:
		bool                                                       bRestrict;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VQ0A[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AspectRatio;                                             // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerMovementParamSetsDataSelector
	 * Size -> 0x0030
	 */
	struct FPlayerMovementParamSetsDataSelector
	{
	public:
		class UPlayerMovementParamSetsDataSelectorAsset*           DataAsset;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UKnowledgeBaseComponent*                             KBComp;                                                  // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UKnowledgeBaseExpressionCache*                       ExprCache;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_JQKL[0x18];                                  // 0x0018(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CurrentMovementParamSetInfo
	 * Size -> 0x0008
	 */
	struct FCurrentMovementParamSetInfo
	{
	public:
		unsigned char                                              UnknownData_XH4H[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PlayerStateCharacterData
	 * Size -> 0x000C
	 */
	struct FPlayerStateCharacterData
	{
	public:
		class FName                                                CharacterNameId;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharacterGender                                           Gender;                                                  // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WHJ7[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SliderDisplaySettings
	 * Size -> 0x002C
	 */
	struct FSliderDisplaySettings
	{
	public:
		float                                                      Minimum;                                                 // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Maximum;                                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DecimalPrecison;                                         // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseActualValuesForDisplay;                              // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NCDQ[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DisplayMinimum;                                          // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DisplayMaximum;                                          // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DisplayRoundToDecimalPlaces;                             // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultValue;                                            // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSnapping;                                               // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YCPM[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SnapSteps;                                               // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLiveUpdating;                                           // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C2T8[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ObjectiveUIText
	 * Size -> 0x0020
	 */
	struct FObjectiveUIText
	{
	public:
		class FText                                                ObjectiveUIText;                                         // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O14W[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.QuestDebugStartData
	 * Size -> 0x0020
	 */
	struct FQuestDebugStartData
	{
	public:
		int32_t                                                    PlayerLevel;                                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UMD1[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     EquipmentPack;                                           // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameEventNetworkingWrapper
	 * Size -> 0x0068
	 */
	struct FGameEventNetworkingWrapper
	{
	public:
		class UGameEvent*                                          AuthorityGameEvent;                                      // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UGameEvent*                                          LocalGameEvent;                                          // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UGameEvent*                                          EveryoneGameEvent;                                       // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9YQF[0x50];                                  // 0x0018(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.Stim
	 * Size -> 0x00B8
	 */
	struct FStim
	{
	public:
		class UStimTemplate*                                       Template;                                                // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FStimID                                             ID;                                                      // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Position;                                                // 0x000C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class USceneComponent>                      AnchorComponent;                                         // 0x001C(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               Instigator;                                              // 0x0024(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    QueuedTests;                                             // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YX49[0x88];                                  // 0x0030(0x0088) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DistractionDefinition
	 * Size -> 0x0020
	 */
	struct FDistractionDefinition
	{
	public:
		class UStimTemplate*                                       Stim;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UActionDefinition*                                   ResponseAction;                                          // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDistractionActionParams*                            ResponseActionParams;                                    // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bResponseOutlastsStim;                                   // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bResponseOutlastsBehaviourIssuer;                        // 0x0019(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VBZV[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DLCContentValidationContent
	 * Size -> 0x0008
	 */
	struct FDLCContentValidationContent
	{
	public:
		unsigned char                                              UnknownData_9IMB[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DLCContentValidationContentItem
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FDLCContentValidationContentItem : public FDLCContentValidationContent
	{
	public:
		unsigned char                                              ItemArchetype[0x28];                                     // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct DeadIsland.DLCContentValidationContentSkill
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FDLCContentValidationContentSkill : public FDLCContentValidationContent
	{
	public:
		unsigned char                                              SkillDefinition[0x28];                                   // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct DeadIsland.DLCContentValidationContentGameEntitlement
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FDLCContentValidationContentGameEntitlement : public FDLCContentValidationContent
	{
	public:
		struct FFixedDataTableEditableRowHandle                    EntitlementID;                                           // 0x0008(0x0018) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DLCContentValidationContentItemUpgrade
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FDLCContentValidationContentItemUpgrade : public FDLCContentValidationContent
	{
	public:
		unsigned char                                              ItemUpgrade[0x28];                                       // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct DeadIsland.DLCContentValidationQuery
	 * Size -> 0x0078
	 */
	struct FDLCContentValidationQuery
	{
	public:
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0000(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FDLCContentValidationContentItem>            Items;                                                   // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FDLCContentValidationContentSkill>           Skills;                                                  // 0x0048(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FDLCContentValidationContentGameEntitlement> GameEntitlements;                                        // 0x0058(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FDLCContentValidationContentItemUpgrade>     ItemUpgrades;                                            // 0x0068(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DLCEntitlementUIData
	 * Size -> 0x0018
	 */
	struct FDLCEntitlementUIData
	{
	public:
		class FText                                                PopUpMessage;                                            // 0x0000(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DLCEntitlementInstance
	 * Size -> 0x0060
	 */
	struct FDLCEntitlementInstance
	{
	public:
		class UDLCEntitlement*                                     Entitlement;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_23VV[0x58];                                  // 0x0008(0x0058) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DLCEntitlementUser
	 * Size -> 0x0060
	 */
	struct FDLCEntitlementUser
	{
	public:
		unsigned char                                              UnknownData_ZRYH[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UDLCEntitlement*, struct FDLCEntitlementInstance> Entitlements;                                            // 0x0010(0x0050) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.EntitlementRequest
	 * Size -> 0x0008
	 */
	struct FEntitlementRequest
	{
	public:
		unsigned char                                              UnknownData_REDR[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameEntitlementSources
	 * Size -> 0x0010
	 */
	struct FGameEntitlementSources
	{
	public:
		TArray<uint32_t>                                           SourceKeys;                                              // 0x0000(0x0010) ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.InteractionStateGameEvent
	 * Size -> 0x0020
	 */
	struct FInteractionStateGameEvent
	{
	public:
		struct FDataTableRowHandle                                 StateHandle;                                             // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		EInteractionResponseNetworkPolicy                          Policy;                                                  // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WYS0[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGameEvent*                                          GameEvent;                                               // 0x0018(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.InteractionStatesEntry
	 * Size -> 0x0018
	 */
	struct FInteractionStatesEntry
	{
	public:
		struct FDataTableRowHandle                                 StateHandle;                                             // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bEnabledByDefault;                                       // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D4TM[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.InteractionStateRequest
	 * Size -> 0x0030
	 */
	struct FInteractionStateRequest
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TT0Y[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFixedDataTableEditableRowHandle                    RowHandle;                                               // 0x0008(0x0018) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HV0F[0x10];                                  // 0x0020(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.InteractionCategoryRequest
	 * Size -> 0x0010
	 */
	struct FInteractionCategoryRequest
	{
	public:
		EInteractionMode                                           InteractionMode;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GBH8[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInteractionCategory*                                Category;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DoorGlassData
	 * Size -> 0x0040
	 */
	struct FDoorGlassData
	{
	public:
		class UStaticMesh*                                         GlassMesh;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_69BY[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          RelativePosition;                                        // 0x0010(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DSAkComponentBudgetConfig
	 * Size -> 0x0010
	 */
	struct FDSAkComponentBudgetConfig
	{
	public:
		class FName                                                ObjectBehaviourCategoryName;                             // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsBudgetCritical;                                       // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I2OX[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BudgetPriority;                                          // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PostedAudioEventData
	 * Size -> 0x0018
	 */
	struct FPostedAudioEventData
	{
	public:
		class UAkAudioEvent*                                       AudioEvent;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BTBT[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.LevelDifferenceScaling
	 * Size -> 0x0098
	 */
	struct FLevelDifferenceScaling
	{
	public:
		struct FRuntimeFloatCurve                                  LevelDifferenceToMultiplier;                             // 0x0000(0x0098) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DamageModifierValue
	 * Size -> 0x0008
	 */
	struct FDamageModifierValue
	{
	public:
		bool                                                       bOwnerIsImmune;                                          // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3U5H[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Value;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DamageTypeModifierMap
	 * Size -> 0x0050
	 */
	struct FDamageTypeModifierMap
	{
	public:
		TMap<class UClass*, struct FDamageModifierValue>           ModifiersByDamageType;                                   // 0x0000(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ModifierCollection
	 * Size -> 0x00A0
	 */
	struct FModifierCollection
	{
	public:
		TMap<class UClass*, struct FDamageModifierValue>           ModifiersByDamageType;                                   // 0x0000(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<class FName, struct FDamageTypeModifierMap>           PartSpecificModifiersByDamageType;                       // 0x0050(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.KBRestrictedModifierCollection
	 * Size -> 0x00D8
	 */
	struct FKBRestrictedModifierCollection
	{
	public:
		struct FKnowledgeBaseExpression                            KBRequirements;                                          // 0x0000(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FModifierCollection                                 Collection;                                              // 0x0038(0x00A0) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.EngagementRingMovementModeState
	 * Size -> 0x0080
	 */
	struct FEngagementRingMovementModeState
	{
	public:
		unsigned char                                              UnknownData_525L[0x80];                                  // 0x0000(0x0080) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.EngagementRingID
	 * Size -> 0x0008
	 */
	struct FEngagementRingID
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSquishAmount;                                         // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.EngagementRing
	 * Size -> 0x0048
	 */
	struct FEngagementRing
	{
	public:
		struct FEngagementRingID                                   RingID;                                                  // 0x0000(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PointSpacing;                                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InvPointSpacing;                                         // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PointSpacingRadians;                                     // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UserCount;                                               // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2OP8[0x30];                                  // 0x0018(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SensorMetric
	 * Size -> 0x000C
	 */
	struct FSensorMetric
	{
	public:
		bool                                                       bUnitsAreRelativeToOwnerCapsuleSize;                     // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DK5O[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      WorldSpaceUnits;                                         // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PercentageOfCapsuleSize;                                 // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SensorConfig
	 * Size -> 0x0034
	 */
	struct FSensorConfig
	{
	public:
		struct FSensorMetric                                       SensorBottomLocation;                                    // 0x0000(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSensorMetric                                       SensorHeight;                                            // 0x000C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSensorMetric                                       SensorWidth;                                             // 0x0018(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		float                                                      HorizontalOffset;                                        // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VerticalOffset;                                          // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CollisionProfile;                                        // 0x002C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ItemConfiguration
	 * Size -> 0x0038
	 */
	struct FItemConfiguration
	{
	public:
		bool                                                       bAssignToPaperDollSlot;                                  // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_73VQ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                PaperDollSlotName;                                       // 0x0004(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAssignToShortcutGroup;                                  // 0x000C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WMWV[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ShortcutGroupName;                                       // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSelectItem;                                             // 0x0018(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HS52[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UItemSpecification*                                  ItemSpecification;                                       // 0x0020(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ArrayElementTitleText;                                   // 0x0028(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ExaminableObjectMetadata
	 * Size -> 0x0008
	 */
	struct FExaminableObjectMetadata
	{
	public:
		uint32_t                                                   GroupId;                                                 // 0x0000(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NameID;                                                  // 0x0004(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ExplosionDamageDefinition
	 * Size -> 0x00E0
	 */
	struct FExplosionDamageDefinition
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OD87[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              DamageTypeClass;                                         // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDSDamageData                                       DSDamageData;                                            // 0x0010(0x0058) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, ExposeOnSpawn, NativeAccessSpecifierPublic
		EDamageNetworkApplicationPolicy                            DamageNetworkApplicationPolicy;                          // 0x0068(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOnlyApplyToCharacters;                                  // 0x0069(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseScalingOnAccumulatingEffects;                        // 0x006A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5J6P[0x5];                                   // 0x006B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAccumulatingEffectTypeAndValue>             AccumulatingEffectsToApply;                              // 0x0070(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ExposeOnSpawn, NativeAccessSpecifierPublic
		class UCurveFloat*                                         DistanceScaleCurve;                                      // 0x0080(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UExplosionBalancingDataAsset*                        DistanceBalancingData;                                   // 0x0088(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DistanceScaleCurveClassOverrides[0x50];                  // 0x0090(0x0050) UNKNOWN PROPERTY: MapProperty
	};

	/**
	 * ScriptStruct DeadIsland.ExplosionStatusEffectDefinition
	 * Size -> 0x0028
	 */
	struct FExplosionStatusEffectDefinition
	{
	public:
		class UClass*                                              Type;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStatusEffectParams*                                 Params;                                                  // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              StatusEffectIgnoredForReactions;                         // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5V9V[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StatusEffectTriggerChance;                               // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDistance;                                             // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDistance;                                             // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxStaticOcclusionAmount;                                // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H5ST[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ExplosionStimDefinition
	 * Size -> 0x0018
	 */
	struct FExplosionStimDefinition
	{
	public:
		struct FStimChooser                                        StimType;                                                // 0x0000(0x0010) Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn, NativeAccessSpecifierPublic
		float                                                      StimRadius;                                              // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StimDuration;                                            // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AgentToFactionMapping
	 * Size -> 0x0010
	 */
	struct FAgentToFactionMapping
	{
	public:
		class UFaction*                                            ToFaction;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFactionReaction                                           Reaction;                                                // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L8IZ[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AgentToAgentMapping
	 * Size -> 0x000C
	 */
	struct FAgentToAgentMapping
	{
	public:
		TWeakObjectPtr<class UFactionAgentComponent>               ToAgent;                                                 // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFactionReaction                                           Reaction;                                                // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R23Y[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.FactionReaction
	 * Size -> 0x0018
	 */
	struct FFactionReaction
	{
	public:
		class UFaction*                                            FromFaction;                                             // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFaction*                                            ToFaction;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFactionReaction                                           Reaction;                                                // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WYQB[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MultidirectionalFactionReaction
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FMultidirectionalFactionReaction : public FTableRowBase
	{
	public:
		struct FFactionReaction                                    Reaction;                                                // 0x0008(0x0018) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bBidirectional;                                          // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XPTX[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.FirstRunFlowEntry
	 * Size -> 0x0018
	 */
	struct FFirstRunFlowEntry
	{
	public:
		TArray<class UFirstRunFlowConditionBase*>                  Conditions;                                              // 0x0000(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UFirstRunFlowStepBase*                               Step;                                                    // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FluidActorInstanceInitialState
	 * Size -> 0x0030
	 */
	struct FFluidActorInstanceInitialState
	{
	public:
		float                                                      FluidPayloadRadius;                                      // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFluidSplatterParams                                SplatterParams;                                          // 0x0004(0x0008) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NAWD[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ETransmittableStatus>                               InitialActiveStates;                                     // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bBeginHiddenInGame;                                      // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9VO2[0xC];                                   // 0x0021(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bOverrideFluidsInTheMix;                                 // 0x002D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_73Z9[0x2];                                   // 0x002E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.OverrideFluidCompositionInRadiusParams
	 * Size -> 0x0014
	 */
	struct FOverrideFluidCompositionInRadiusParams
	{
	public:
		bool                                                       bOverrideFluidCompositionInRadius;                       // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZS22[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Radius;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Delay;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRestrictVerticalDistance;                               // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BBND[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CompositionFractionToOverride;                           // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FluidSimDropletProjectileConfig
	 * Size -> 0x0058
	 */
	struct FFluidSimDropletProjectileConfig
	{
	public:
		unsigned char                                              CollidesWith[0x50];                                      // 0x0000(0x0050) UNKNOWN PROPERTY: SetProperty
		float                                                      MinUpdateInterval;                                       // 0x0050(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Lifetime;                                                // 0x0054(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FluidSimDropletPayloadConfig
	 * Size -> 0x0030
	 */
	struct FFluidSimDropletPayloadConfig
	{
	public:
		class UClass*                                              FluidPayloadClass;                                       // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FluidPayloadRadius;                                      // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X0KC[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ETransmittableStatus>                               InitialActiveStates;                                     // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bOverrideFluidsOnConsume;                                // 0x0020(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCritical;                                               // 0x0021(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverridePriority;                                       // 0x0022(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q1IA[0x1];                                   // 0x0023(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpawnPriority;                                           // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ImpactVelocityTransferMultiplier;                        // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XFMC[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.FluidPointImpactParams
	 * Size -> 0x0150
	 */
	struct FFluidPointImpactParams
	{
	public:
		TArray<struct FDamageTypeAndQuantity>                      DamageTypesAndQuantities;                                // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      BaseForceQuantity;                                       // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bScaleForceByProjectileSpeed;                            // 0x0014(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WJ8Z[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRangeBasedScalar                                   ProjectileForceSpeedScalar;                              // 0x0018(0x0028) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bScalePropImpulseByProjectileSpeed;                      // 0x0040(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YXOA[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRangeBasedScalar                                   ProjectilePropImpulseSpeedScalar;                        // 0x0048(0x0028) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FImpactConfiguration                                ImpactConfiguration;                                     // 0x0070(0x00D8) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UModifiableValueDefinition*                          TargetForceDamageTakenMultiplier;                        // 0x0148(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FluidSimDropletConfig
	 * Size -> 0x01F8
	 */
	struct FFluidSimDropletConfig
	{
	public:
		class UFluidTypeInfo*                                      FluidTypeInfo;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFluidSimDropletProjectileConfig                    ProjectileParams;                                        // 0x0008(0x0058) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FFluidSimDropletPayloadConfig                       PayloadParams;                                           // 0x0060(0x0030) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FOverrideFluidCompositionInRadiusParams             OverrideFluidCompositionParams;                          // 0x0090(0x0014) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bApplyFluidPointImpactCollisionResponse;                 // 0x00A4(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LNBY[0x3];                                   // 0x00A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFluidPointImpactParams                             PointImpactParams;                                       // 0x00A8(0x0150) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttachmentInfo
	 * Size -> 0x00C0
	 */
	struct FAttachmentInfo
	{
	public:
		class UPrimitiveComponent*                                 Primitive;                                               // 0x0000(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BoneName;                                                // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHitResult                                          HitResult;                                               // 0x0010(0x00B0) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ModularProjectileStateBlackboard
	 * Size -> 0x0058
	 */
	struct FModularProjectileStateBlackboard
	{
	public:
		float                                                      RemainingLifetime;                                       // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLifetimeUpdatePaused;                                   // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasDetonated;                                           // 0x0005(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInflightSteeringAllowed;                                // 0x0006(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EB9I[0x1];                                   // 0x0007(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<struct FHashResultIgnoreCase, class UObject*>         StateObjects;                                            // 0x0008(0x0050) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FModularProjectileTargetInfoBlackboard
	 * Size -> 0x0058
	 */
	struct FFModularProjectileTargetInfoBlackboard
	{
	public:
		TWeakObjectPtr<class USceneComponent>                      CurrentTarget;                                           // 0x0000(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTargetPointInfo                                    TargetPointInfo;                                         // 0x0008(0x0050) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FuryModeActionDataSet
	 * Size -> 0x0020
	 */
	struct FFuryModeActionDataSet
	{
	public:
		class UActionDefinition*                                   ActionToCall;                                            // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AmountOfFuryToDecrement;                                 // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKillFuryOnEnd;                                          // 0x000C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U55S[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               SubscribeID;                                             // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FuryGainBlockedState
	 * Size -> 0x000C
	 */
	struct FFuryGainBlockedState
	{
	public:
		class FName                                                SourceName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsBlocked;                                              // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IZO5[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.EffectsRegistryCollider
	 * Size -> 0x000C
	 */
	struct FEffectsRegistryCollider
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EffectsRegistry                                            Type;                                                    // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WYQG[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameCollisionHandlerSettings
	 * Size -> 0x0024
	 */
	struct FGameCollisionHandlerSettings
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGameCollisionHandlerOverrideResponse                      EngineOverride;                                          // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H3Y6[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EffectsVelocityThreshold;                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceCull;                                            // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BehindDistanceCull;                                      // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SimilarDistanceA;                                        // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxNumberSimilarEffectsA;                                // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SimilarDistanceB;                                        // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxNumberSimilarEffectsB;                                // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaximumTrackingTime;                                     // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameCollisionHandlerCosmeticPairTracking
	 * Size -> 0x0028
	 */
	struct FGameCollisionHandlerCosmeticPairTracking
	{
	public:
		float                                                      MinTimeBetweenEffects;                                   // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaximumTrackingTime;                                     // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaximumNumberOfEvents;                                   // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KZYH[0x1C];                                  // 0x000C(0x001C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameCollisionHandlerResponseTracking
	 * Size -> 0x0060
	 */
	struct FGameCollisionHandlerResponseTracking
	{
	public:
		float                                                      MaximumTrackingTime;                                     // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G60E[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ResponsePairs[0x50];                                     // 0x0008(0x0050) UNKNOWN PROPERTY: SetProperty
		class USimpleCollisionInstanceData*                        ReusableSimpleCollisionInstanceData;                     // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.SimpleCollisionData
	 * Size -> 0x0048
	 */
	struct FSimpleCollisionData
	{
	public:
		TWeakObjectPtr<class AActor>                               Actor0;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               Actor1;                                                  // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPrimitiveComponent*                                 Comp0;                                                   // 0x0010(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPrimitiveComponent*                                 Comp1;                                                   // 0x0018(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicalMaterial*                                   Material0;                                               // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicalMaterial*                                   Material1;                                               // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Position;                                                // 0x0030(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Normal;                                                  // 0x003C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameCollisionVelocityDamageCurve
	 * Size -> 0x00A8
	 */
	struct FGameCollisionVelocityDamageCurve
	{
	public:
		EGameCollisionDamageCurveType                              CurveType;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BKDP[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinSpeed;                                                // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSpeed;                                                // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Damage;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  Curve;                                                   // 0x0010(0x0098) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameCollisionEditorRowAlias
	 * Size -> 0x0020
	 */
	struct FGameCollisionEditorRowAlias
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EffectsRegistry                                            Type;                                                    // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ORK7[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              Class;                                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicalMaterial*                                   Material;                                                // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ScopedGameEventState
	 * Size -> 0x0088
	 */
	struct FScopedGameEventState
	{
	public:
		unsigned char                                              UnknownData_SJPJ[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FScopedKnowledgeBaseExpressionListener              ActiveExpression;                                        // 0x0010(0x0060) Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate
		class UGameEvent*                                          OnStateStartedGameEvent;                                 // 0x0070(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UGameEventState*                                     GameEventState;                                          // 0x0078(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_07YY[0x8];                                   // 0x0080(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ScopedGameEventStateCollection
	 * Size -> 0x0010
	 */
	struct FScopedGameEventStateCollection
	{
	public:
		TArray<struct FScopedGameEventState>                       ScopedStates;                                            // 0x0000(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.GameEventKnowledgeBaseScope
	 * Size -> 0x0020
	 */
	struct FGameEventKnowledgeBaseScope
	{
	public:
		class AActor*                                              ActorToAssociateFactWith;                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSetOnGlobalKB;                                          // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DPL7[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UScopedConditionObject*                              ScopedCondition;                                         // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UScopedConditionObject*                              LifetimeCondition;                                       // 0x0018(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameEventStaticMeshUtils
	 * Size -> 0x0010
	 */
	struct FGameEventStaticMeshUtils
	{
	public:
		class FName                                                ComponentTag;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              SceneComponentClass;                                     // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ExpressionAndGameEventState
	 * Size -> 0x0048
	 */
	struct FExpressionAndGameEventState
	{
	public:
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0000(0x0038) Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameEvent*                                          OnStateStartedGameEvent;                                 // 0x0038(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameEventState*                                     GameEventState;                                          // 0x0040(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AddScopedGameEventState_ExpressionSelector
	 * Size -> 0x0040
	 */
	struct FAddScopedGameEventState_ExpressionSelector
	{
	public:
		bool                                                       bUseScopedStateLifetime;                                 // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_914I[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            LifetimeExpression;                                      // 0x0008(0x0038) Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameEventAKAudioEventUtil
	 * Size -> 0x0068
	 */
	struct FGameEventAKAudioEventUtil
	{
	public:
		struct FAkPostEventExtraParams                             PostEventExtraParams;                                    // 0x0000(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SZ19[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       Event;                                                   // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EventName;                                               // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGameEventAkAudioEventLocation                             Location;                                                // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5I6X[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              SceneComponentClass;                                     // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStopWhenOwnerDestroyed;                                 // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7DY2[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAuxBus*                                           EarlyReflectionBus;                                      // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              ActorToProvideLocation;                                  // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGameEventAkAudioNetworkType                               NetworkType;                                             // 0x0050(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0FZ0[0x17];                                  // 0x0051(0x0017) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameEventAttachmentUtils
	 * Size -> 0x0018
	 */
	struct FGameEventAttachmentUtils
	{
	public:
		class FName                                                AttachSocketName;                                        // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttachmentName;                                          // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAttachment*                                         Attachment;                                              // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.GameEventContextualActorFilteringUtils
	 * Size -> 0x0004
	 */
	struct FGameEventContextualActorFilteringUtils
	{
	public:
		uint32_t                                                   ContextualActorFilteringFlags;                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameEventCosmeticEffectUtil
	 * Size -> 0x0100
	 */
	struct FGameEventCosmeticEffectUtil
	{
	public:
		class UCosmeticEffectsDefinition*                          Effect;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, float>                                   EffectParameters;                                        // 0x0008(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<class FName, struct FVector>                          EffectVec3Parameters;                                    // 0x0058(0x0050) Edit, NativeAccessSpecifierPublic
		EGameEventCosmeticEffectLocation                           EffectLocation;                                          // 0x00A8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_89H4[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              SceneComponentClass;                                     // 0x00B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              ArbitraryActor;                                          // 0x00B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          ArbitraryLocation;                                       // 0x00C0(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_95DJ[0x10];                                  // 0x00F0(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.LootActorDefinitionList
	 * Size -> 0x0010
	 */
	struct FLootActorDefinitionList
	{
	public:
		TArray<class UBaseLootTypeDefinition*>                     Definitions;                                             // 0x0000(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.LootDropConfig
	 * Size -> 0x0020
	 */
	struct FLootDropConfig
	{
	public:
		TArray<class ULootListDefinition*>                         LootDefinitions;                                         // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FLootActorDefinitionList                            LootActorDefinitionList;                                 // 0x0010(0x0010) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.LootDropUpdatingConfig
	 * Size -> 0x0028
	 */
	struct FLootDropUpdatingConfig
	{
	public:
		ELootUpdating                                              LootUpdating;                                            // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MVVZ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLootDropConfig                                     LootDropConfig;                                          // 0x0008(0x0020) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HealthRegenDetails
	 * Size -> 0x000C
	 */
	struct FHealthRegenDetails
	{
	public:
		float                                                      OwnerHealthRestoreFraction;                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FractionOfHealthRestoreAppliedImmediately;               // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HealthRecoveryDuration;                                  // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.OverrideLevelData
	 * Size -> 0x0030
	 */
	struct FOverrideLevelData
	{
	public:
		bool                                                       bUseMinLevel;                                            // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7KJA[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MinLevel;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseMaxLevel;                                            // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TOVL[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxLevel;                                                // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseOffset;                                              // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BWAE[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFixedDataTableEditableRowHandle                    OffsetRange;                                             // 0x0018(0x0018) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.TutorialScopeParams
	 * Size -> 0x0028
	 */
	struct FTutorialScopeParams
	{
	public:
		class FName                                                TutorialKey;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTutorialBase*                                       TutorialToDisplay;                                       // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInfiniteDuration;                                       // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SW9Q[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UScopedConditionObject*                              ScopeObject;                                             // 0x0018(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExtraDurationTime;                                       // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R52Y[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameEventTutorialScope
	 * Size -> 0x0038
	 */
	struct FGameEventTutorialScope
	{
	public:
		struct FTutorialScopeParams                                ScopeParams;                                             // 0x0000(0x0028) Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_251I[0x10];                                  // 0x0028(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DialogueRuntimeEventGameEventHandler
	 * Size -> 0x0010
	 */
	struct FDialogueRuntimeEventGameEventHandler
	{
	public:
		EDialogueRuntimeEventHandlerResponse                       Response;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R1RN[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGameEvent*                                          GameEvent;                                               // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DialogueRuntimeEventGameEventStateHandler
	 * Size -> 0x0070
	 */
	struct FDialogueRuntimeEventGameEventStateHandler
	{
	public:
		bool                                                       bShouldConsume;                                          // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KANN[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGameEventState*                                     GameEventState;                                          // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameEvent*                                          OnRuntimeStateBegun;                                     // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameEvent*                                          OnRuntimeStateEnded;                                     // 0x0018(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F56S[0x50];                                  // 0x0020(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameEventStateResponse_HUDFader_Config
	 * Size -> 0x0010
	 */
	struct FGameEventStateResponse_HUDFader_Config
	{
	public:
		float                                                      Duration;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEasingFunc                                                EasingFunc;                                              // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UI34[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EasingExp;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DelayBeginSecs;                                          // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AxisLimitsParams
	 * Size -> 0x0010
	 */
	struct FAxisLimitsParams
	{
	public:
		bool                                                       bUseMinimum;                                             // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TXQS[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Minimum;                                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseMaximum;                                             // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9HMJ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Maximum;                                                 // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ViewLimitsRequest
	 * Size -> 0x0028
	 */
	struct FViewLimitsRequest
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAxisLimitsParams                                   YawRestrictionParams;                                    // 0x0008(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAxisLimitsParams                                   PitchRestrictionParams;                                  // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ScalarMaterialParams
	 * Size -> 0x0010
	 */
	struct FScalarMaterialParams
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WQ5Z[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AttachmentMaterialOverrideData
	 * Size -> 0x0010
	 */
	struct FAttachmentMaterialOverrideData
	{
	public:
		class UMaterialInstance*                                   Material;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Index;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6ZHV[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameEventAttachmentType
	 * Size -> 0x0030
	 */
	struct FGameEventAttachmentType
	{
	public:
		EGameEventAttachmentSelection                              Selection;                                               // 0x0000(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VLVH[0x3];                                   // 0x0001(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_EZXX[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMesh*                                         StaticMeshToUse;                                         // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMesh*                                       SkeletalMeshToUse;                                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ActorClassToUse;                                         // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAttachmentMaterialOverrideData>             MaterialOverrides;                                       // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ActiveGameIntent
	 * Size -> 0x0018
	 */
	struct FActiveGameIntent
	{
	public:
		class UGameIntentResponse*                                 GameIntentResponse;                                      // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VTFC[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CosmeticEffectBlendParameter
	 * Size -> 0x0018
	 */
	struct FCosmeticEffectBlendParameter
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         MultiplierCurve;                                         // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_884S[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CosmeticEffectBlendParameters
	 * Size -> 0x0010
	 */
	struct FCosmeticEffectBlendParameters
	{
	public:
		TArray<struct FCosmeticEffectBlendParameter>               Parameters;                                              // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GasCloudStateInfo
	 * Size -> 0x000C
	 */
	struct FGasCloudStateInfo
	{
	public:
		EGasCloudState                                             CurrentState;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZQ4T[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ServerStateEnterTimeStamp;                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRadiusMultiplier;                                     // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GFxCreditsImageEntry
	 * Size -> 0x0010
	 */
	struct FGFxCreditsImageEntry
	{
	public:
		class UGFxObject*                                          ImageCredit;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGFxImageStreamer*                                   ImageStreamer;                                           // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.IconSubstitutionTextfieldEntry
	 * Size -> 0x0020
	 */
	struct FIconSubstitutionTextfieldEntry
	{
	public:
		class UGFxTextfield*                                       Textfield;                                               // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UTextSubstitutionHandlerBase*>                Handlers;                                                // 0x0008(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TXU0[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DamageEffectSet
	 * Size -> 0x0158
	 */
	struct FDamageEffectSet
	{
	public:
		struct FSplatterMeshInfo                                   SplatterInfo;                                            // 0x0000(0x0090) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSplatterModifiers                                  SplatterModifiers;                                       // 0x0090(0x00B0) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UFluidTypeInfo*                                      FluidType;                                               // 0x0140(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FluidAmount;                                             // 0x0148(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FluidStrength;                                           // 0x014C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EmissionVelocity;                                        // 0x0150(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NMXY[0x4];                                   // 0x0154(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GrappleAnimations
	 * Size -> 0x0038
	 */
	struct FGrappleAnimations
	{
	public:
		class ULevelSequence*                                      SequenceGrappleInto;                                     // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULevelSequence*                                      SequenceGrappleCrouchedInto;                             // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULevelSequence*                                      SequenceGrappleLoop;                                     // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULevelSequence*                                      SequenceGrappleSuccessZombie;                            // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULevelSequence*                                      SequenceGrappleFailure;                                  // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULevelSequence*                                      SequenceGrapplePlayerDeath;                              // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULevelSequence*                                      SequenceGrappleInterrupt;                                // 0x0030(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GrappleMinigameVariation
	 * Size -> 0x0010
	 */
	struct FGrappleMinigameVariation
	{
	public:
		class UClass*                                              Minigame;                                                // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LevelDifference;                                         // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WM6O[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GrappleMinigameFailureParams
	 * Size -> 0x0048
	 */
	struct FGrappleMinigameFailureParams
	{
	public:
		class UClass*                                              DamageType;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDeadIsland_FImpactData                             ImpactData;                                              // 0x0008(0x000C) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L5FM[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStatusEffectArray                                  StatusEffects;                                           // 0x0018(0x0010) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		EAccumulatingEffectScalingPolicy                           AccumulatingEffectsScalingPolicy;                        // 0x0028(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MN93[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAccumulatingEffectArray                            AccumulatingEffectsToApply;                              // 0x0030(0x0010) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      BaseDamage;                                              // 0x0040(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamagePerLevel;                                          // 0x0044(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GrappleMinigameSuccessParams
	 * Size -> 0x0010 (FullSize[0x0030] - InheritedSize[0x0020])
	 */
	struct FGrappleMinigameSuccessParams : public FMinigameSuccessParams
	{
	public:
		class UClass*                                              StatusEffectType;                                        // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StatusEffectDuration;                                    // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BKNZ[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GrappleActionResponseParamsData
	 * Size -> 0x0008
	 */
	struct FGrappleActionResponseParamsData
	{
	public:
		class UAnimSetData*                                        GrappleActionDataSet;                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerHandsVisualParams
	 * Size -> 0x0078
	 */
	struct FPlayerHandsVisualParams
	{
	public:
		unsigned char                                              Character[0x28];                                         // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		TMap<EMeshPerspective, class UMaterialInterface*>          NewMaterial;                                             // 0x0028(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HeavyAttackImpactParams
	 * Size -> 0x0014
	 */
	struct FHeavyAttackImpactParams
	{
	public:
		TWeakObjectPtr<class AMeleeWeaponItemActor>                MeleeWeapon;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChargeValue;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMeleeHitMultipliers                                HitMultipliers;                                          // 0x000C(0x0008) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MontageSlotBlendOut
	 * Size -> 0x000C
	 */
	struct FMontageSlotBlendOut
	{
	public:
		class FName                                                SlotName;                                                // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendOutTime;                                            // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HitReactRequestParamsBase
	 * Size -> 0x0018
	 */
	struct FHitReactRequestParamsBase
	{
	public:
		unsigned char                                              UnknownData_0UR2[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ServerTime;                                              // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    RandomSeed;                                              // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AActor*                                              VictimActor;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct DeadIsland.HitReactResponseStateWrapper
	 * Size -> 0x0010
	 */
	struct FHitReactResponseStateWrapper
	{
	public:
		int16_t                                                    ResponseIndex;                                           // 0x0000(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UNO2[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FUserParamsObjectWrapper                            ResponseState;                                           // 0x0008(0x0008) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HitReactResponseParams
	 * Size -> 0x0058
	 */
	struct FHitReactResponseParams
	{
	public:
		TArray<bool>                                               TreeExpressionResults;                                   // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		int32_t                                                    TreeAdoptedFrom;                                         // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8NHQ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int16_t>                                            ResponseIndices;                                         // 0x0018(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<int16_t>                                            AdoptedResponseIndices;                                  // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FHitReactResponseStateWrapper>               WrappedResponseStates;                                   // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FHitReactResponseStateWrapper>               WrappedAdoptedResponseStates;                            // 0x0048(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.HitReactClientRequestParams
	 * Size -> 0x0078 (FullSize[0x0090] - InheritedSize[0x0018])
	 */
	struct FHitReactClientRequestParams : public FHitReactRequestParamsBase
	{
	public:
		struct FGuid                                               PrimaryImpactID;                                         // 0x0018(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FGuid>                                       ImpactDependencies;                                      // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		struct FHitReactResponseParams                             ResponseParams;                                          // 0x0038(0x0058) NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.HitReactServerNonAuthoritativeImpactRecord
	 * Size -> 0x0010
	 */
	struct FHitReactServerNonAuthoritativeImpactRecord
	{
	public:
		class UBaseImpactEventResultWrapper*                       Impact;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReceivedTimeSeconds;                                     // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W49S[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.HitReactImpactEventData
	 * Size -> 0x0138
	 */
	struct FHitReactImpactEventData
	{
	public:
		EImpactEventType                                           Type;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K7SS[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseObjectSerializer                      ImpactKB;                                                // 0x0008(0x00B8) NativeAccessSpecifierPublic
		struct FGuid                                               ID;                                                      // 0x00C0(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULaunchSettings*                                     LaunchSettings;                                          // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FEventInstigator                                    Instigator;                                              // 0x00D8(0x0010) NoDestructor, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               DamagedActor;                                            // 0x00E8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               DamageCauser;                                            // 0x00F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Force;                                                   // 0x00F8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize10                               Impulse;                                                 // 0x00FC(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector_NetQuantize10                               ImpactPoint_Or_Origin;                                   // 0x0108(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             ImpactDir_Or_RadiusStrength;                             // 0x0114(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                ImpactedBoneName;                                        // 0x0120(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                PreDismemberParentBoneName;                              // 0x0128(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              Flags;                                                   // 0x0130(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9OBO[0x7];                                   // 0x0131(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.HitReactReplicatedRequestParams
	 * Size -> 0x0158 (FullSize[0x0170] - InheritedSize[0x0018])
	 */
	struct FHitReactReplicatedRequestParams : public FHitReactRequestParamsBase
	{
	public:
		struct FVector_NetQuantize10                               VictimInitialLocation;                                   // 0x0018(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector_NetQuantize                                 VictimInitialRotationEuler;                              // 0x0024(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FHitReactImpactEventData                            ImpactEventData;                                         // 0x0030(0x0138) NativeAccessSpecifierPrivate
		class APawn*                                               AttackerPawn;                                            // 0x0168(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.HitReactNetworkRequest
	 * Size -> 0x01DC (FullSize[0x01E8] - InheritedSize[0x000C])
	 */
	struct FHitReactNetworkRequest : public FFastArraySerializerItem
	{
	public:
		struct FGuid                                               RequestId;                                               // 0x000C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ML7G[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHitReactReplicatedRequestParams                    RequestParams;                                           // 0x0020(0x0170) NativeAccessSpecifierPublic
		struct FHitReactResponseParams                             ResponseParams;                                          // 0x0190(0x0058) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HitReactNetworkRequestArray
	 * Size -> 0x0080 (FullSize[0x0188] - InheritedSize[0x0108])
	 */
	struct FHitReactNetworkRequestArray : public FFastArraySerializer
	{
	public:
		unsigned char                                              UnknownData_WYUF[0x20];                                  // 0x0108(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FHitReactNetworkRequest>                     Requests;                                                // 0x0128(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_JRT5[0x50];                                  // 0x0138(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.HitReactNetworkResolutionTableIncomingEntry
	 * Size -> 0x0058
	 */
	struct FHitReactNetworkResolutionTableIncomingEntry
	{
	public:
		bool                                                       bOverrideDefaultResolution;                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHitReactNetworkResolutionBehaviour                        DefaultResolution;                                       // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EZA8[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UClass*, EHitReactNetworkResolutionBehaviour>   ExistingResponseResolutions;                             // 0x0008(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HitDeathReactTreeDefinition
	 * Size -> 0x0048
	 */
	struct FHitDeathReactTreeDefinition
	{
	public:
		EHitReactTreeNetworkEvaluationPolicy                       NetworkPolicy;                                           // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RBBR[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0008(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHitReactTree*                                       ReactTree;                                               // 0x0040(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttributeProxyRangeScalar
	 * Size -> 0x0030 (FullSize[0x0050] - InheritedSize[0x0020])
	 */
	struct FAttributeProxyRangeScalar : public FBaseRangeBasedScalar
	{
	public:
		struct FAttributeValueProxy                                ScalarStartRange;                                        // 0x0020(0x0018) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FAttributeValueProxy                                ScalarEndRange;                                          // 0x0038(0x0018) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HitscanDeferredImpactRequest
	 * Size -> 0x0318
	 */
	struct FHitscanDeferredImpactRequest
	{
	public:
		struct FGuid                                               ImpactID;                                                // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPointImpactEventRequest                            ImpactRequest;                                           // 0x0010(0x0308) ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.LaunchParameters
	 * Size -> 0x0050
	 */
	struct FLaunchParameters
	{
	public:
		struct FTransform                                          InitialTransform;                                        // 0x0000(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             InitialVelocity;                                         // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UV47[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADIPlayerCharacter*                                  PlayerCharacter;                                         // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PQEC[0x8];                                   // 0x0048(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.HordeGauntletLevelConfig
	 * Size -> 0x00B0 (FullSize[0x00B8] - InheritedSize[0x0008])
	 */
	struct FHordeGauntletLevelConfig : public FTableRowBase
	{
	public:
		class FString                                              LevelName;                                               // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LevelSpawnTag;                                           // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Level[0x28];                                             // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              Sublevels[0x10];                                         // 0x0050(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              HazardSublevels[0x10];                                   // 0x0060(0x0010) UNKNOWN PROPERTY: ArrayProperty
		class UDataTable*                                          ObjectiveLevelsTable;                                    // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ValidMissions[0x10];                                     // 0x0078(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<class FString>                                      IngressBoatPaths;                                        // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FString>                                      EgressBoatPaths;                                         // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class UBatchZombieConfig*>                          LevelAmbientZombieConfigs;                               // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HordeGauntletZoneConfig
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FHordeGauntletZoneConfig : public FTableRowBase
	{
	public:
		class FString                                              ZoneName;                                                // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumLevelsinZone;                                         // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B8BO[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FHordeGauntletLevelConfig>                   LevelConfigs;                                            // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class UBatchZombieConfig*>                          ZoneZombieConfigs;                                       // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HordeSetEntry
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FHordeSetEntry : public FTableRowBase
	{
	public:
		unsigned char                                              MissionGraph[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		int32_t                                                    Priority;                                                // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O8HU[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UHordeNeighborhoodConfig*>                    InvalidNeighbourhoods;                                   // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		EHordeMissionRepetitionType                                RepetitionRule;                                          // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EHLP[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.HordeMutatorBundleSlotData
	 * Size -> 0x000C
	 */
	struct FHordeMutatorBundleSlotData
	{
	public:
		int32_t                                                    SlotIndex;                                               // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MutatorBundleID;                                         // 0x0004(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HordeActiveMutatorBundleData
	 * Size -> 0x0020
	 */
	struct FHordeActiveMutatorBundleData
	{
	public:
		TArray<class AHordeBaseMutator*>                           ActiveMutatorInstances;                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic
		int32_t                                                    BundleSlotIndex;                                         // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BundleID;                                                // 0x0014(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AOWP[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AutoResetConditionSatisfiedSettings
	 * Size -> 0x0008
	 */
	struct FAutoResetConditionSatisfiedSettings
	{
	public:
		EConditionSatisfiedAutoReset                               AutoResetSatisfiedPolicy;                                // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HUZV[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ResetAfterTime;                                          // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DismemberOnHitBodyPart
	 * Size -> 0x000C
	 */
	struct FDismemberOnHitBodyPart
	{
	public:
		class FName                                                BodyPartName;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTryDismember;                                           // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceDismember;                                         // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DA3C[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.HordeZombieKnowledgeBaseExpression
	 * Size -> 0x0068
	 */
	struct FHordeZombieKnowledgeBaseExpression
	{
	public:
		class FText                                                ZombieName;                                              // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     BaseZombieSoftObjectPath;                                // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            KBExpression;                                            // 0x0030(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HordeMPProfileClassProgressionProfile
	 * Size -> 0x0004
	 */
	struct FHordeMPProfileClassProgressionProfile
	{
	public:
		int32_t                                                    ExpObtained;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HordeProfile
	 * Size -> 0x0048
	 */
	struct FHordeProfile
	{
	public:
		struct FSoftObjectPath                                     SoftObjectPath;                                          // 0x0000(0x0018) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0018(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FString                                              IconLabel;                                               // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4WEK[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.HordeMPProfileTalentProfile
	 * Size -> 0x0030
	 */
	struct FHordeMPProfileTalentProfile
	{
	public:
		TArray<struct FHordeProfile>                               Slot1TalentPickCountInfo;                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
		TArray<struct FHordeProfile>                               Slot2TalentPickCountInfo;                                // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
		TArray<struct FHordeProfile>                               Slot3TalentPickCountInfo;                                // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HordeMPProfileZombieProfile
	 * Size -> 0x0028
	 */
	struct FHordeMPProfileZombieProfile
	{
	public:
		TArray<struct FHordeProfile>                               ZombieKillCountInfo;                                     // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
		TArray<struct FHordeProfile>                               ZombieDamageInfo;                                        // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
		int32_t                                                    TotalZombieKillCount;                                    // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FUIT[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.HordeMPProfileTrapProfile
	 * Size -> 0x0018
	 */
	struct FHordeMPProfileTrapProfile
	{
	public:
		TArray<struct FHordeProfile>                               TrapUseCountInfo;                                        // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
		int32_t                                                    TotalTrapsPlaced;                                        // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P8ZU[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.HordeMPProfileDamageProfile
	 * Size -> 0x0008
	 */
	struct FHordeMPProfileDamageProfile
	{
	public:
		float                                                      NormalDamage;                                            // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CriticalDamage;                                          // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HordeMPProfileMatchProfile
	 * Size -> 0x00B8
	 */
	struct FHordeMPProfileMatchProfile
	{
	public:
		float                                                      HoursPlayed;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHordeMPProfileClassProgressionProfile              ClassProgressionProfile;                                 // 0x0004(0x0004) Edit, BlueprintVisible, SaveGame, NoDestructor, NativeAccessSpecifierPublic
		struct FHordeMPProfileTalentProfile                        TalentProfile;                                           // 0x0008(0x0030) Edit, BlueprintVisible, SaveGame, NativeAccessSpecifierPublic
		struct FHordeMPProfileZombieProfile                        ZombieProfile;                                           // 0x0038(0x0028) Edit, BlueprintVisible, SaveGame, NativeAccessSpecifierPublic
		struct FHordeMPProfileTrapProfile                          TrapProfile;                                             // 0x0060(0x0018) Edit, BlueprintVisible, SaveGame, NativeAccessSpecifierPublic
		struct FHordeMPProfileDamageProfile                        DamageAppliedProfile;                                    // 0x0078(0x0008) Edit, BlueprintVisible, SaveGame, NoDestructor, NativeAccessSpecifierPublic
		struct FHordeMPProfileDamageProfile                        DamageReceivedProfile;                                   // 0x0080(0x0008) Edit, BlueprintVisible, SaveGame, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FHordeProfile>                               CompletedMissionsInfo;                                   // 0x0088(0x0010) Edit, BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
		TArray<struct FHordeProfile>                               UnlockedTrapsInfo;                                       // 0x0098(0x0010) Edit, BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
		int32_t                                                    DaysSurvived;                                            // 0x00A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScoreObtained;                                           // 0x00AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Deaths;                                                  // 0x00B0(0x0004) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Revives;                                                 // 0x00B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HordeMatchStats
	 * Size -> 0x001C
	 */
	struct FHordeMatchStats
	{
	public:
		int32_t                                                    NumZombiesKilled;                                        // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TrapsPlaced;                                             // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalDamageDealt;                                        // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScoreObtained;                                           // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DaysSurvived;                                            // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Deaths;                                                  // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Revives;                                                 // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ThrowingModularProjectilePayload
	 * Size -> 0x0020
	 */
	struct FThrowingModularProjectilePayload
	{
	public:
		class UThrowableComponent*                                 ThrowableComponent;                                      // 0x0000(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APawn*                                               ThrownBy;                                                // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ThrownLocation;                                          // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4ZRM[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ThrowingProjectileCommonInfo
	 * Size -> 0x0020
	 */
	struct FThrowingProjectileCommonInfo
	{
	public:
		struct FThrowingModularProjectilePayload                   Payload;                                                 // 0x0000(0x0020) BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HUDIconAttachmentData
	 * Size -> 0x0018
	 */
	struct FHUDIconAttachmentData
	{
	public:
		class UHUDIconAttachmentAsset*                             HUDIconAttachmentAsset;                                  // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SceneComponentTag;                                       // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.NPCThreatLevelBoundary
	 * Size -> 0x0018
	 */
	struct FNPCThreatLevelBoundary
	{
	public:
		class FString                                              ThreatLabel;                                             // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaximumLevelsAbovePlayer;                                // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AE67[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.HUDIconMinigameParams
	 * Size -> 0x0020
	 */
	struct FHUDIconMinigameParams
	{
	public:
		unsigned char                                              UnknownData_9QSN[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.HUDAbandonmentData
	 * Size -> 0x0020
	 */
	struct FHUDAbandonmentData
	{
	public:
		unsigned char                                              UnknownData_PYFV[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class UQuestUIEntity>                       Quest;                                                   // 0x0004(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QIUJ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAbandonmentDistanceUpdateInterface*                 AbandonmentDistanceUpdate;                               // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCentralNotificationAbandoning*                      Notification;                                            // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HUDCurrentQuestDisplayObjective
	 * Size -> 0x0010
	 */
	struct FHUDCurrentQuestDisplayObjective
	{
	public:
		class UObjectiveUIEntity*                                  Objective;                                               // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGFxCurrentMissionElement*                           GFxElement;                                              // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HUDCurrentQuestLinkedObjectives
	 * Size -> 0x0010
	 */
	struct FHUDCurrentQuestLinkedObjectives
	{
	public:
		TArray<class UObjectiveUIEntity*>                          LinkedObjectives;                                        // 0x0000(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.LoadingPhaseSettings
	 * Size -> 0x0024
	 */
	struct FLoadingPhaseSettings
	{
	public:
		float                                                      TargetPercent;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetLoadingTime;                                       // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinNumJumps;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxNumJumps;                                             // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JumpTimeVariationPercent;                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JumpAmountVariationPercent;                              // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LerpSpeed;                                               // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FinalLerpTolerance;                                      // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TrickleSpeed;                                            // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PickUpLogQueuedRequest
	 * Size -> 0x00A8
	 */
	struct FPickUpLogQueuedRequest
	{
	public:
		unsigned char                                              UnknownData_WVVH[0x68];                                  // 0x0000(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UItemArchetype*                                      ItemArchetype;                                           // 0x0068(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UKeyForLockData*                                     KeyData;                                                 // 0x0070(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UJournalEntry*                                       JournalEntry;                                            // 0x0078(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCraftingRecipe*                                     CraftingRecipe;                                          // 0x0080(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UItemUpgradeData*                                    UpgradeData;                                             // 0x0088(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USlottableSkillDefinition*                           SlottableSkill;                                          // 0x0090(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCosmeticEffectsDefinition*                          CosmeticEffect;                                          // 0x0098(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemRarity                                                Rarity;                                                  // 0x00A0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayRarityEffects;                                      // 0x00A1(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MRLS[0x6];                                   // 0x00A2(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SubtitleDisplayOptionPaths
	 * Size -> 0x0020
	 */
	struct FSubtitleDisplayOptionPaths
	{
	public:
		class FString                                              OpacityOptionPath;                                       // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FontSizeOptionPath;                                      // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HungerSystemBehaviourSettings
	 * Size -> 0x000C
	 */
	struct FHungerSystemBehaviourSettings
	{
	public:
		EFoodEffectTriggerPolicy                                   FoodEffectApplicationPolicy;                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFoodEffectCapacityPolicy                                  FoodEffectCapacityPolicy;                                // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9S41[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaximumEffectCount;                                      // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaximumEffectSlotCapacity;                               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ConsumedFoodRecordItem
	 * Size -> 0x0048
	 */
	struct FConsumedFoodRecordItem
	{
	public:
		float                                                      ConsumedAtServerTimeStamp;                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U6WV[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFoodDefinition*                                     FoodDefinition;                                          // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FGuid>                                       ActivePerks;                                             // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FGuid>                                       ActiveModifiers;                                         // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LVE5[0x18];                                  // 0x0030(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ActiveHungerStateInfo
	 * Size -> 0x0028
	 */
	struct FActiveHungerStateInfo
	{
	public:
		class UHungerStateDefinition*                              CurrentHungerStateDefinition;                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FGuid>                                       ActivePerks;                                             // 0x0008(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		TArray<struct FGuid>                                       ActiveModifiers;                                         // 0x0018(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.IconDisplayIconRules
	 * Size -> 0x0028
	 */
	struct FIconDisplayIconRules
	{
	public:
		class UIconDisplayData*                                    IconToDisplay;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UIconDisplayRule*>                            IconDisplayRules;                                        // 0x0008(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		class FString                                              EditorArrayTitleText;                                    // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.IconDisplayGroup
	 * Size -> 0x0038
	 */
	struct FIconDisplayGroup
	{
	public:
		class UIconContainerData*                                  ContainerToUse;                                          // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UIconDisplayRule*>                            GroupDisplayRules;                                       // 0x0008(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FIconDisplayIconRules>                       IconsWithDisplayRules;                                   // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		class FString                                              EditorArrayTitleText;                                    // 0x0028(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.IconLoaderDefault
	 * Size -> 0x0028
	 */
	struct FIconLoaderDefault
	{
	public:
		class USwfMovie*                                           IconSwfClass;                                            // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              IconSymbolName;                                          // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Offset;                                                  // 0x001C(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_90SN[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DamagedPartRecord
	 * Size -> 0x0014
	 */
	struct FDamagedPartRecord
	{
	public:
		EBodyPartGameplayState                                     DamageGameplayState;                                     // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_APFA[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                DamagedBodyPartName;                                     // 0x0004(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PreDismemberParentBodyName;                              // 0x000C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AffectedActorRecord
	 * Size -> 0x0118
	 */
	struct FAffectedActorRecord
	{
	public:
		TWeakObjectPtr<class AActor>                               AffectedActor;                                           // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FDamageTypeAndQuantity>                      DamageRecords;                                           // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FDamagedPartRecord>                          DamagedPartRecords;                                      // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      TotalDamageQuantityApplied;                              // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotalDamageQuantityRequested;                            // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              MajorDamageType;                                         // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              HighestUIPriorityDamageType;                             // 0x0038(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      ResistedDamageTypes;                                     // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		struct FKnowledgeBaseObjectSerializer                      ImpactKB;                                                // 0x0050(0x00B8) NativeAccessSpecifierPublic
		float                                                      StabilityAmountBeforeImpact;                             // 0x0108(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StabilityDamage;                                         // 0x010C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalNumImpactsReceivedFromGroup;                        // 0x0110(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFirstImpactReceivedFromGroup;                         // 0x0114(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BF4N[0x3];                                   // 0x0115(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ImpactResultSettings
	 * Size -> 0x0058
	 */
	struct FImpactResultSettings
	{
	public:
		struct FPhysicalizedWorldStatesAndEvents                   PhysicalizedWorldStatesAndEventsToApply;                 // 0x0000(0x0020) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UHitEffectTree*                                      AttackerEffectTree;                                      // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHitEffectTree*                                      VictimEffectTree;                                        // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHitEffectTree*                                      EnvironmentEffectTree;                                   // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WorldSpaceImpulseMagnitude;                              // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanCauseCosmeticFlinches;                               // 0x003C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanLaunch;                                              // 0x003D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B7SG[0x2];                                   // 0x003E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULaunchSettings*                                     LaunchSettings;                                          // 0x0040(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FKnowledgeBaseValueSelector>                 CustomImpactFacts;                                       // 0x0048(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GeneralImpactEventResultParams
	 * Size -> 0x0080
	 */
	struct FGeneralImpactEventResultParams
	{
	public:
		struct FGuid                                               ID;                                                      // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FImpactGroupID                                      ImpactGroupID;                                           // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		EImpactRequestNetworkPolicy                                NetworkingPolicy;                                        // 0x0014(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EImpactGameplayCategory                                    ImpactGameplayCategory;                                  // 0x0015(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1WY5[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             WorldSpaceImpulseDirNormalized;                          // 0x0018(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I1ON[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FImpactResultSettings                               ImpactSettings;                                          // 0x0028(0x0058) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CommonImpactDamageResultParams
	 * Size -> 0x0090
	 */
	struct FCommonImpactDamageResultParams
	{
	public:
		TWeakObjectPtr<class AActor>                               DamagedActor;                                            // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FEventInstigator                                    Instigator;                                              // 0x0008(0x0010) BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               DamageCauser;                                            // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDSDamageData                                       DSDamageData;                                            // 0x0020(0x0058) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bForceKill;                                              // 0x0078(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldTriggerHitEffects;                                // 0x0079(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldTriggerHitReacts;                                 // 0x007A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldTriggerClientPredictiveHitReacts;                 // 0x007B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReduceWeaponDurability;                                 // 0x007C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XDU5[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UImpactModificationComponent*>                CustomOutgoingImpactEventModifiers;                      // 0x0080(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.BaseImpactEventResult
	 * Size -> 0x0240
	 */
	struct FBaseImpactEventResult
	{
	public:
		unsigned char                                              UnknownData_0T50[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAffectedActorRecord                                AffectedActorRecord;                                     // 0x0008(0x0118) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int32_t                                                    TotalNumImpactsInstigatedFromGroup;                      // 0x0120(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFirstImpactInstigatedFromGroup;                       // 0x0124(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BE6V[0x3];                                   // 0x0125(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGeneralImpactEventResultParams                     ImpactParams;                                            // 0x0128(0x0080) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FCommonImpactDamageResultParams                     CommonDamageParams;                                      // 0x01A8(0x0090) BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bIsImpliedImpact;                                        // 0x0238(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G53O[0x7];                                   // 0x0239(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GeneralImpactEventResult
	 * Size -> 0x0000 (FullSize[0x0240] - InheritedSize[0x0240])
	 */
	struct FGeneralImpactEventResult : public FBaseImpactEventResult
	{	};

	/**
	 * ScriptStruct DeadIsland.PointImpactEventResult
	 * Size -> 0x00C0 (FullSize[0x0300] - InheritedSize[0x0240])
	 */
	struct FPointImpactEventResult : public FBaseImpactEventResult
	{
	public:
		struct FVector                                             HitFromDirection;                                        // 0x0240(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B6IZ[0x4];                                   // 0x024C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHitResult                                          HitInfo;                                                 // 0x0250(0x00B0) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RadialImpactEventResult
	 * Size -> 0x0038 (FullSize[0x0278] - InheritedSize[0x0240])
	 */
	struct FRadialImpactEventResult : public FBaseImpactEventResult
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0240(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Strength;                                                // 0x024C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0250(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERadialImpulseFalloff                                      Falloff;                                                 // 0x0254(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVelChange;                                              // 0x0255(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_67R0[0x2];                                   // 0x0256(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FHitResult>                                  ComponentHits;                                           // 0x0258(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<TWeakObjectPtr<class UPrimitiveComponent>>          DamagedComponents;                                       // 0x0268(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ImpactGameplayCategorysettings
	 * Size -> 0x0008
	 */
	struct FImpactGameplayCategorysettings
	{
	public:
		class UModifiableValueDefinition*                          DamageInflictedModifierType;                             // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GeneralImpactDamageParams
	 * Size -> 0x0090
	 */
	struct FGeneralImpactDamageParams
	{
	public:
		struct FCommonImpactDamageParams                           CommonDamageParams;                                      // 0x0000(0x0090) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GeneralImpactEventRequest
	 * Size -> 0x0248
	 */
	struct FGeneralImpactEventRequest
	{
	public:
		struct FGeneralImpactEventParams                           ImpactParams;                                            // 0x0000(0x01B8) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGeneralImpactDamageParams                          DamageParams;                                            // 0x01B8(0x0090) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PointImpactLocationDetails
	 * Size -> 0x0054
	 */
	struct FPointImpactLocationDetails
	{
	public:
		struct FVector_NetQuantize                                 Location;                                                // 0x0000(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 ImpactPoint;                                             // 0x000C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           Normal;                                                  // 0x0018(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           ImpactNormal;                                            // 0x0024(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 TraceStart;                                              // 0x0030(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 TraceEnd;                                                // 0x003C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           HitFromDirection;                                        // 0x0048(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RadialImpactDamageParams
	 * Size -> 0x00D0
	 */
	struct FRadialImpactDamageParams
	{
	public:
		struct FCommonImpactDamageParams                           CommonDamageParams;                                      // 0x0000(0x0090) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FHitResult>                                  ComponentHits;                                           // 0x0090(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<TWeakObjectPtr<class UPrimitiveComponent>>          DamagedComponents;                                       // 0x00A0(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic
		struct FVector                                             Origin;                                                  // 0x00B0(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x00BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERadialImpulseFalloff                                      Falloff;                                                 // 0x00C0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R1OV[0x3];                                   // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimumDamage;                                           // 0x00C4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Strength;                                                // 0x00C8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVelChange;                                              // 0x00CC(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OL72[0x3];                                   // 0x00CD(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RadialImpactEventRequest
	 * Size -> 0x0288
	 */
	struct FRadialImpactEventRequest
	{
	public:
		struct FGeneralImpactEventParams                           ImpactParams;                                            // 0x0000(0x01B8) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRadialImpactDamageParams                           DamageParams;                                            // 0x01B8(0x00D0) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DamageScalarValue
	 * Size -> 0x0004
	 */
	struct FDamageScalarValue
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AddDamageValue
	 * Size -> 0x0004
	 */
	struct FAddDamageValue
	{
	public:
		float                                                      QuantityAsFractionOfTotalRequestedDamage;                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.StatusEffectIconUIStateInitParams
	 * Size -> 0x0038
	 */
	struct FStatusEffectIconUIStateInitParams
	{
	public:
		bool                                                       bShowNameOnHUD;                                          // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YCEY[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UiName;                                                  // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		class FString                                              UIIcon;                                                  // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USlottableSkillDefinition*                           LinkedSkill;                                             // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct DeadIsland.BlockDamageParams
	 * Size -> 0x0038
	 */
	struct FBlockDamageParams
	{
	public:
		bool                                                       bApplyForceLimit;                                        // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_93D4[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaximumForceWhichCanBeBlocked;                           // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyImpactDirectionYawLimit;                           // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1UIT[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AllowedYawDeviationFromForwardInDegrees;                 // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyImpactDirectionPitchLimit;                         // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y749[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AllowedPitchDeviationFromForwardInDegrees;               // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBlockDirectionCalculation                                 BlockDirectionCalculation;                               // 0x0018(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6FPH[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PerfectBlockWindowLower;                                 // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PerfectBlockWindowUpper;                                 // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1BU2[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UModifyDamageCommand*                                ModifyDamageCommand;                                     // 0x0028(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UNullifyDamageCommand*                               NullifyDamageCommand;                                    // 0x0030(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RestrictToAngleSettings
	 * Size -> 0x0018
	 */
	struct FRestrictToAngleSettings
	{
	public:
		EAngularLimitCalculation                                   AngularLimitTestType;                                    // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LCKZ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AdditionalVictimTestOriginYaw;                           // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyImpactDirectionYawLimit;                           // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PW3N[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AllowedYawDeviationFromTestDirectionInDegrees;           // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyImpactDirectionPitchLimit;                         // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JAP9[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AllowedPitchDeviationFromTestDirectionInDegrees;         // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SecondaryImpulseParams
	 * Size -> 0x0010
	 */
	struct FSecondaryImpulseParams
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyToLeftRightMirrorOfOriginalBone;                   // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3JWG[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ImpulseScale;                                            // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ImpulseModificationParams
	 * Size -> 0x0018
	 */
	struct FImpulseModificationParams
	{
	public:
		float                                                      ImpulseScale;                                            // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VC30[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSecondaryImpulseParams>                     SecondaryImpulses;                                       // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.InteractionScoring
	 * Size -> 0x0014
	 */
	struct FInteractionScoring
	{
	public:
		float                                                      ViewAngleInteractionLimit;                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DirectionScoreWeight;                                    // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceScoreWeight;                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewAngleDotLimit;                                       // 0x000C(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PriorityScoreWeight;                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.InventoryPersistentStateEntry
	 * Size -> 0x0018
	 */
	struct FInventoryPersistentStateEntry
	{
	public:
		unsigned char                                              UnknownData_XTSX[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.InventoryItemInstanced
	 * Size -> 0x00D0
	 */
	struct FInventoryItemInstanced
	{
	public:
		unsigned char                                              UnknownData_S2SQ[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               EntryID;                                                 // 0x0008(0x0010) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     Archetype;                                               // 0x0018(0x0018) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FProceduralGenerationContext                        ProceduralGenerationContext;                             // 0x0030(0x0038) SaveGame, NoDestructor, NativeAccessSpecifierPublic
		struct FGuid                                               UniqueId;                                                // 0x0068(0x0010) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, struct FInventoryPersistentStateEntry> RuntimeState;                                            // 0x0078(0x0050) SaveGame, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RW50[0x8];                                   // 0x00C8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.InventoryItemArchetype
	 * Size -> 0x0048
	 */
	struct FInventoryItemArchetype
	{
	public:
		unsigned char                                              UnknownData_F51C[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               EntryID;                                                 // 0x0008(0x0010) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     Archetype;                                               // 0x0018(0x0018) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0030(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               UniqueId;                                                // 0x0034(0x0010) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5MII[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ClientPersistentItem
	 * Size -> 0x0018 (FullSize[0x0024] - InheritedSize[0x000C])
	 */
	struct FClientPersistentItem : public FFastArraySerializerItem
	{
	public:
		struct FGuid                                               EntryID;                                                 // 0x000C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AItemActor>                           Item;                                                    // 0x001C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ClientPersistentItems
	 * Size -> 0x0018 (FullSize[0x0120] - InheritedSize[0x0108])
	 */
	struct FClientPersistentItems : public FFastArraySerializer
	{
	public:
		TArray<struct FClientPersistentItem>                       Data;                                                    // 0x0108(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class UInventoryPersistentDataController*                  Owner;                                                   // 0x0118(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.InvulnerableActorData
	 * Size -> 0x0018
	 */
	struct FInvulnerableActorData
	{
	public:
		unsigned char                                              UnknownData_A1EK[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCharacterActionRequestHelper*                       Request;                                                 // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ProceduralItemUpgradeRarityRangeData
	 * Size -> 0x0002
	 */
	struct FProceduralItemUpgradeRarityRangeData
	{
	public:
		unsigned char                                              MinUpgrades;                                             // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MaxUpgrades;                                             // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ItemRewardInstance
	 * Size -> 0x0060
	 */
	struct FItemRewardInstance
	{
	public:
		struct FScopedKnowledgeBaseExpressionListener              ExpressionListener;                                      // 0x0000(0x0060) ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ItemReward
	 * Size -> 0x0040
	 */
	struct FItemReward
	{
	public:
		struct FKnowledgeBaseExpression                            RewardExpression;                                        // 0x0000(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UItemSpecification*                                  ItemSpecification;                                       // 0x0038(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UpgradeDisplayTypeConfig
	 * Size -> 0x0050
	 */
	struct FUpgradeDisplayTypeConfig
	{
	public:
		TMap<EUpgradeDisplayType, int32_t>                         UpgradeSlotsPerDisplayType;                              // 0x0000(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ItemUpgradeFilters
	 * Size -> 0x0028
	 */
	struct FItemUpgradeFilters
	{
	public:
		struct FSoftClassPath                                      Item;                                                    // 0x0000(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSoftObjectPath>                             ItemUpgrades;                                            // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UpgradeGroupChild
	 * Size -> 0x0018 (FullSize[0x0090] - InheritedSize[0x0078])
	 */
	struct FUpgradeGroupChild : public FBaseEmergentGroupChild
	{
	public:
		struct FSoftObjectPath                                     GroupObject;                                             // 0x0078(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ItemUpgradeSelectionData
	 * Size -> 0x0018
	 */
	struct FItemUpgradeSelectionData
	{
	public:
		class UItemUpgradeData*                                    UpgradeData;                                             // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FKnowledgeBaseValueSelector>                 FactsToAddToWeightingCalculations;                       // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UpgradeGroupData
	 * Size -> 0x0018 (FullSize[0x0090] - InheritedSize[0x0078])
	 */
	struct FUpgradeGroupData : public FBaseEmergentGroupObjectData
	{
	public:
		struct FItemUpgradeSelectionData                           EntryData;                                               // 0x0078(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.JournalEntryProperties
	 * Size -> 0x0038
	 */
	struct FJournalEntryProperties
	{
	public:
		EJournalType                                               JournalType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ATIU[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       AudioEvent;                                              // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLocalisedAudioChooser                              LocalisedAudio;                                          // 0x0010(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ImagePath;                                               // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EJornalImageLayout                                         ImageLayout;                                             // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JEA0[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.UIStorylineGroupEntry
	 * Size -> 0x0030
	 */
	struct FUIStorylineGroupEntry
	{
	public:
		class FName                                                GroupId;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                GroupName;                                               // 0x0008(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class UUIJournalStoryline*>                         Storylines;                                              // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.KeyForLockConfiguration
	 * Size -> 0x0018
	 */
	struct FKeyForLockConfiguration
	{
	public:
		class UGameEntitlementsDataTable*                          EntitlementsTable;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FKnowledgeBaseFactKey>                       ViewStateTags;                                           // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.KBEBO_WithinQuest_Details
	 * Size -> 0x0020
	 */
	struct FKBEBO_WithinQuest_Details
	{
	public:
		class UDIQuestData*                                        Quest;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bQuestMustBeTracked;                                     // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EJ87[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDIObjectiveData*                                    FromObjective;                                           // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDIObjectiveData*                                    UntilObjective;                                          // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.VectorClampSettings
	 * Size -> 0x0010
	 */
	struct FVectorClampSettings
	{
	public:
		bool                                                       bClampToMinimumMagnitude;                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J0GC[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimumMagnitude;                                        // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClampToMaximumMagnitude;                                // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_05N9[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaximumMagnitude;                                        // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RootImpulseApplicationSettings
	 * Size -> 0x0040
	 */
	struct FRootImpulseApplicationSettings
	{
	public:
		bool                                                       bApplyToCharacterRoot;                                   // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5N58[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CharacterRootImpulseVelocityMagnitude;                   // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVectorClampSettings                                CharacterRootImpulseClampSettings;                       // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		float                                                      BlendTowardInstigatorForwardDirection;                   // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CharacterRootAdditionalVerticalImpulseScale;             // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNegateExistingCharacterRootVelocity;                    // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6RWO[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExistingRootVelocityFractionToNegate;                    // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRestrictMaximumVerticalRootLaunchAngle;                 // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L0PT[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaximumVerticalRootLaunchAngleInDegrees;                 // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTriggerAirborneAction;                                  // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LC6R[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OverrideRagdollTimeAfterLanding;                         // 0x0034(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ForceAirborneTime;                                       // 0x0038(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRagdollOnLand;                                          // 0x003C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSkipAirborneIntoAnimation;                              // 0x003D(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O5EV[0x2];                                   // 0x003E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MeshLinearPointImpulseApplicationSettings
	 * Size -> 0x0018
	 */
	struct FMeshLinearPointImpulseApplicationSettings
	{
	public:
		bool                                                       bApplyToCharacterMeshLocation;                           // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K9Q8[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CharacterMeshLinearImpulseVelocityMagnitude;             // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVectorClampSettings                                CharacterMeshLinearImpulseClampSettings;                 // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MeshAngularImpulseApplicationSettings
	 * Size -> 0x0028
	 */
	struct FMeshAngularImpulseApplicationSettings
	{
	public:
		bool                                                       bApplyAngularMeshImpulse;                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6ELU[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CharacterMeshAngularImpulseVelocityMagnitude;            // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AngularYawWeightingMultiplier;                           // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AngularPitchWeightingMultiplier;                         // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceYawMappingToRangeExtents;                          // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForcePitchMappingToRangeExtents;                        // 0x0011(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IHF5[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TiltBackRotationAxisScale;                               // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVectorClampSettings                                CharacterMeshAngularImpulseClampSettings;                // 0x0018(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MultiplierControlSettings
	 * Size -> 0x0138
	 */
	struct FMultiplierControlSettings
	{
	public:
		EMultiplierSpecificationMethod                             ScaleControlMethod;                                      // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DR4F[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FixedValue;                                              // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0008(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRemapParameterToRangeHelper                        RemapSettings;                                           // 0x0040(0x00F0) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		float                                                      RandomDeviationMultiplierRange;                          // 0x0130(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YK7N[0x4];                                   // 0x0134(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RootImpulseParams
	 * Size -> 0x0028
	 */
	struct FRootImpulseParams
	{
	public:
		ERootImpulseSpecificationMethod                            SpecificationMethod;                                     // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6VS1[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantizeNormal                           WorldSpaceRootImpulseDirection;                          // 0x0004(0x000C) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 OriginLocation;                                          // 0x0010(0x000C) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W7RX[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              InstigatorActorForForwardDirectionBlend;                 // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MeshLinearPointImpulseParams
	 * Size -> 0x0014
	 */
	struct FMeshLinearPointImpulseParams
	{
	public:
		struct FVector_NetQuantizeNormal                           WorldSpaceImpulseDirection;                              // 0x0000(0x000C) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ImpulseBoneName;                                         // 0x000C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MeshAngularImpulseParams
	 * Size -> 0x0030
	 */
	struct FMeshAngularImpulseParams
	{
	public:
		EAngularImpulseSpecificationMethod                         SpecificationMethod;                                     // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7Q8G[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantizeNormal                           WorldSpaceImpulseDirection;                              // 0x0004(0x000C) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 ImpulseLocation;                                         // 0x0010(0x000C) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 OriginLocation;                                          // 0x001C(0x000C) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchMagnitude;                                          // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawMagnitude;                                            // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameSequencePlaybackParams
	 * Size -> 0x0024
	 */
	struct FGameSequencePlaybackParams
	{
	public:
		int32_t                                                    NumLoops;                                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayRate;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StartingFrame;                                           // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartingTime;                                            // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetworkStartTimeOffset;                                  // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeDuration;                                            // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGameSequenceCompletionMode                                CompletionMode;                                          // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOrphanMontagesOnStop;                                   // 0x0019(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KVZP[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BufferTimeBeforeBlendOut;                                // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGameSequenceDeferredStartMode                             DeferredStartMode;                                       // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllCharactersShouldUseRootMotion;                       // 0x0021(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z0JB[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ArmLimbIKConfigSettings
	 * Size -> 0x0084
	 */
	struct FArmLimbIKConfigSettings
	{
	public:
		EArmLimbIKLimbId                                           LimbId;                                                  // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GZJK[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFabrikCustomSettings                               FabrikSettings;                                          // 0x0004(0x0020) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FFabrikCustomSettings                               ThirdPersonAdditionalOverridePerLimb[0x3];               // 0x0024(0x0060) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.LimbIKConfigDefinitionEntry
	 * Size -> 0x0018
	 */
	struct FLimbIKConfigDefinitionEntry
	{
	public:
		class FString                                              ArrayElementTitleText;                                   // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULimbIKConfigDefinition*                             Definition;                                              // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.NPCLocomotionData
	 * Size -> 0x0080
	 */
	struct FNPCLocomotionData
	{
	public:
		float                                                      MinPivotYawRotation;                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoveSteeringSpeed;                                       // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoveStrafeSteeringSpeed;                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartsSteeringAngleThreshold;                            // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartsSteeringSpeed;                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpotSteeringSpeed;                                 // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpotSteeringLagTime;                               // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ErrorThresholdRadius;                                    // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeIdleThreshold;                                     // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpotThreshold;                                     // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAngleToForceNonStrafingStart;                         // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinAngleToForceStrafingStart;                            // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinFacingAngleErrorToUseStrafingStart;                   // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GoalSpeedRadius;                                         // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        ValidTransitionSlots;                                    // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      YawForwardAnimationMax;                                  // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BoundaryBlendDegree;                                     // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxStrafePivotYaw;                                       // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FwdBwdLerpingSpeed;                                      // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CycleBreakMinDelaySeconds;                               // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CycleBreakMaxDelaySeconds;                               // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseCycleBreak;                                          // 0x0060(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K89O[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TurnOnSpotRotationSpeedCalm;                             // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpotRotationSpeedAlert;                            // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpotRotationSpeedCombat;                           // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpotDelay;                                         // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpotLeadTime;                                      // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedForMaximumBlockHeight;                              // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDistanceToPrioritiseFacingDirection;                  // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CrawlerLocomotionDefinitionData
	 * Size -> 0x0010
	 */
	struct FCrawlerLocomotionDefinitionData
	{
	public:
		float                                                      SteeringSpeed;                                           // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpotFromIdleThreshold;                             // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpotFromMoveThreshold;                             // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ErrorRadius;                                             // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.LookAtBoneDefinition
	 * Size -> 0x0008
	 */
	struct FLookAtBoneDefinition
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.LookAtLayerDefinition
	 * Size -> 0x0040
	 */
	struct FLookAtLayerDefinition
	{
	public:
		class UAnimationLayer*                                     Layer;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RequestAlphaBlendDuration;                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y9VA[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FLookAtBoneDefinition>                       Bones;                                                   // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FRotator                                            MinRotation;                                             // 0x0020(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            MaxRotation;                                             // 0x002C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bUsedForAim;                                             // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsedForLookAt;                                          // 0x0039(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AN2O[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.LookAtCompensatorBoneDefinition
	 * Size -> 0x0008
	 */
	struct FLookAtCompensatorBoneDefinition
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.LootDispatchConfigData
	 * Size -> 0x0050
	 */
	struct FLootDispatchConfigData
	{
	public:
		unsigned char                                              LootTypeDispatchMethodCollections[0x50];                 // 0x0000(0x0050) UNKNOWN PROPERTY: MapProperty
	};

	/**
	 * ScriptStruct DeadIsland.BodyPartDestructionLootDropConfig
	 * Size -> 0x0050
	 */
	struct FBodyPartDestructionLootDropConfig
	{
	public:
		TMap<class FName, struct FLootDropConfig>                  BodyPartDestructionLootDropConfig;                       // 0x0000(0x0050) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.LootGroupFilterListEntry
	 * Size -> 0x0040
	 */
	struct FLootGroupFilterListEntry
	{
	public:
		unsigned char                                              LootGroup[0x28];                                         // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bRestrictRarityToRange;                                  // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemRarity                                                MinItemRarity;                                           // 0x0029(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemRarity                                                MaxItemRarity;                                           // 0x002A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NYDD[0x5];                                   // 0x002B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ArrayElementTitleText;                                   // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.LootGroupChild
	 * Size -> 0x0018 (FullSize[0x0090] - InheritedSize[0x0078])
	 */
	struct FLootGroupChild : public FBaseEmergentGroupChild
	{
	public:
		struct FSoftObjectPath                                     GroupObject;                                             // 0x0078(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.LootDefinition
	 * Size -> 0x0060
	 */
	struct FLootDefinition
	{
	public:
		unsigned char                                              ItemSpecification[0x28];                                 // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bUseLootTypeDefinition;                                  // 0x0028(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BPZI[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBaseLootTypeDefinition*                             LootTypeDefinition;                                      // 0x0030(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bUseExternalConfig;                                      // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bProceduralItem;                                         // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DCBB[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UProceduralItemArchetype*                            ProceduralItemArchetype;                                 // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UItemArchetype*                                      ItemArchetype;                                           // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UIntegerQuantitySpecifier*                           StackCount;                                              // 0x0050(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UIntegerQuantitySpecifier*                           Count;                                                   // 0x0058(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.LootGroupData
	 * Size -> 0x0060 (FullSize[0x00D8] - InheritedSize[0x0078])
	 */
	struct FLootGroupData : public FBaseEmergentGroupObjectData
	{
	public:
		struct FLootDefinition                                     LootData;                                                // 0x0078(0x0060) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PoolRollConfiguration
	 * Size -> 0x00E0
	 */
	struct FPoolRollConfiguration
	{
	public:
		bool                                                       bIsDirectlySpecified;                                    // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGiveAllElementsInPool;                                  // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_75L5[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULootGroupObject*                                    Pool;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLootDefinition                                     DirectLootDefinition;                                    // 0x0010(0x0060) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            Conditions;                                              // 0x0070(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UIntegerQuantitySpecifier*                           RollCount;                                               // 0x00A8(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsChanceBasedRoll;                                      // 0x00B0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_44CR[0x7];                                   // 0x00B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFloatQuantitySpecifier*                             RollChanceZeroToOne;                                     // 0x00B8(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPerformChanceTestOnEachIndividualRoll;                  // 0x00C0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TFKD[0x7];                                   // 0x00C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULootRollFactCollection*                             RollContext;                                             // 0x00C8(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ArrayElementTitleText;                                   // 0x00D0(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.NormalizedLevelDistributionCurve
	 * Size -> 0x0098
	 */
	struct FNormalizedLevelDistributionCurve
	{
	public:
		struct FRuntimeFloatCurve                                  Curve;                                                   // 0x0000(0x0098) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.KBRarityWeightingConfig
	 * Size -> 0x0050
	 */
	struct FKBRarityWeightingConfig
	{
	public:
		TMap<EItemRarity, struct FKnowledgeBaseExpression>         WeightingExpressionsByRarity;                            // 0x0000(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.LootFactCollectionSettings
	 * Size -> 0x01F0
	 */
	struct FLootFactCollectionSettings
	{
	public:
		int32_t                                                    FixedSeed;                                               // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemLevelSpecificationMethod                              LevelSpecificationMethod;                                // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SN68[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Level;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinItemLevelDelta;                                       // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxItemLevelDelta;                                       // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DVKL[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            MaxPossibleItemLevelExpression;                          // 0x0018(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideLevelDistribution;                              // 0x0050(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SLNG[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FNormalizedLevelDistributionCurve                   LevelDistributionCurve;                                  // 0x0058(0x0098) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		EItemRaritySpecificationMethod                             RaritySpecificationMethod;                               // 0x00F0(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemRarity                                                ExplicitItemRarity;                                      // 0x00F1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3YFC[0x6];                                   // 0x00F2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URarityWeightingConfig*                              RarityWeightingConfig;                                   // 0x00F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKBRarityWeightingConfig                            InlineRarityWeightingConfig;                             // 0x0100(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bOnlyPlayerUnlockedUpgrades;                             // 0x0150(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemUpgradeSpecificationMethod                            ModSpecificationMethod;                                  // 0x0151(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N16A[0x2];                                   // 0x0152(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ExplicitModLevel;                                        // 0x0154(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinModLevel;                                             // 0x0158(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxModLevel;                                             // 0x015C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            ModCountNumericExpression;                               // 0x0160(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UItemInitialUpgradeConfig*                           OptionalModUpgradeConfig;                                // 0x0198(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemUpgradeSpecificationMethod                            UpgradeSpecificationMethod;                              // 0x01A0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TCY9[0x3];                                   // 0x01A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ExplicitUpgradeCount;                                    // 0x01A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinUpgradeCount;                                         // 0x01A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxUpgradeCount;                                         // 0x01AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            UpgradeCountNumericExpression;                           // 0x01B0(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UItemInitialUpgradeConfig*                           OptionalPerkUpgradeConfig;                               // 0x01E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DispatchLootParams
	 * Size -> 0x00A0
	 */
	struct FDispatchLootParams
	{
	public:
		class ULootDispatchReason*                                 DispatchReasonAsset;                                     // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DispatchReasonName;                                      // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AController*                                         IntendedRecipient;                                       // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTargetPointInfo                                    DispatchHintTargetLocation;                              // 0x0018(0x0050) BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLaunchVelocityConfig                               LaunchVelocityConfig;                                    // 0x0068(0x0020) BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bSuppressAnnounceEffects;                                // 0x0088(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_68E3[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Template;                                                // 0x0090(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AHS6[0x8];                                   // 0x0098(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ScrapAwardedIngredient
	 * Size -> 0x0018
	 */
	struct FScrapAwardedIngredient
	{
	public:
		class UItemArchetype*                                      ItemArchetype;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERebateType                                                RebateType;                                              // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C4WX[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FixedAmount;                                             // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Percentage;                                              // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERoundingType                                              RoundPercentage;                                         // 0x0014(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5HIF[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ItemLootTypeDefinitionData
	 * Size -> 0x0048
	 */
	struct FItemLootTypeDefinitionData
	{
	public:
		bool                                                       bUseExternalConfig;                                      // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bProceduralItem;                                         // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RJNM[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UProceduralItemArchetype*                            ProceduralItemArchetype;                                 // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UItemArchetype*                                      ItemArchetype;                                           // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ItemSpecification[0x28];                                 // 0x0018(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UIntegerQuantitySpecifier*                           StackSize;                                               // 0x0040(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.LootDefinitionFilterListEntry
	 * Size -> 0x0070
	 */
	struct FLootDefinitionFilterListEntry
	{
	public:
		bool                                                       bIsItemSpec;                                             // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RJVC[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ItemArchetype[0x28];                                     // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              ItemSpecification[0x28];                                 // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bRestrictRarityToRange;                                  // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemRarity                                                MinItemRarity;                                           // 0x0059(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemRarity                                                MaxItemRarity;                                           // 0x005A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GOG2[0x5];                                   // 0x005B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ArrayElementTitleText;                                   // 0x0060(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.LostAndFoundCriteria
	 * Size -> 0x0014
	 */
	struct FLostAndFoundCriteria
	{
	public:
		int32_t                                                    PowerLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemRarity                                                Rarity;                                                  // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EQZ5[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NumUpgrades;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Durability;                                              // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ConditionalMajorWoundCandidate
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FConditionalMajorWoundCandidate : public FConditionalListElement
	{
	public:
		class UMajorWoundData*                                     WoundData;                                               // 0x0028(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MapDistrictSetup
	 * Size -> 0x0058
	 */
	struct FMapDistrictSetup
	{
	public:
		class FString                                              NameID;                                                  // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FText                                                DisplayName;                                             // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                DisplayDescription;                                      // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		struct FSoftObjectPath                                     Image;                                                   // 0x0040(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct DeadIsland.DistrictLightingScenarioSelection
	 * Size -> 0x0040
	 */
	struct FDistrictLightingScenarioSelection
	{
	public:
		struct FKnowledgeBaseExpression                            ActiveExpression;                                        // 0x0000(0x0038) Edit, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EScenarioLightTime                                         DesiredLightTime;                                        // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5Q1H[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MapDistrictState
	 * Size -> 0x0001
	 */
	struct FMapDistrictState
	{
	public:
		EMapDistrictLockedState                                    LockedState;                                             // 0x0000(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct DeadIsland.MapDistrictInfo
	 * Size -> 0x0020
	 */
	struct FMapDistrictInfo
	{
	public:
		class UMapDistrictDatabaseData*                            Data;                                                    // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FMapDistrictState                                   State;                                                   // 0x0008(0x0001) Transient, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_F3XJ[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MapURL;                                                  // 0x0010(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.MenuOptionStepperOption
	 * Size -> 0x0028
	 */
	struct FMenuOptionStepperOption
	{
	public:
		class FText                                                DisplayName;                                             // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FString                                              Value;                                                   // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AIMeleeHitDetectionBone
	 * Size -> 0x0010
	 */
	struct FAIMeleeHitDetectionBone
	{
	public:
		class FName                                                HitBone;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ReferenceBone;                                           // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AutoAimParametersNoAutoAimDistance
	 * Size -> 0x0130
	 */
	struct FAutoAimParametersNoAutoAimDistance
	{
	public:
		struct FTargetSelectionScoreSettings                       ActorScoringSettings;                                    // 0x0000(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		EAutoAimAdjustType                                         ActorSelectAdjustmentType;                               // 0x0050(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DDHJ[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ActorSelectErrorDistance;                                // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTargetSelectionScoreSettings                       ContextScoringSettings;                                  // 0x0058(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		EAutoAimAdjustType                                         ContextSelectAdjustmentType;                             // 0x00A8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NZBY[0x3];                                   // 0x00A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ContextSelectErrorDistance;                              // 0x00AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OptionalTargetContextConfigSetName;                      // 0x00B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDynamicContextScaleMultipliers                     DynamicContextScaleMultipliers;                          // 0x00C0(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FViewTargetParams                                   ViewGuidanceSettings;                                    // 0x00E0(0x003C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bSnapAimedAttacksToLocationIfWithinSnapRadius;           // 0x011C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V0EK[0x3];                                   // 0x011D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SnapRadius;                                              // 0x0120(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAutoAimAdjustType                                         ReticleAdjustType;                                       // 0x0124(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R1S1[0x3];                                   // 0x0125(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ReticleAdjustAmount;                                     // 0x0128(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IDH3[0x4];                                   // 0x012C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimatedBloodTextureOverlaySettings
	 * Size -> 0x0020
	 */
	struct FAnimatedBloodTextureOverlaySettings
	{
	public:
		class UStagedTextureMap*                                   StagedTextureMap;                                        // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TextureParameterName;                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlowAnimationDuration;                                   // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FlowAnimationTextureParameterName;                       // 0x0014(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RequiredOnScreenTimeBeforeAnimation;                     // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ImpactPauseSettings
	 * Size -> 0x0070
	 */
	struct FImpactPauseSettings
	{
	public:
		float                                                      Duration;                                                // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SlowDownScale;                                           // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EaseOut;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2UIX[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAlphaBlend                                         BlendIn;                                                 // 0x0010(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FAlphaBlend                                         BlendOut;                                                // 0x0040(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MeleeWeaponDurabilityStateVisualSettings
	 * Size -> 0x0028
	 */
	struct FMeleeWeaponDurabilityStateVisualSettings
	{
	public:
		class USkeletalMesh*                                       VisualStateSkeletalMesh;                                 // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCosmeticEffectsDefinition*                          VisualStateCosmeticEffect;                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CosmeticEffectTargetSocket;                              // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CosmeticEffectRelativeOffset;                            // 0x0018(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GZKS[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MeleeWeaponDurabilityFeedbackSettings
	 * Size -> 0x00A8
	 */
	struct FMeleeWeaponDurabilityFeedbackSettings
	{
	public:
		class UStaticMesh*                                         BrokenFallOffMesh;                                       // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EMeleeWeaponDurability, EMeleeItemCondition>          DurabilityToConditionMap;                                // 0x0008(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<EMeleeItemCondition, struct FMeleeWeaponDurabilityStateVisualSettings> WeaponDurabilityVisualStates;                            // 0x0058(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MeleeWeaponAudioParams
	 * Size -> 0x0020
	 */
	struct FMeleeWeaponAudioParams
	{
	public:
		TArray<class UAudioFactNameSwitchGroupNamePair*>           AudioFactsAndSwitchGroups;                               // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class UAudioFactNameRTPCNamePair*>                  AudioFactsAndRTPCs;                                      // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MeleeWeaponAttributes
	 * Size -> 0x08D0
	 */
	struct FMeleeWeaponAttributes
	{
	public:
		struct FAttributeTypeAndValue                              PowerLevelAttribute;                                     // 0x0000(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              DamageAttribute;                                         // 0x0070(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              ForceAttribute;                                          // 0x00E0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              MaxDurabilityAttribute;                                  // 0x0150(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              CriticalChanceAttribute;                                 // 0x01C0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              CriticalDamageAttribute;                                 // 0x0230(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              StaminaCostPerAttackAttribute;                           // 0x02A0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              LimbDamageMultiplierAttribute;                           // 0x0310(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              HeavyAttackChargeTimeMultiplierAttribute;                // 0x0380(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              HeavyAttackDamageMultiplierAttribute;                    // 0x03F0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              CounterAttackDamageMultiplierAttribute;                  // 0x0460(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              ThrownAttackDamageMultiplierAttribute;                   // 0x04D0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              ThrownAttackForceMultiplierAttribute;                    // 0x0540(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              CashValueAttribute;                                      // 0x05B0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              CashValueForUpgradesAttribute;                           // 0x0620(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              LevelMatchCashValueAttribute;                            // 0x0690(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              AttackMovementSpeedPenaltyAttribute;                     // 0x0700(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              ElementalBuildUpMultiplier;                              // 0x0770(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              AttackSpeedMultiplierAttribute;                          // 0x07E0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              WeaponTypeBonusAttribute;                                // 0x0850(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FAttributeTypeAndValue>                      AdditionalAttributes;                                    // 0x08C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.WeaponConditionToMaterialMap
	 * Size -> 0x0050
	 */
	struct FWeaponConditionToMaterialMap
	{
	public:
		TMap<EMeleeItemCondition, class UMaterialInterface*>       MaterialOverrides;                                       // 0x0000(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MeleeWeaponThresholdMapping
	 * Size -> 0x000C
	 */
	struct FMeleeWeaponThresholdMapping
	{
	public:
		EMeleeWeaponDurabilityThresholdType                        ThresholdType;                                           // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VWF4[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Threshold;                                               // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMeleeWeaponDurability                                     Durability;                                              // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BALR[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AIMeleeWeaponParams
	 * Size -> 0x0008
	 */
	struct FAIMeleeWeaponParams
	{
	public:
		class FName                                                SocketName;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MeleeWeaponArchetypeData
	 * Size -> 0x0558
	 */
	struct FMeleeWeaponArchetypeData
	{
	public:
		class UParticleSystem*                                     WeaponTrail;                                             // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EMeleeWeaponDurability, class UParticleSystem*>       WeaponTrailOverrides;                                    // 0x0008(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<EItemRarity, struct FWeaponConditionToMaterialMap>    RarityMaterialOverridesByCondition;                      // 0x0058(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<EItemRarity, class UMaterialInterface*>               RarityMaterialOverrides;                                 // 0x00A8(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAnimatedBloodTextureOverlaySettings                BloodOverlaySettings;                                    // 0x00F8(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		float                                                      BloodinessIncrementPerHit;                               // 0x0118(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsImprovisedWeapon;                                     // 0x011C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8HY5[0x3];                                   // 0x011D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxNumUpgrades;                                          // 0x0120(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q7VK[0x4];                                   // 0x0124(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UProceduralWeaponPropertiesDefinition*               ProcedurallyGeneratedWeaponPropertiesDefinition;         // 0x0128(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DamageType;                                              // 0x0130(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseAttacksPerSecond;                                    // 0x0138(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseCriticalHitForceMultiplier;                          // 0x013C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponStandardAttackQueueTime;                           // 0x0140(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponStandardAttackAnticipationTime;                    // 0x0144(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponStandardAttackSpeed;                               // 0x0148(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponStandardAttackRepetitionTime;                      // 0x014C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponStandardAttackPulseDelay;                          // 0x0150(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponLowCameraPitchValue;                               // 0x0154(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponFloorCameraPitchValue;                             // 0x0158(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponUpCameraPitchValue;                                // 0x015C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponCameraShakeScaleMin;                               // 0x0160(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponCameraShakeScaleMax;                               // 0x0164(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponDismembermentChanceOnKill;                         // 0x0168(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0IL9[0x4];                                   // 0x016C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCosmeticEffectsDefinition*                          WeaponStandardAttackCameraCosmeticEffect;                // 0x0170(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCosmeticEffectsDefinition*                          WeaponStandardAttackAnticCameraCosmeticEffect;           // 0x0178(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCosmeticEffectsDefinition*                          WeaponHeavyAttackCameraCosmeticEffect;                   // 0x0180(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsRepairable;                                           // 0x0188(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PAPV[0x3];                                   // 0x0189(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DurabilityLossPerHit;                                    // 0x018C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UModifiableValueDefinition*                          DurabilityLossModifier;                                  // 0x0190(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HeavyAttackDurabilityLossPerHitMultiplier;               // 0x0198(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GNP6[0x4];                                   // 0x019C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMeleeWeaponThresholdMapping>                DurabilityMapping;                                       // 0x01A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FMeleeWeaponDurabilityFeedbackSettings              DurabilityFeedbackSettings;                              // 0x01B0(0x00A8) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRangeBasedScalar                                   RepairCostDurabilityScalar;                              // 0x0258(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FMeleeWeaponAudioParams                             AudioParams;                                             // 0x0280(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bCanBeThrown;                                            // 0x02A0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F731[0x3];                                   // 0x02A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BaseThrownWeaponDamageMultiplier;                        // 0x02A4(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseThrownWeaponForceMultiplier;                         // 0x02A8(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QO3E[0x4];                                   // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UProjectileLaunchParameters*                         ThrownWeaponLaunchParameters;                            // 0x02B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       MidAirAudioEvent;                                        // 0x02B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BasePowerAttackStaminaCostMultiplier;                    // 0x02C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JRFJ[0x4];                                   // 0x02C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         PowerAttackMultiplierCurve;                              // 0x02C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         PowerAttackForceMultiplierCurveOverride;                 // 0x02D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BasePowerAttackChargeTime;                               // 0x02D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HeavyAttackDamageMultiplierAttributeName;                // 0x02DC(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HeavyAttackChargeTimeAttributeName;                      // 0x02E4(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RP6U[0x4];                                   // 0x02EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULungeSettings*                                      HeavyAttackLungeSettings;                                // 0x02F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FKnowledgeBaseValueSelector>                 FactsSetWhenHeld;                                        // 0x02F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UMeleeWeaponAutoAimSettings*                         AutoAimSettings;                                         // 0x0308(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDeadIsland_FImpactData                             ImpactData;                                              // 0x0310(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                HitFXType;                                               // 0x031C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AMWP[0x4];                                   // 0x0324(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FImpactConfiguration                                ImpactConfiguration;                                     // 0x0328(0x00D8) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bImpactPauseEnabled;                                     // 0x0400(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BD1W[0x7];                                   // 0x0401(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FImpactPauseSettings                                ImpactPauseSettings;                                     // 0x0408(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bReboundEnabled;                                         // 0x0478(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZFOH[0x7];                                   // 0x0479(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            BlockReboundExpression;                                  // 0x0480(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReboundThreshold;                                        // 0x04B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_53FA[0x4];                                   // 0x04BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         ReboundChanceCurve;                                      // 0x04C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReboundInternalCooldown;                                 // 0x04C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMeleeSweepParams                                   MeleeSweepParams;                                        // 0x04CC(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bActiveCombatRepositioningEnabled;                       // 0x04EC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7HKL[0x3];                                   // 0x04ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IdealMaxTargetRangeAsFractionOfWeaponRange;              // 0x04F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRepositioningTargetMustMeetKBRequirements;              // 0x04F4(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2KTW[0x3];                                   // 0x04F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            TargetEligibilityExpression;                             // 0x04F8(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FActiveCombatRepositioningSettings                  ActiveCombatRepositioningSettings;                       // 0x0530(0x001C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		EWeaponActorSource                                         WeaponActorSource;                                       // 0x054C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G44N[0x3];                                   // 0x054D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAIMeleeWeaponParams                                AIMeleeParams;                                           // 0x0550(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MenuListItemSortOption
	 * Size -> 0x0030
	 */
	struct FMenuListItemSortOption
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Caption;                                                 // 0x0008(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class UMenuListItemSortType*>                       SortTypes;                                               // 0x0020(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MenuComponentSingleEventList
	 * Size -> 0x0010
	 */
	struct FMenuComponentSingleEventList
	{
	public:
		TArray<class UGFxMenuComponentSingleEvent*>                Events;                                                  // 0x0000(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MenuComponentPairedEventList
	 * Size -> 0x0010
	 */
	struct FMenuComponentPairedEventList
	{
	public:
		TArray<class UGFxMenuComponentPairedEvent*>                Events;                                                  // 0x0000(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MenuCreditsImage
	 * Size -> 0x0020
	 */
	struct FMenuCreditsImage
	{
	public:
		struct FSoftObjectPath                                     DisplayImage;                                            // 0x0000(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UseWidth;                                                // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UseHeight;                                               // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MenuElementConditions
	 * Size -> 0x0018
	 */
	struct FMenuElementConditions
	{
	public:
		TArray<class UMenuElementCondition*>                       Conditions;                                              // 0x0000(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		EMenuElementConditionLogicalOperation                      LogicOperationType;                                      // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SI6B[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.QuestGroupEntry
	 * Size -> 0x0028
	 */
	struct FQuestGroupEntry
	{
	public:
		unsigned char                                              QuestFilters[0x10];                                      // 0x0000(0x0010) UNKNOWN PROPERTY: ArrayProperty
		class FText                                                GroupDisplayNameOverride;                                // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.VendorShopInfoPanes
	 * Size -> 0x0020
	 */
	struct FVendorShopInfoPanes
	{
	public:
		class FName                                                InfoPaneSwitcherName;                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              InfoPaneSymbol;                                          // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              InfoPaneClass;                                           // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.VendorShopUIHandlerGroup
	 * Size -> 0x0020
	 */
	struct FVendorShopUIHandlerGroup
	{
	public:
		class UShopBuyUITypeHandler*                               Handler;                                                 // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                GroupDisplayName;                                        // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.VendorSellShopUIHandlerGroup
	 * Size -> 0x0020
	 */
	struct FVendorSellShopUIHandlerGroup
	{
	public:
		class UBaseShopSellUITypeHandler*                          Handler;                                                 // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                GroupDisplayName;                                        // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MovableCanvasTweenParams
	 * Size -> 0x000C
	 */
	struct FMovableCanvasTweenParams
	{
	public:
		float                                                      Speed;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinTime;                                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxTime;                                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MenuLAMapLocationDisplayData
	 * Size -> 0x0030
	 */
	struct FMenuLAMapLocationDisplayData
	{
	public:
		class UGFxMenuButton*                                      LocationClip;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UIconMetadataLAMap*                                  IconMetadataLAMap;                                       // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UIconMetadataWorldMap*                               IconMetadataWorldMap;                                    // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S3X2[0x18];                                  // 0x0018(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MenuModelViewTypeAssets
	 * Size -> 0x0020
	 */
	struct FMenuModelViewTypeAssets
	{
	public:
		class UClass*                                              ViewerClass;                                             // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              MutatorClass;                                            // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AnimPrefix;                                              // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MenuOptionGamepadLayoutKeys
	 * Size -> 0x0038
	 */
	struct FMenuOptionGamepadLayoutKeys
	{
	public:
		struct FKey                                                Key1;                                                    // 0x0000(0x0018) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKey                                                Key2;                                                    // 0x0018(0x0018) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBumper;                                                 // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStick;                                                  // 0x0031(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_78OX[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MenuOptionsPreviewImageDataEntry
	 * Size -> 0x0010
	 */
	struct FMenuOptionsPreviewImageDataEntry
	{
	public:
		struct FWeightedBlendables                                 WeightedBlendables;                                      // 0x0000(0x0010) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MapBrowserEntryData
	 * Size -> 0x00B8
	 */
	struct FMapBrowserEntryData
	{
	public:
		unsigned char                                              UnknownData_1L1J[0xB8];                                  // 0x0000(0x00B8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MapBrowserCategoryEntriesList
	 * Size -> 0x0010
	 */
	struct FMapBrowserCategoryEntriesList
	{
	public:
		TArray<struct FMapBrowserEntryData>                        Entries;                                                 // 0x0000(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MenuTabButtonBarTab
	 * Size -> 0x0020
	 */
	struct FMenuTabButtonBarTab
	{
	public:
		class FText                                                Label;                                                   // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FName                                                ID;                                                      // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CharacterVideoEntry
	 * Size -> 0x0050
	 */
	struct FCharacterVideoEntry
	{
	public:
		class UCharacterData*                                      Character;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharacterGender                                           Gender;                                                  // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WEUX[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMediaSource*                                        TransitionPrevVideo;                                     // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMediaSource*                                        LoopVideo;                                               // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMediaSource*                                        TransitionNextVideo;                                     // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMediaSource*                                        OutroVideo;                                              // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     StillImage;                                              // 0x0030(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInvertInputs;                                           // 0x0048(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IV60[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PlatformSpecificJoinGameTabData
	 * Size -> 0x0050 (FullSize[0x00A0] - InheritedSize[0x0050])
	 */
	struct FPlatformSpecificJoinGameTabData : public FPlatformSpecificTextPicker
	{
	public:
		TMap<EPlatformSpecificTextPickerPlatforms, EGameFriendType> SupportedFriendTypes;                                    // 0x0050(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.MenuViewMultiContainerEntry
	 * Size -> 0x0028
	 */
	struct FMenuViewMultiContainerEntry
	{
	public:
		class FName                                                ContainerUniqueName;                                     // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SymbolName;                                              // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ParentName;                                              // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ModelAsset
	 * Size -> 0x0014
	 */
	struct FModelAsset
	{
	public:
		struct FPrimaryAssetId                                     Model;                                                   // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Frequency;                                               // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ModifiedValueInstance
	 * Size -> 0x0040
	 */
	struct FModifiedValueInstance
	{
	public:
		float                                                      CurrentResult;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SLJA[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UModifiableValueDefinition*                          ValueDefinition;                                         // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UModifiableValuesComponent*                          OwnerComponent;                                          // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_0PQ3[0x28];                                  // 0x0018(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ExpressionDependentValueController
	 * Size -> 0x0048
	 */
	struct FExpressionDependentValueController
	{
	public:
		unsigned char                                              UnknownData_7169[0x48];                                  // 0x0000(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ModifableValueDelegateList
	 * Size -> 0x0028
	 */
	struct FModifableValueDelegateList
	{
	public:
		TArray<class FScriptDelegate>                              Delegates;                                               // 0x0000(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E01R[0x18];                                  // 0x0010(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ModularConditionsAndEffects
	 * Size -> 0x0040
	 */
	struct FModularConditionsAndEffects
	{
	public:
		TArray<class UModularCondition*>                           ConditionsAll;                                           // 0x0000(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class UModularCondition*>                           ConditionsAny;                                           // 0x0010(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class UModularEffect*>                              EffectsIfConditionTrue;                                  // 0x0020(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class UModularEffect*>                              EffectsIfConditionFalse;                                 // 0x0030(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.NamedModularConditionsAndEffectsBlock
	 * Size -> 0x0050
	 */
	struct FNamedModularConditionsAndEffectsBlock
	{
	public:
		struct FKnowledgeBaseExpression                            KnowledgeBaseExpression;                                 // 0x0000(0x0038) Edit, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UModularConditionsAndEffectsBlock*                   ModularConditionsAndEffectsBlock;                        // 0x0038(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UKnowledgeBaseExpressionListener*                    ExpressionListener;                                      // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VD4X[0x8];                                   // 0x0048(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ModularConditionsAndEffectsBlockReplicatedStatus
	 * Size -> 0x0008
	 */
	struct FModularConditionsAndEffectsBlockReplicatedStatus
	{
	public:
		uint32_t                                                   NameHash;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActiveOnServer;                                       // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X0EQ[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.BodyPartDamageDefinition
	 * Size -> 0x0018
	 */
	struct FBodyPartDamageDefinition
	{
	public:
		class FName                                                BodyPartBoneDefinitionRowName;                           // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlobalMultiplier;                                        // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CRTR[0xC];                                   // 0x000C(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.BodyPartDamageSettings
	 * Size -> 0x001C
	 */
	struct FBodyPartDamageSettings
	{
	public:
		bool                                                       bCanBeDismembered;                                       // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2V5E[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DismemberChanceWhenOnZeroHealth;                         // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeBroken;                                            // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VFU8[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BreakChanceWhenOnZeroHealth;                             // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceKillOwnerWhenDestroyed;                            // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDamagePropagation                                         DamagePropagation;                                       // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OO4N[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RadialDamageScalar;                                      // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AffectedByRadialDamageChance;                            // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.KBRestrictedBodyPartDamageSettings
	 * Size -> 0x0058
	 */
	struct FKBRestrictedBodyPartDamageSettings
	{
	public:
		struct FKnowledgeBaseExpression                            KBRequirements;                                          // 0x0000(0x0038) Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBodyPartDamageSettings                             Settings;                                                // 0x0038(0x001C) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V3H9[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.BodyPartHealthDefinition
	 * Size -> 0x0050
	 */
	struct FBodyPartHealthDefinition
	{
	public:
		class FName                                                BodyPartBoneDefinitionRowName;                           // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxHealthFraction;                                       // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LNAW[0xC];                                   // 0x000C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FKBRestrictedBodyPartDamageSettings>         KBRestrictedSettings;                                    // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate
		struct FBodyPartDamageSettings                             DefaultSettings;                                         // 0x0028(0x001C) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate
		TWeakObjectPtr<class UKnowledgeBaseComponent>              OwnerKBComponent;                                        // 0x0044(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_OV2O[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.NavBarrierStateDefinition
	 * Size -> 0x0058
	 */
	struct FNavBarrierStateDefinition
	{
	public:
		TMap<class FName, ENavBarrierState>                        NavMeshStates;                                           // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
		ENavBarrierState                                           DefaultState;                                            // 0x0050(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_64PI[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.NavLinkStorageEntry
	 * Size -> 0x0008
	 */
	struct FNavLinkStorageEntry
	{
	public:
		class UCustomNavLinkStorageBase*                           NavLinkData;                                             // 0x0000(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CachedTraversalMetrics
	 * Size -> 0x0018
	 */
	struct FCachedTraversalMetrics
	{
	public:
		float                                                      Ascent;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HeightClearance;                                         // 0x0004(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreObstacleDistance;                                     // 0x0008(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PostObstacleDistance;                                    // 0x000C(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartLocationVerticalPhysicalToNavMeshOffset;            // 0x0010(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndLocationVerticalPhysicalToNavMeshOffset;              // 0x0014(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.TraversalMetrics
	 * Size -> 0x000C (FullSize[0x0024] - InheritedSize[0x0018])
	 */
	struct FTraversalMetrics : public FCachedTraversalMetrics
	{
	public:
		float                                                      Descent;                                                 // 0x0018(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Distance;                                                // 0x001C(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObstacleWidth;                                           // 0x0020(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.TraversalLinkData
	 * Size -> 0x003C
	 */
	struct FTraversalLinkData
	{
	public:
		struct FVector                                             Left;                                                    // 0x0000(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Right;                                                   // 0x000C(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTraversalMetrics                                   Metrics;                                                 // 0x0018(0x0024) Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.NPCNameslateEntry
	 * Size -> 0x0010
	 */
	struct FNPCNameslateEntry
	{
	public:
		class ADIAICharacter*                                      NPCActor;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              IconClass;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.NPCNameslateActiveIcon
	 * Size -> 0x0018
	 */
	struct FNPCNameslateActiveIcon
	{
	public:
		struct FGuid                                               NameslateId;                                             // 0x0000(0x0010) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHUDIconBase*                                        HUDIcon;                                                 // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ObjectiveIconKey
	 * Size -> 0x0010
	 */
	struct FObjectiveIconKey
	{
	public:
		unsigned char                                              UnknownData_NHUJ[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ObjectiveUISourceEditorWrapper
	 * Size -> 0x0018
	 */
	struct FObjectiveUISourceEditorWrapper
	{
	public:
		class UObjectiveUISource*                                  Source;                                                  // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ArrayElementTitleText;                                   // 0x0008(0x0010) Edit, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.ObjectiveIconSourceData
	 * Size -> 0x0010
	 */
	struct FObjectiveIconSourceData
	{
	public:
		class UDIObjectiveData*                                    ObjectiveData;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ObjectiveId;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsStarted;                                              // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1IYB[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ObjectiveUISource_DescriptionAndIconsActivationPolicyOptions
	 * Size -> 0x00C0
	 */
	struct FObjectiveUISource_DescriptionAndIconsActivationPolicyOptions
	{
	public:
		EDescriptionAndIconsActivationPolicy                       ActivationPolicy;                                        // 0x0000(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZA27[0x3];                                   // 0x0001(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_0KT4[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UDIObjectiveData*>                            ObjectivesToComplete;                                    // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            StartedExpression;                                       // 0x0018(0x0038) Edit, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            CompleteExpression;                                      // 0x0050(0x0038) Edit, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            StoppedExpression;                                       // 0x0088(0x0038) Edit, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ObjectiveUISource_SimpleObjectiveActivationPolicyOptions
	 * Size -> 0x00B0
	 */
	struct FObjectiveUISource_SimpleObjectiveActivationPolicyOptions
	{
	public:
		ESimpleObjectiveActivationPolicy                           ActivationPolicy;                                        // 0x0000(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XM0R[0x3];                                   // 0x0001(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_MKE3[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            StartedExpression;                                       // 0x0008(0x0038) Edit, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            CompleteExpression;                                      // 0x0040(0x0038) Edit, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            StoppedExpression;                                       // 0x0078(0x0038) Edit, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimSetStackFrame
	 * Size -> 0x0038
	 */
	struct FAnimSetStackFrame
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0DPY[0x34];                                  // 0x0004(0x0034) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimSetStack
	 * Size -> 0x0028
	 */
	struct FAnimSetStack
	{
	public:
		unsigned char                                              UnknownData_4Q8H[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAnimSetStackFrame>                          Stack;                                                   // 0x0018(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.ObstacleShape
	 * Size -> 0x0008
	 */
	struct FObstacleShape
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Height;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.OnlineGameActivityTask
	 * Size -> 0x0018
	 */
	struct FOnlineGameActivityTask
	{
	public:
		class FString                                              ActivityId;                                              // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOnlineGameActivityAvailability                            DefaultAvailability;                                     // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CW5W[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.OnlineGameActivity
	 * Size -> 0x0028
	 */
	struct FOnlineGameActivity
	{
	public:
		struct FOnlineGameActivityTask                             Activity;                                                // 0x0000(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FOnlineGameActivityTask>                     Tasks;                                                   // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.OnlineGameActivityTaskState
	 * Size -> 0x0002
	 */
	struct FOnlineGameActivityTaskState
	{
	public:
		EOnlineGameActivityAvailability                            Availability;                                            // 0x0000(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOnlineGameActivityProgress                                Progress;                                                // 0x0001(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.OnlineGameActivityState
	 * Size -> 0x0058
	 */
	struct FOnlineGameActivityState
	{
	public:
		struct FOnlineGameActivityTaskState                        ActivityState;                                           // 0x0000(0x0002) SaveGame, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NC86[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, struct FOnlineGameActivityTaskState>   TaskState;                                               // 0x0008(0x0050) SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ActivityOutcome
	 * Size -> 0x0018
	 */
	struct FActivityOutcome
	{
	public:
		class FString                                              ActivityId;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOnlineGameActivityOutcome                                 ActivityOutcome;                                         // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_545R[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ActivityAvailability
	 * Size -> 0x0018
	 */
	struct FActivityAvailability
	{
	public:
		class FString                                              ActivityId;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOnlineGameActivityAvailability                            Availability;                                            // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0J9B[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.OnlinePurchaseCatalogueItem
	 * Size -> 0x0010
	 */
	struct FOnlinePurchaseCatalogueItem
	{
	public:
		class FString                                              ItemId;                                                  // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.OpenableDataAsset_LevelSequencePlaybackParams
	 * Size -> 0x000C
	 */
	struct FOpenableDataAsset_LevelSequencePlaybackParams
	{
	public:
		float                                                      PlayRate;                                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELevelSequenceStartPosition                                StartingPosition;                                        // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FNL6[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    StartingFrame;                                           // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.OptionGroupListOptionElementInfo
	 * Size -> 0x0020
	 */
	struct FOptionGroupListOptionElementInfo
	{
	public:
		unsigned char                                              UnknownData_XWSW[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MaterialCurve
	 * Size -> 0x0018
	 */
	struct FMaterialCurve
	{
	public:
		class UCurveFloat*                                         Curve;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ParameterName;                                           // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VQQX[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ParabolaTrajectorySettings
	 * Size -> 0x0018
	 */
	struct FParabolaTrajectorySettings
	{
	public:
		bool                                                       bPreferHigherArc;                                        // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S4GG[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAngleRangeClampSettings                            PitchAdjustLimits;                                       // 0x0004(0x0014) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PerkCollectionEntry
	 * Size -> 0x0018
	 */
	struct FPerkCollectionEntry
	{
	public:
		class FString                                              ArrayElementTitleText;                                   // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPerkDefinition*                                     Definition;                                              // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GoadFilterParameters
	 * Size -> 0x0068
	 */
	struct FGoadFilterParameters
	{
	public:
		float                                                      ReticleMaxDistance;                                      // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObserverPitchAdjust;                                     // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LQUK[0x4];                                   // 0x0008(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ObserverMaxYawFar;                                       // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObserverMaxYawNear;                                      // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObserverMaxPitchFar;                                     // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObserverMaxPitchNear;                                    // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObserverMaxDistance;                                     // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         YawCurve;                                                // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         PitchCurve;                                              // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            GoadBlockingExpression;                                  // 0x0030(0x0038) Edit, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ChallengeTier
	 * Size -> 0x0010
	 */
	struct FChallengeTier
	{
	public:
		class UBaseChallengeDataAsset*                             ChallengeData;                                           // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Tier;                                                    // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C0E5[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ChallengeCategoryTier
	 * Size -> 0x000C
	 */
	struct FChallengeCategoryTier
	{
	public:
		class FName                                                ChallengeCategory;                                       // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Tier;                                                    // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.EffectTriggerPolicySettings
	 * Size -> 0x0001
	 */
	struct FEffectTriggerPolicySettings
	{
	public:
		EEffectTriggerPolicy                                       EffectTriggerPolicy;                                     // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PerkConditionsAndEffectsCollection
	 * Size -> 0x0058
	 */
	struct FPerkConditionsAndEffectsCollection
	{
	public:
		EConditionTriggerWindow                                    ConditionTriggerWindow;                                  // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N1LB[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UPerkCondition*>                              Conditions;                                              // 0x0008(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FEffectTriggerPolicySettings                        EffectTriggerPolicy;                                     // 0x0018(0x0001) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bTriggerEffectsOnChance;                                 // 0x0019(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OCGF[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ChanceZeroToOne;                                         // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UPerkEffect*>                                 Effects;                                                 // 0x0020(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bEndEffectsAfterTime;                                    // 0x0030(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bResetEffectDurationIfConditionsRetrigger;               // 0x0031(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_APLM[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Duration;                                                // 0x0034(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UPerkCondition*>                              CustomEffectEndConditions;                               // 0x0038(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, AdvancedDisplay, NativeAccessSpecifierPublic
		float                                                      EndConditionsTestingDelay;                               // 0x0048(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOnlyEverTriggerEffectsOnce;                             // 0x004C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQ36[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Cooldown;                                                // 0x0050(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O4CI[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ImpactModifierSettings
	 * Size -> 0x0010
	 */
	struct FImpactModifierSettings
	{
	public:
		EImpactNotificationType                                    ModifierScope;                                           // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bModifierOnlyAffectsPerkOwnersImpacts;                   // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLimitDuration;                                          // 0x0002(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F0MO[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Duration;                                                // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImpactRequestModifier*                              ImpactRequestModifier;                                   // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ModifierSettings
	 * Size -> 0x00A8
	 */
	struct FModifierSettings
	{
	public:
		struct FModifierDefinition                                 ModifierAndBaseValue;                                    // 0x0000(0x0050) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FAttributeLevelScalingSettings                      StackLevelScaling;                                       // 0x0050(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bLimitDuration;                                          // 0x00A0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S8VO[0x3];                                   // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Duration;                                                // 0x00A4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PerkEffectBoneStatData
	 * Size -> 0x0018
	 */
	struct FPerkEffectBoneStatData
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Stat;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ConditionalExpressionDeckCounters
	 * Size -> 0x00B0
	 */
	struct FConditionalExpressionDeckCounters
	{
	public:
		struct FScopedKnowledgeBaseExpressionListener              ExpressionToModifyCardCounter;                           // 0x0000(0x0060) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
		TMap<class FName, struct FRandomNumberGenerator_Int>       CardDealerCountersToSet;                                 // 0x0060(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ConditionAndEffectThreadInitParams
	 * Size -> 0x0018
	 */
	struct FConditionAndEffectThreadInitParams
	{
	public:
		class UPerkDefinition*                                     PerkDefinition;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConditionAndEffectThreadIndex;                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZGJQ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPerksComponent*                                     OwnerComponent;                                          // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PerkInstanceStateInfo
	 * Size -> 0x0030
	 */
	struct FPerkInstanceStateInfo
	{
	public:
		unsigned char                                              UnknownData_SL1A[0x2];                                   // 0x0000(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint16_t                                                   CurrentEffectActivationCount;                            // 0x0002(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPerkInstanceState                                         CurrentState;                                            // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XZYS[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TWeakObjectPtr<class AActor>>                       LastImpliedTargets;                                      // 0x0008(0x0010) ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		struct FWeakEventInstigator                                LastPerkEffectInstigator;                                // 0x0018(0x0010) NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bConditionsActive;                                       // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEffectsActive;                                          // 0x0029(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UTKS[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Count;                                                   // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ActivePerkConditionRecord
	 * Size -> 0x0070
	 */
	struct FActivePerkConditionRecord
	{
	public:
		unsigned char                                              UnknownData_DDAE[0x68];                                  // 0x0000(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UConditionCustomDataBase*                            CustomData;                                              // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ActiveEffectRecord
	 * Size -> 0x0028
	 */
	struct FActiveEffectRecord
	{
	public:
		class UPerkEffect*                                         PerkEffect;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G2M3[0x20];                                  // 0x0008(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizationStatePreset
	 * Size -> 0x00C8
	 */
	struct FPhysicalizationStatePreset
	{
	public:
		class FName                                                RootBone;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        ReduceSimulationForBones;                                // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        ReduceSimulationBelowBones;                              // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                MeshCollisionProfile;                                    // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AlternateMeshCollisionProfile;                           // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, class FName>                             PerBoneCollisionProfile;                                 // 0x0038(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FName                                                CapsuleCollisionProfile;                                 // 0x0088(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CapsuleCollisionRequestReason;                           // 0x0090(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PhysicalAnimationProfile;                                // 0x0098(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ConstraintsProfile;                                      // 0x00A0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MeshCollisionClassName;                                  // 0x00A8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFilterMaskContainer                                MeshMaskTypeFilter;                                      // 0x00B0(0x0001) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FFilterMaskContainer                                MeshMaskIgnoreFilter;                                    // 0x00B1(0x0001) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bOverrideMeshMaskTypeFilter;                             // 0x00B2(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideMeshMaskIgnoreFilter;                           // 0x00B3(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSimulateMeshBodies;                                     // 0x00B4(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSimulateWithCCD;                                        // 0x00B5(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSimulateIncludingRoot;                                  // 0x00B6(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSimulationGeneratesHitEvents;                           // 0x00B7(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreBodiesInsideCapsuleForIntersectionTests;          // 0x00B8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WVQ2[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimationLayerGroup*                                LayerGroupToDisable;                                     // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizedWorldStateData
	 * Size -> 0x0070
	 */
	struct FPhysicalizedWorldStateData
	{
	public:
		struct FScopedKnowledgeBaseExpressionListener              ActiveExpression;                                        // 0x0000(0x0060) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UGameEventState*                                     GameEventState;                                          // 0x0060(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameEvent*                                          GameEvent;                                               // 0x0068(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizedWorldStateDataSet
	 * Size -> 0x0010
	 */
	struct FPhysicalizedWorldStateDataSet
	{
	public:
		TArray<struct FPhysicalizedWorldStateData>                 StateData;                                               // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizedWorldStateTriggerCollection
	 * Size -> 0x0088
	 */
	struct FPhysicalizedWorldStateTriggerCollection
	{
	public:
		TMap<class FName, struct FPhysicalizedWorldStateDataSet>   StatesByTriggerName;                                     // 0x0000(0x0050) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UGameEventState*                                     DefaultState;                                            // 0x0050(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ULAR[0x30];                                  // 0x0058(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizedWorldEventTriggerCollection
	 * Size -> 0x0058
	 */
	struct FPhysicalizedWorldEventTriggerCollection
	{
	public:
		TMap<class FName, class UGameEvent*>                       EventsByTriggerName;                                     // 0x0000(0x0050) Edit, ExportObject, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UGameEvent*                                          DefaultEvent;                                            // 0x0050(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizedWorldStateAndEventTriggerCollection
	 * Size -> 0x00E0
	 */
	struct FPhysicalizedWorldStateAndEventTriggerCollection
	{
	public:
		struct FPhysicalizedWorldStateTriggerCollection            States;                                                  // 0x0000(0x0088) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FPhysicalizedWorldEventTriggerCollection            Events;                                                  // 0x0088(0x0058) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerLadderActionsSubParamsData
	 * Size -> 0x0040
	 */
	struct FPlayerLadderActionsSubParamsData
	{
	public:
		class USplineComponent*                                    SplineComponent;                                         // 0x0000(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TopRungHeight;                                           // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FirstStepHeight;                                         // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StepRungHeight;                                          // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BottomRungHeight;                                        // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumRungs;                                                // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7TIW[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FQuat                                               TransRotation;                                           // 0x0020(0x0010) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bEngagedAtTop;                                           // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GIVO[0xF];                                   // 0x0031(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PlayerMaterialParams
	 * Size -> 0x0020
	 */
	struct FPlayerMaterialParams
	{
	public:
		TWeakObjectPtr<class UMaterialInstanceDynamic>             DynamicHandMaterialInstance;                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TLIU[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PlayerMeshMaterialParamsArray
	 * Size -> 0x0018
	 */
	struct FPlayerMeshMaterialParamsArray
	{
	public:
		class USkeletalMeshComponent*                              SkeletalMeshComponent;                                   // 0x0000(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FPlayerMaterialParams>                       ScopedMaterialParams;                                    // 0x0008(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerKnockbackActionSubParamsData
	 * Size -> 0x0140
	 */
	struct FPlayerKnockbackActionSubParamsData
	{
	public:
		float                                                      ImpulseStrength;                                         // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseRangeRemapper;                                       // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2FRG[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            MaxImpulseStrengthQueryValueExpression;                  // 0x0008(0x0038) Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRemapParameterToRangeHelper                        MaxImpulseStrengthQueryValueRemapSettings;               // 0x0040(0x00F0) Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bUseDurationFromAnimation;                               // 0x0130(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NPB9[0x3];                                   // 0x0131(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Duration;                                                // 0x0134(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCosmeticEffectsDefinition*                          CosmeticEffectDef;                                       // 0x0138(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ActiveGameEventStateOnPlayer
	 * Size -> 0x0018
	 */
	struct FActiveGameEventStateOnPlayer
	{
	public:
		unsigned char                                              UnknownData_DCB8[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGameEventState*                                     GameEventState;                                          // 0x0010(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameEventStateArray
	 * Size -> 0x0010
	 */
	struct FGameEventStateArray
	{
	public:
		TArray<struct FActiveGameEventStateOnPlayer>               ScopedStates;                                            // 0x0000(0x0010) ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerMovementParams
	 * Size -> 0x00D8
	 */
	struct FPlayerMovementParams
	{
	public:
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0000(0x0038) Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxMoveSpeed;                                            // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ForwardSpeedScalar;                                      // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BackwardSpeedScalar;                                     // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ForwardInputOverride;                                    // 0x0044(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InAirSpeedScalar;                                        // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InAirBoostScalar;                                        // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InAirBoostLatVelThresh;                                  // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeSpeedScalar;                                       // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         SlopeSpeedScalarCurve;                                   // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         StairsSpeedScalarCurve;                                  // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchSpeedScalar;                                        // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawSpeedScalar;                                          // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Acceleration;                                            // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Deceleration;                                            // 0x0074(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         SlopeDecelScalarCurve;                                   // 0x0078(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         StairsDecelScalarCurve;                                  // 0x0080(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FallingLatDecel;                                         // 0x0088(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FallingLatFric;                                          // 0x008C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GravityScalar;                                           // 0x0090(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SwimUpForce;                                             // 0x0094(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DodgeDuration;                                           // 0x0098(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DodgeDistance;                                           // 0x009C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DesiredJumpHeight;                                       // 0x00A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JumpTimeToApex;                                          // 0x00A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         JumpCurve;                                               // 0x00A8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseControllerRotationYaw;                               // 0x00B0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D1KC[0x3];                                   // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LookOffsetYawLimit;                                      // 0x00B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LookOffsetPitchLimitMin;                                 // 0x00B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LookOffsetPitchLimitMax;                                 // 0x00BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpdateCameraFOVOffset;                                  // 0x00C0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_06GE[0x3];                                   // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CameraFOVOffset;                                         // 0x00C4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ArrayElementTitleText;                                   // 0x00C8(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.PlayerProgressionLevelInfo
	 * Size -> 0x0028
	 */
	struct FPlayerProgressionLevelInfo
	{
	public:
		int32_t                                                    XPDeltaValue;                                            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    XPTotalValue;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameReward*                                         GameReward;                                              // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                UIText;                                                  // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RechargeSettings
	 * Size -> 0x0010
	 */
	struct FRechargeSettings
	{
	public:
		bool                                                       bUseTimeToFullyRecharge;                                 // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U2BS[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeToFullyRecharge;                                     // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeToRechargeSpecificAmount;                            // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AmountOfStaminaToRecharge;                               // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PopupAnimationDamageCriteriaData
	 * Size -> 0x0028
	 */
	struct FPopupAnimationDamageCriteriaData
	{
	public:
		EPopupAnimationDamageCriteriaChoice                        WasCriticalHit;                                          // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPopupAnimationDamageCriteriaChoice                        WasResistantHit;                                         // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPopupAnimationDamageCriteriaChoice                        WasArmouredHit;                                          // 0x0002(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPopupAnimationDamageCriteriaChoice                        TriggeredZeroStabilityHit;                               // 0x0003(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPopupAnimationDamageCriteriaChoice                        WasKilled;                                               // 0x0004(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPopupAnimationDamageCriteriaChoice                        IsDamageNumber;                                          // 0x0005(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPopupAnimationDamageCriteriaLimbChoice                    DamageToLimbs;                                           // 0x0006(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPopupAnimationDamageCriteriaEffectiveness                 Effectiveness;                                           // 0x0007(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinEffectivenessValue;                                   // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxEffectivenessValue;                                   // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      ValidDamageTypes;                                        // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic
		class USelectionFrequency*                                 FrequencyFilter;                                         // 0x0020(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PopupAnimationDamageCriteriaAnimationPair
	 * Size -> 0x0040
	 */
	struct FPopupAnimationDamageCriteriaAnimationPair
	{
	public:
		struct FPopupAnimationDamageCriteriaData                   Criteria;                                                // 0x0000(0x0028) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UPopupTextAnimationData*                             AnimationData;                                           // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Caption;                                                 // 0x0030(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PreviewActorTemplate
	 * Size -> 0x0020
	 */
	struct FPreviewActorTemplate
	{
	public:
		class FString                                              TemplateName;                                            // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Actors[0x10];                                            // 0x0010(0x0010) UNKNOWN PROPERTY: ArrayProperty
	};

	/**
	 * ScriptStruct DeadIsland.LineTracerPrioritisation
	 * Size -> 0x00B0
	 */
	struct FLineTracerPrioritisation
	{
	public:
		unsigned char                                              ObserverFactions[0x50];                                  // 0x0000(0x0050) UNKNOWN PROPERTY: SetProperty
		EFactionReaction                                           ReactionsToObservables;                                  // 0x0050(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1GEY[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ObservableFactions[0x50];                                // 0x0058(0x0050) UNKNOWN PROPERTY: SetProperty
		EFactionReaction                                           ReactionsToObservers;                                    // 0x00A8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELineTracePriority                                         Priority;                                                // 0x00A9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KP3F[0x6];                                   // 0x00AA(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ProceduralAnimationAnchorData
	 * Size -> 0x001C
	 */
	struct FProceduralAnimationAnchorData
	{
	public:
		float                                                      ReactionScale;                                           // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PositionTaskWeight;                                      // 0x0004(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             RotationTaskWeight;                                      // 0x0010(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ProceduralAnimationAnchorsPreset
	 * Size -> 0x0050
	 */
	struct FProceduralAnimationAnchorsPreset
	{
	public:
		TMap<class FName, struct FProceduralAnimationAnchorData>   Anchors;                                                 // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DIAnimationProceduralTask
	 * Size -> 0x0020
	 */
	struct FDIAnimationProceduralTask
	{
	public:
		struct FVector                                             Position;                                                // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x000C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      PositionAlpha;                                           // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationAlpha;                                           // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DIAnimationProceduralTaskProperties
	 * Size -> 0x0018
	 */
	struct FDIAnimationProceduralTaskProperties
	{
	public:
		struct FVector                                             PositionWeight;                                          // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             RotationWeight;                                          // 0x000C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ProceduralAnimationReactionData
	 * Size -> 0x0010
	 */
	struct FProceduralAnimationReactionData
	{
	public:
		float                                                      PositionReactionWeight;                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationReactionWeight;                                  // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BiasTowardsHitPosition;                                  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Delay;                                                   // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ProceduralAnimationReactionPreset
	 * Size -> 0x0050
	 */
	struct FProceduralAnimationReactionPreset
	{
	public:
		TMap<class FName, struct FProceduralAnimationReactionData> Reactions;                                               // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ProceduralPropertyValueGenerationSettings
	 * Size -> 0x0020
	 */
	struct FProceduralPropertyValueGenerationSettings
	{
	public:
		bool                                                       bGenerateWithinRange;                                    // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YZBD[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FixedValue;                                              // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinValue;                                                // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxValue;                                                // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         OptionalMinMaxDistributionCurve;                         // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceRounding;                                          // 0x0018(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N4OC[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RoundToNearest;                                          // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ProceduralPropertyMetadataTagSettings
	 * Size -> 0x0038
	 */
	struct FProceduralPropertyMetadataTagSettings
	{
	public:
		struct FKnowledgeBaseExpression                            Requirements;                                            // 0x0000(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.NameGenerationRule
	 * Size -> 0x0058
	 */
	struct FNameGenerationRule
	{
	public:
		struct FKnowledgeBaseExpression                            Requirements;                                            // 0x0000(0x0038) Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UProceduralPropertyNameCandidateSet*                 CandidateStrings;                                        // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRestrictedByProceduralPropertyValue;                    // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SLLG[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinValidPropertyValueZeroToOne;                          // 0x0044(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxValidPropertyValueZeroToOne;                          // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRestrictedByOwnerLevel;                                 // 0x004C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2N8O[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MinValidOwnerLevel;                                      // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxValidOwnerLevel;                                      // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CustomProceduralPropertyEntry
	 * Size -> 0x0018
	 */
	struct FCustomProceduralPropertyEntry
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UProceduralPropertyDefinition*                       ProceduralProperty;                                      // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CustomProceduralProperties
	 * Size -> 0x0010
	 */
	struct FCustomProceduralProperties
	{
	public:
		TArray<struct FCustomProceduralPropertyEntry>              ProceduralProperties;                                    // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PropertyInitializationInfo
	 * Size -> 0x0040
	 */
	struct FPropertyInitializationInfo
	{
	public:
		bool                                                       bContextValidForGeneration;                              // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9WXC[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProceduralGenerationContext                        GenerationContext;                                       // 0x0008(0x0038) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PerkInfo
	 * Size -> 0x0018 (FullSize[0x0024] - InheritedSize[0x000C])
	 */
	struct FPerkInfo : public FFastArraySerializerItem
	{
	public:
		int32_t                                                    PerkInstanceIndex;                                       // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsUnlocked;                                             // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LWK4[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               ActiveInstanceGuid;                                      // 0x0014(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PerkInfoNetworkedArray
	 * Size -> 0x0018 (FullSize[0x0120] - InheritedSize[0x0108])
	 */
	struct FPerkInfoNetworkedArray : public FFastArraySerializer
	{
	public:
		TArray<struct FPerkInfo>                                   Data;                                                    // 0x0108(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class UProceduralComponent*                                Owner;                                                   // 0x0118(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ProceduralCharacterConfig
	 * Size -> 0x00E8
	 */
	struct FProceduralCharacterConfig
	{
	public:
		EValueSpecificationMethod                                  LevelSpecificationMethod;                                // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IIZ6[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Level;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EValueSpecificationMethod                                  RankSpecificationMethod;                                 // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemRarity                                                Rarity;                                                  // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2JOI[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UConditionalRarityWeightingConfigList*               RarityWeightingConfigs;                                  // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EValueSpecificationMethod                                  SeedSpecificationMethod;                                 // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_49FC[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Seed;                                                    // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UModelVariation*                                     ModelVariation;                                          // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSetCollection*                                  SplatterObjectSet;                                       // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UEOM[0xB8];                                  // 0x0030(0x00B8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RarityRestrictedNameCandidateSet
	 * Size -> 0x0010
	 */
	struct FRarityRestrictedNameCandidateSet
	{
	public:
		TArray<class FText>                                        NameCandidates;                                          // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ModifierConfig
	 * Size -> 0x0018
	 */
	struct FModifierConfig
	{
	public:
		EModifierConfigType                                        Method;                                                  // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X5PK[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UModifiableValueDefinition*                          ModifierType;                                            // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPerkDefinition*                                     PerkType;                                                // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PropertySelectionRule
	 * Size -> 0x000C
	 */
	struct FPropertySelectionRule
	{
	public:
		bool                                                       bLimitSelectionFromSet;                                  // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XVAN[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MinNumToAdd;                                             // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxNumToAdd;                                             // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PropertyGenerationRule
	 * Size -> 0x0018
	 */
	struct FPropertyGenerationRule
	{
	public:
		class UNestableProceduralProperty*                         Property;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPropertySelectionRule                              SelectionRule;                                           // 0x0008(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QS0T[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RarityRestrictedPropertyGenerationRules
	 * Size -> 0x0010
	 */
	struct FRarityRestrictedPropertyGenerationRules
	{
	public:
		TArray<struct FPropertyGenerationRule>                     PropertyGenerationRules;                                 // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ProjectileCreationParameterConfig
	 * Size -> 0x0038
	 */
	struct FProjectileCreationParameterConfig
	{
	public:
		class UClass*                                              ProjectileCreationParamsClass;                           // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRandomRangeInitialProjectileSpeed;                      // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7HEL[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OverrideInitialProjectileSpeed;                          // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverrideInitialProjectileSpeedRangedMin;                 // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverrideInitialProjectileSpeedRangedMax;                 // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProjectileLaunchPitchAdjustInDegrees;                    // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnforceMaxPositiveAbsolutePitch;                        // 0x001C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B4G6[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxPositiveAbsolutePitch;                                // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnforceMaxNegativeAbsolutePitch;                        // 0x0024(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EMLG[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxNegativeAbsolutePitch;                                // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverrideInitialLifetime;                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       InitialLifetimeUpdatePaused;                             // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpawnActorCollisionHandlingMethod                         SpawnCollisionHandlingOverride;                          // 0x0031(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C921[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.QuestAndObjectiveRange
	 * Size -> 0x0018
	 */
	struct FQuestAndObjectiveRange
	{
	public:
		class UDIQuestData*                                        Quest;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDIObjectiveData*                                    FromObjective;                                           // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDIObjectiveData*                                    UntilObjective;                                          // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.QuestBoundaryAbandonmentSetup
	 * Size -> 0x0018
	 */
	struct FQuestBoundaryAbandonmentSetup
	{
	public:
		class UClass*                                              Handler;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              Detector;                                                // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              Notifier;                                                // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.QuestRecordEntry
	 * Size -> 0x0004
	 */
	struct FQuestRecordEntry
	{
	public:
		uint32_t                                                   Completed;                                               // 0x0000(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.QuestRecord
	 * Size -> 0x0008
	 */
	struct FQuestRecord
	{
	public:
		struct FQuestRecordEntry                                   Host;                                                    // 0x0000(0x0004) SaveGame, NoDestructor, NativeAccessSpecifierPublic
		struct FQuestRecordEntry                                   Client;                                                  // 0x0004(0x0004) SaveGame, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ExaminedQuestAndObjectives
	 * Size -> 0x0018
	 */
	struct FExaminedQuestAndObjectives
	{
	public:
		class UMissionData*                                        Mission;                                                 // 0x0000(0x0008) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      CompletedObjectiveIds;                                   // 0x0008(0x0010) ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ExaminedQuestsArray
	 * Size -> 0x0010
	 */
	struct FExaminedQuestsArray
	{
	public:
		TArray<struct FExaminedQuestAndObjectives>                 ExaminedQuests;                                          // 0x0000(0x0010) ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CosmeticEffectsSettings
	 * Size -> 0x0010
	 */
	struct FCosmeticEffectsSettings
	{
	public:
		class UCosmeticEffectsDefinition*                          CosmeticEffectType;                                      // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttachPointName;                                         // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CosmeticEffectSettingsList
	 * Size -> 0x0010
	 */
	struct FCosmeticEffectSettingsList
	{
	public:
		TArray<struct FCosmeticEffectsSettings>                    Effects;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RadioMessage
	 * Size -> 0x0008
	 */
	struct FRadioMessage
	{
	public:
		class UConversationDialogueTriggerDataAsset*               ConversationDialogueTrigger;                             // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ImpulseParams
	 * Size -> 0x0014
	 */
	struct FImpulseParams
	{
	public:
		struct FVector                                             Impulse;                                                 // 0x0000(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BoneName;                                                // 0x000C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RagdollRequestData
	 * Size -> 0x0018
	 */
	struct FRagdollRequestData
	{
	public:
		unsigned char                                              UnknownData_8Q1D[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FEventInstigator                                    Instigator;                                              // 0x0008(0x0010) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RagdollBodyState_LinearMotion
	 * Size -> 0x0010
	 */
	struct FRagdollBodyState_LinearMotion
	{
	public:
		int32_t                                                    BodyIndex;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 OffsetFromCentreOfMass;                                  // 0x0004(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RagdollReplicatedState
	 * Size -> 0x0038
	 */
	struct FRagdollReplicatedState
	{
	public:
		float                                                      ServerTime;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MWA_Position;                                            // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MWA_Velocity;                                            // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W409[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FRagdollBodyState_LinearMotion>              BodyStates_LinearMotion;                                 // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bHasLanded;                                              // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YWGO[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RangedWeaponAttributes
	 * Size -> 0x0B70
	 */
	struct FRangedWeaponAttributes
	{
	public:
		struct FAttributeTypeAndValue                              PowerLevelAttribute;                                     // 0x0000(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              DamageAttribute;                                         // 0x0070(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              ForceAttribute;                                          // 0x00E0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              CriticalChanceAttribute;                                 // 0x0150(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              CriticalDamageAttribute;                                 // 0x01C0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              DelayBetweenShotsAttribute;                              // 0x0230(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              MagazineAmmoCapacityAttribute;                           // 0x02A0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              MinDamageFalloffDistanceAttribute;                       // 0x0310(0x0070) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              MaxDamageFalloffDistanceAttribute;                       // 0x0380(0x0070) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              MinForceFalloffDistanceAttribute;                        // 0x03F0(0x0070) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              MaxForceFalloffDistanceAttribute;                        // 0x0460(0x0070) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              MinHorizontalRecoilAttribute;                            // 0x04D0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              MaxHorizontalRecoilAttribute;                            // 0x0540(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              MinVerticalRecoilAttribute;                              // 0x05B0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              MaxVerticalRecoilAttribute;                              // 0x0620(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              PartialReloadAttribute;                                  // 0x0690(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              FullReloadAttribute;                                     // 0x0700(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              SpreadMinAttribute;                                      // 0x0770(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              SpreadMaxAttribute;                                      // 0x07E0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              HandlingAttribute;                                       // 0x0850(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              AccuracyAttribute;                                       // 0x08C0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              CashValueAttribute;                                      // 0x0930(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              LevelMatchCashValueAttribute;                            // 0x09A0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              ADSTransitionTimeAttribute;                              // 0x0A10(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              ElementalBuildUpMultiplier;                              // 0x0A80(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              WeaponTypeBonusAttribute;                                // 0x0AF0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FAttributeTypeAndValue>                      AdditionalAttributes;                                    // 0x0B60(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RangedWeaponSettings
	 * Size -> 0x0008
	 */
	struct FRangedWeaponSettings
	{
	public:
		class FName                                                FireModeUniqueIdenfier;                                  // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AmmoConfigWithSupportedFireModes
	 * Size -> 0x0020
	 */
	struct FAmmoConfigWithSupportedFireModes
	{
	public:
		class UModularAmmoHandler*                                 AmmoHandler;                                             // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UModularReloadHandler*                               ReloadHandler;                                           // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class URangedWeaponFireMode*>                       FireModes;                                               // 0x0010(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.WeaponConfigurationInfo
	 * Size -> 0x0018
	 */
	struct FWeaponConfigurationInfo
	{
	public:
		class UModularAmmoHandler*                                 SelectedAmmoHandler;                                     // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UModularReloadHandler*                               SelectedReloadHandler;                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URangedWeaponFireMode*                               SelectedFireMode;                                        // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HitTargetTelemetryEventData
	 * Size -> 0x0040
	 */
	struct FHitTargetTelemetryEventData
	{
	public:
		struct FTelemetryActorID                                   ActorID;                                                 // 0x0000(0x0020) NativeAccessSpecifierPublic
		struct FVector                                             ImpactLocation;                                          // 0x0020(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LGS9[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ImpactID;                                                // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.InventoryCategoryRecipes
	 * Size -> 0x0010
	 */
	struct FInventoryCategoryRecipes
	{
	public:
		TArray<class UCraftingRecipe*>                             Recipes;                                                 // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.IdleBreakSettings
	 * Size -> 0x0050
	 */
	struct FIdleBreakSettings
	{
	public:
		struct FRandomNumberGenerator_Float                        DelayBeforeFirstIdleBreakInSequence;                     // 0x0000(0x0028) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FRandomNumberGenerator_Float                        DelayBeforeSubsequentBreakInSequence;                    // 0x0028(0x0028) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ContributionStream
	 * Size -> 0x00B8
	 */
	struct FContributionStream
	{
	public:
		unsigned char                                              UnknownData_942O[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CurrentValue;                                            // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      ProjectedValue;                                          // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      AverageContribution;                                     // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EContributionState                                         CurrentState;                                            // 0x002C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_K4JS[0x8B];                                  // 0x002D(0x008B) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PlayerReviveTrackingInfo
	 * Size -> 0x00F0
	 */
	struct FPlayerReviveTrackingInfo
	{
	public:
		class ADIPlayerCharacter*                                  DownedPlayer;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ADIPlayerState*                                      DownedState;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FContributionStream                                 ContributionStream;                                      // 0x0010(0x00B8) NativeAccessSpecifierPublic
		struct FGuid                                               DownedActionID;                                          // 0x00C8(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartTimestamp;                                          // 0x00D8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndTimestamp;                                            // 0x00DC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentTimestamp;                                        // 0x00E0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   ReviveKey;                                               // 0x00E4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMarkedForRemoval;                                       // 0x00E8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZXG6[0x7];                                   // 0x00E9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RosterIDData
	 * Size -> 0x0010
	 */
	struct FRosterIDData
	{
	public:
		struct FLinearColor                                        Color;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ScopedConditionWrapperArray
	 * Size -> 0x0010
	 */
	struct FScopedConditionWrapperArray
	{
	public:
		TArray<class UScopedConditionWrapper*>                     ScopedStates;                                            // 0x0000(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SpawningStageData
	 * Size -> 0x0038
	 */
	struct FSpawningStageData
	{
	public:
		bool                                                       bOverrideAgentSource;                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HD5B[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBaseAgentSource*                                    AgentSourceToUse;                                        // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideActorTarget;                                    // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SPYC[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              ActorTarget;                                             // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetRadius;                                            // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_86ZD[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAgentBehaviourDefinition*                           BehaviourDefinition;                                     // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EParticipantPriority                                       ParticipantPriority;                                     // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RXI8[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CuratedStageSpawnArchetype
	 * Size -> 0x0030
	 */
	struct FCuratedStageSpawnArchetype
	{
	public:
		class UEmergentSpawnableGroupObject*                       SpawnableObject;                                         // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameEvent*                                          GameEventPreSpawn;                                       // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameEvent*                                          GameEventPostSpawn;                                      // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideArchetypeAgentSource;                           // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DGSC[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBaseAgentSource*                                    ArchetypeAgentSourceToUse;                               // 0x0020(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EParticipantPriority                                       ArchetypeParticipantPriority;                            // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1RBH[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CuratedStageData
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	struct FCuratedStageData : public FSpawningStageData
	{
	public:
		TArray<struct FCuratedStageSpawnArchetype>                 ArchetypesToSpawn;                                       // 0x0038(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.EncounterStageSpawnArchetypes
	 * Size -> 0x0040
	 */
	struct FEncounterStageSpawnArchetypes
	{
	public:
		TArray<class UEmergentSpawnableGroupObject*>               SpawnableObjects;                                        // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    MaximumActiveAgents;                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E4E8[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGameEvent*                                          GameEventPreSpawn;                                       // 0x0018(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameEvent*                                          GameEventPostSpawn;                                      // 0x0020(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideArchetypeAgentSource;                           // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YJ9I[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBaseAgentSource*                                    ArchetypeAgentSourceToUse;                               // 0x0030(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EParticipantPriority                                       ArchetypeParticipantPriority;                            // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L92Y[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.EncounterStageData
	 * Size -> 0x0030 (FullSize[0x0068] - InheritedSize[0x0038])
	 */
	struct FEncounterStageData : public FSpawningStageData
	{
	public:
		struct FDataTableRowHandle                                 EncounterStageIntensityRowHandle;                        // 0x0038(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    MaximumAgentsEver;                                       // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaximumActiveAgents;                                     // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EArchetypeEvaluationOrder                                  EvaluationOrder;                                         // 0x0050(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BB5O[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FEncounterStageSpawnArchetypes>              ArchetypesToSpawn;                                       // 0x0058(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ShopItemData
	 * Size -> 0x0028
	 */
	struct FShopItemData
	{
	public:
		unsigned char                                              UnknownData_MNJH[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UItemLootTypeHandler*                                ItemData;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               Guid;                                                    // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H419[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PurchasedItemRecord
	 * Size -> 0x0020
	 */
	struct FPurchasedItemRecord
	{
	public:
		struct FSoftObjectPath                                     ItemArchetype;                                           // 0x0000(0x0018) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CountPurchased;                                          // 0x0018(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BMQ8[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PurchasedProceduralItemRecord
	 * Size -> 0x0058
	 */
	struct FPurchasedProceduralItemRecord
	{
	public:
		struct FSoftObjectPath                                     ItemArchetype;                                           // 0x0000(0x0018) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FProceduralGenerationContext                        ProceduralGenerationContext;                             // 0x0018(0x0038) SaveGame, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    CountPurchased;                                          // 0x0050(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G0DS[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SkillLootEntry
	 * Size -> 0x0050
	 */
	struct FSkillLootEntry
	{
	public:
		struct FFixedDataTableEditableRowHandle                    SkillUnlockEntitlementToGive;                            // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            ValidExpression;                                         // 0x0018(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SkillLootSettings
	 * Size -> 0x0010
	 */
	struct FSkillLootSettings
	{
	public:
		TArray<struct FSkillLootEntry>                             Skills;                                                  // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SkillLootDetails
	 * Size -> 0x0088
	 */
	struct FSkillLootDetails
	{
	public:
		struct FSkillLootSettings                                  CommonLootableSkills;                                    // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		TMap<class FName, struct FSkillLootSettings>               SkillSlotsConfigIDToLootableSkills;                      // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              SkillLootActorClassToSpawn[0x28];                        // 0x0060(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	};

	/**
	 * ScriptStruct DeadIsland.UnlockRequirements
	 * Size -> 0x0028
	 */
	struct FUnlockRequirements
	{
	public:
		TArray<class UUnlockRequirement*>                          Requirements;                                            // 0x0000(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WW4Q[0x18];                                  // 0x0010(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SkillSlotDefinition
	 * Size -> 0x0030
	 */
	struct FSkillSlotDefinition
	{
	public:
		struct FUnlockRequirements                                 UnlockRequirements;                                      // 0x0000(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bIsFixedSlot;                                            // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NHXZ[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SkillSlotDefinitionList
	 * Size -> 0x0010
	 */
	struct FSkillSlotDefinitionList
	{
	public:
		TArray<struct FSkillSlotDefinition>                        SkillSlotDefinitions;                                    // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SkillSlotCategoryUIOrderedSlot
	 * Size -> 0x0010
	 */
	struct FSkillSlotCategoryUIOrderedSlot
	{
	public:
		class USkillSlotSubCategoryDefinition*                     SubCategory;                                             // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Index;                                                   // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H2W5[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SkillSlotInstance
	 * Size -> 0x01B0
	 */
	struct FSkillSlotInstance
	{
	public:
		class USlottableSkillDefinition*                           CurrentlyAssignedSkill;                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkillSlotCategoryDefinition*                        SkillSlotCategoryDefinition;                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkillSlotSubCategoryDefinition*                     SkillSlotSubCategoryDefinition;                          // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USlottableSkillDefinition*                           DefaultAssignedSkill;                                    // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SkillSlotIndex;                                          // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HHSU[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FUnlockRequirements                                 UnlockRequirements;                                      // 0x0028(0x0028) ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MD99[0x160];                                 // 0x0050(0x0160) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SkillSlotSubCategoryInstance
	 * Size -> 0x0030
	 */
	struct FSkillSlotSubCategoryInstance
	{
	public:
		TArray<struct FSkillSlotInstance>                          SlotInstances;                                           // 0x0000(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class USkillSlotSubCategoryDefinition*                     SkillSubCategory;                                        // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JKLJ[0x18];                                  // 0x0018(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SkillSlotCategoryInstance
	 * Size -> 0x00E0
	 */
	struct FSkillSlotCategoryInstance
	{
	public:
		TMap<class USkillSlotSubCategoryDefinition*, struct FSkillSlotSubCategoryInstance> SubCategoryInstances;                                    // 0x0000(0x0050) ContainsInstancedReference, NativeAccessSpecifierPublic
		class USkillSlotCategoryDefinition*                        SkillCategoryDefinition;                                 // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FUnlockRequirements                                 UnlockRequirements;                                      // 0x0058(0x0028) Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_U9F3[0x60];                                  // 0x0080(0x0060) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SkillEffectGroup
	 * Size -> 0x0010
	 */
	struct FSkillEffectGroup
	{
	public:
		TArray<class USkillEffect*>                                Effects;                                                 // 0x0000(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SlottableSkillInstance
	 * Size -> 0x01D8
	 */
	struct FSlottableSkillInstance
	{
	public:
		unsigned char                                              UnknownData_FU9F[0xD0];                                  // 0x0000(0x00D0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USlottableSkillDefinition*                           SkillDefinition;                                         // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkillSlotCategoryDefinition*                        SkillCategory;                                           // 0x00D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FUnlockRequirements                                 UnlockRequirements;                                      // 0x00E0(0x0028) ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FSkillEffectGroup>                           SkillEffectsByLevel;                                     // 0x0108(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VLJ9[0xC0];                                  // 0x0118(0x00C0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ActiveSkillRecord
	 * Size -> 0x0018
	 */
	struct FActiveSkillRecord
	{
	public:
		class USkillSlotCategoryDefinition*                        Category;                                                // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Index;                                                   // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2GKR[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USlottableSkillDefinition*                           SkillDefinition;                                         // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ActiveSkillRecordCollection
	 * Size -> 0x0010
	 */
	struct FActiveSkillRecordCollection
	{
	public:
		TArray<struct FActiveSkillRecord>                          Records;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SkillSlotRecord
	 * Size -> 0x0018
	 */
	struct FSkillSlotRecord
	{
	public:
		class USkillSlotCategoryDefinition*                        Category;                                                // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkillSlotSubCategoryDefinition*                     SubCategory;                                             // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Index;                                                   // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K59I[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SkillSlotUnlocks
	 * Size -> 0x0018
	 */
	struct FSkillSlotUnlocks
	{
	public:
		class USkillSlotSubCategoryDefinition*                     SkillSubCategory;                                        // 0x0000(0x0008) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<unsigned char>                                      SlotIndexes;                                             // 0x0008(0x0010) ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SkillCategoryUnlocks
	 * Size -> 0x0028
	 */
	struct FSkillCategoryUnlocks
	{
	public:
		TArray<struct FSkillSlotUnlocks>                           SkillSlots;                                              // 0x0000(0x0010) ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
		TArray<class USlottableSkillDefinition*>                   Skills;                                                  // 0x0010(0x0010) ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
		bool                                                       bCategoryUnlocked;                                       // 0x0020(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KJIO[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SkillInstanceData
	 * Size -> 0x0010
	 */
	struct FSkillInstanceData
	{
	public:
		struct FGuid                                               PerkInstanceID;                                          // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SkillTreeMutuallyExclusiveTierList
	 * Size -> 0x0010
	 */
	struct FSkillTreeMutuallyExclusiveTierList
	{
	public:
		TArray<class USkillTreeTierGroup*>                         TierList;                                                // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SkillTreeTierRequirements
	 * Size -> 0x0020
	 */
	struct FSkillTreeTierRequirements
	{
	public:
		ESkillTreeTierRequirementMode                              RequirementMode;                                         // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableMinimumTotalSkills;                               // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q00C[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MinimumTotalSkills;                                      // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableMinimumParentTierSkills;                          // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WZ16[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MinimumParentTierSkills;                                 // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableMinimumNeighbourTierSkills;                       // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3PCR[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MinimumNeighbourTierSkills;                              // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableMinimumChildTierSkills;                           // 0x0018(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EWVG[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MinimumChildTierSkills;                                  // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SkillTreeTierLineConnectionRules
	 * Size -> 0x0008
	 */
	struct FSkillTreeTierLineConnectionRules
	{
	public:
		ESkillTreeLineConnectionType                               LineConnectionType;                                      // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bJoinParentLinesOnEntry;                                 // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XAJF[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      JoinOffsetY;                                             // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SkillSettings
	 * Size -> 0x0030
	 */
	struct FSkillSettings
	{
	public:
		bool                                                       bIsDefaultAssignedSkill;                                 // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DefaultAssignedSlotIndex;                                // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6D1Y[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FUnlockRequirements                                 UnlockRequirements;                                      // 0x0008(0x0028) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SingleAwarenessMapEntry
	 * Size -> 0x0018
	 */
	struct FSingleAwarenessMapEntry
	{
	public:
		class UBaseAwarenessCategory*                              Category;                                                // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class USpatialAwarenessTargetComponent*>            TargetComponents;                                        // 0x0008(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AwarenessMap
	 * Size -> 0x0010
	 */
	struct FAwarenessMap
	{
	public:
		TArray<struct FSingleAwarenessMapEntry>                    Mapping;                                                 // 0x0000(0x0010) ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SpeechSequenceContent
	 * Size -> 0x0040
	 */
	struct FSpeechSequenceContent
	{
	public:
		ECharacterEmotion                                          CharacterEmotion;                                        // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5X4C[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        BespokeMontage;                                          // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULevelSequence*                                      BespokeSequence;                                         // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UConversationDialogueTriggerDataAsset*               DialogueConversationTriggerDataAsset;                    // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLocalisedAudioChooser                              LocalisedDiaglogueFilePath;                              // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              DialogueSubtitle;                                        // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NextLineDelay;                                           // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PlayOnPlayerCharacter;                                   // 0x003C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LXQL[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ConditionalModifier
	 * Size -> 0x0078
	 */
	struct FConditionalModifier
	{
	public:
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0000(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageScale;                                             // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CooldownScale;                                           // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RechargeScale;                                           // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RK03[0x34];                                  // 0x0044(0x0034) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.StagedTexture
	 * Size -> 0x0010
	 */
	struct FStagedTexture
	{
	public:
		class UTexture2D*                                          Texture;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RequiredScore;                                           // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2SWJ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.StatefulActivtyLoopGenerator
	 * Size -> 0x001C
	 */
	struct FStatefulActivtyLoopGenerator
	{
	public:
		EStatefulActivityLoopMode                                  LoopMode;                                                // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EStatefulActivityContinuousLoopTimeoutMode                 TimeoutMode;                                             // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5IEY[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeoutDuration;                                         // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinTimeoutDuration;                                      // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxTimeoutDuration;                                      // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LoopCount;                                               // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinLoopCount;                                            // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxLoopCount;                                            // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.StatefulActivtySequenceOverlaps
	 * Size -> 0x000C
	 */
	struct FStatefulActivtySequenceOverlaps
	{
	public:
		float                                                      IntoSequenceOverlapTime;                                 // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LoopSequenceOverlapTime;                                 // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OutOfSequenceOverlapTime;                                // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.StatefulActivityGameEvents
	 * Size -> 0x0018
	 */
	struct FStatefulActivityGameEvents
	{
	public:
		class UGameEvent*                                          OnStateStarted;                                          // 0x0000(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameEventState*                                     WhilstStateActive;                                       // 0x0008(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameEvent*                                          OnStateEnded;                                            // 0x0010(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.StatefulActivityAnimation
	 * Size -> 0x00C8
	 */
	struct FStatefulActivityAnimation
	{
	public:
		struct FKnowledgeBaseExpression                            StateRequirements;                                       // 0x0000(0x0038) Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAnimSetCollectionItem                              ActivityAnimSet;                                         // 0x0038(0x0030) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UEmotion*                                            StateEmotion;                                            // 0x0068(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELookAtType                                                LookAtType;                                              // 0x0070(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GSO9[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStatefulActivtyLoopGenerator                       LoopSettings;                                            // 0x0074(0x001C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bDisallowQuestDelivery;                                  // 0x0090(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QMNE[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStatefulActivtySequenceOverlaps                    SequenceOverlapSettings;                                 // 0x0094(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		EStatefulActivityExitState                                 ExitState;                                               // 0x00A0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LC76[0x3];                                   // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                StateName;                                               // 0x00A4(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LSC0[0x4];                                   // 0x00AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStatefulActivityGameEvents                         GameEvents;                                              // 0x00B0(0x0018) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameSequenceActorGameEvents
	 * Size -> 0x0010
	 */
	struct FGameSequenceActorGameEvents
	{
	public:
		class UGameEvent*                                          OnStateStarted;                                          // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameEvent*                                          OnStateEnded;                                            // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameSequenceActorState
	 * Size -> 0x0078
	 */
	struct FGameSequenceActorState
	{
	public:
		struct FKnowledgeBaseExpression                            StateRequirements;                                       // 0x0000(0x0038) Edit, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                StateName;                                               // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULevelSequence*                                      LevelSequence;                                           // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfLoops;                                           // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoopsIndefinitely;                                      // 0x004C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3YSX[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayRate;                                                // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SequenceOverlapTime;                                     // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBindPlayer;                                             // 0x0058(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8QTU[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameSequenceActorGameEvents                        GameEvents;                                              // 0x0060(0x0010) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class FName                                                NextState;                                               // 0x0070(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimStateInfo
	 * Size -> 0x0018
	 */
	struct FAnimStateInfo
	{
	public:
		class FName                                                StateName;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        AnimSetNames;                                            // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.NPCAnimStateInfo
	 * Size -> 0x0008 (FullSize[0x0020] - InheritedSize[0x0018])
	 */
	struct FNPCAnimStateInfo : public FAnimStateInfo
	{
	public:
		ELocomotionState                                           LocomotionState;                                         // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_47OJ[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimStateMachineInfo
	 * Size -> 0x0030
	 */
	struct FAnimStateMachineInfo
	{
	public:
		class FName                                                MachineName;                                             // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNPCActor;                                               // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_75VW[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAnimStateInfo>                              StatesCollections;                                       // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FNPCAnimStateInfo>                           NPCStatesCollections;                                    // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MedkitStateResetData
	 * Size -> 0x0004
	 */
	struct FMedkitStateResetData
	{
	public:
		int32_t                                                    MedkitCount;                                             // 0x0000(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FuryStateResetData
	 * Size -> 0x0004
	 */
	struct FFuryStateResetData
	{
	public:
		float                                                      FuryAmount;                                              // 0x0000(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MeleeWeaponItemStateResetData
	 * Size -> 0x0058
	 */
	struct FMeleeWeaponItemStateResetData
	{
	public:
		struct FSoftObjectPath                                     ItemArchetype;                                           // 0x0000(0x0018) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FProceduralGenerationContext                        ProceduralGenerationContext;                             // 0x0018(0x0038) SaveGame, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Durability;                                              // 0x0050(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C4FJ[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RangedWeaponItemStateResetData
	 * Size -> 0x0058
	 */
	struct FRangedWeaponItemStateResetData
	{
	public:
		struct FSoftObjectPath                                     ItemArchetype;                                           // 0x0000(0x0018) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FProceduralGenerationContext                        ProceduralGenerationContext;                             // 0x0018(0x0038) SaveGame, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    ClipAmmo;                                                // 0x0050(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G0TS[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AmmoStateResetData
	 * Size -> 0x0020
	 */
	struct FAmmoStateResetData
	{
	public:
		struct FSoftObjectPath                                     Archetype;                                               // 0x0000(0x0018) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AmmoCount;                                               // 0x0018(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_134K[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.StatGatherStatComponentEntry
	 * Size -> 0x0020
	 */
	struct FStatGatherStatComponentEntry
	{
	public:
		class FString                                              StatComponentStat;                                       // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      StatComponentContexts;                                   // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.StatusEffectTypeData
	 * Size -> 0x0010
	 */
	struct FStatusEffectTypeData
	{
	public:
		int32_t                                                    InstanceCount;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_74XW[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStatusEffectTypeState*                              State;                                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.StatusEffectReplicatedFloat
	 * Size -> 0x0008
	 */
	struct FStatusEffectReplicatedFloat
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Counter;                                                 // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZCF7[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.StickyReticleRequest
	 * Size -> 0x0008
	 */
	struct FStickyReticleRequest
	{
	public:
		class UStickyReticleSettings*                              Settings;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.StickyReticleTargetInfo
	 * Size -> 0x006C
	 */
	struct FStickyReticleTargetInfo
	{
	public:
		struct FTargetPointInfo                                    TargetPointInfo;                                         // 0x0000(0x0050) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NormalizedScore;                                         // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FMHO[0x18];                                  // 0x0054(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.StickyReticleMagnetismSettings
	 * Size -> 0x0018
	 */
	struct FStickyReticleMagnetismSettings
	{
	public:
		float                                                      MagnetismStrengthMultiplier;                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KHKK[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         MagnetismStrengthMultiplierByDistance;                   // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MagnetismStrengthMultiplierMaxDistance;                  // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2D06[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.StickyReticleCenteringTargetSettings
	 * Size -> 0x0008
	 */
	struct FStickyReticleCenteringTargetSettings
	{
	public:
		class FName                                                BoneOrSocketName;                                        // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.StickyReticleCenteringSettings
	 * Size -> 0x00C8
	 */
	struct FStickyReticleCenteringSettings
	{
	public:
		float                                                      CenteringStrengthMultiplier;                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_16OD[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTargetSelectionSettings                            ContextSelectionSettings;                                // 0x0008(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		class FString                                              OptionalTargetContextConfigSetName;                      // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FStickyReticleCenteringTargetSettings>       CenteringTargetSettings;                                 // 0x0078(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bLimitRangeOfFallbackCentering;                          // 0x0088(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1EPW[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxDistToUseFallbackCentering;                           // 0x008C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseActorLocIfNoCenteringFallback;                       // 0x0090(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DCBK[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDistAllowedToUseActorLoc;                             // 0x0094(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         CenteringStrengthMultiplierCurve;                        // 0x0098(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CenteringStrengthMultiplierMaxDistance;                  // 0x00A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDynamicContextScaleMultipliers                     DynamicContextScaleMultipliers;                          // 0x00A4(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BMJU[0x4];                                   // 0x00C4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.StickyReticleTargetInfoGeneratorElement
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FStickyReticleTargetInfoGeneratorElement : public FConditionalListElement
	{
	public:
		class UStickyReticleTargetInfoGenerator*                   StickyReticleTargetInfoGenerator;                        // 0x0028(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UITextSubstitutionEntryShared
	 * Size -> 0x0018
	 */
	struct FUITextSubstitutionEntryShared
	{
	public:
		class FString                                              Substring;                                               // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              HandlerClass;                                            // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UITextSubstitutionEntry
	 * Size -> 0x0030 (FullSize[0x0048] - InheritedSize[0x0018])
	 */
	struct FUITextSubstitutionEntry : public FUITextSubstitutionEntryShared
	{
	public:
		class UTextSubstitutionSymbolInfo*                         SymbolInfo;                                              // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FrameLabel;                                              // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WidthOverride;                                           // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HeightOverride;                                          // 0x0034(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScaleOverride;                                           // 0x0038(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    XOffsetOverride;                                         // 0x003C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    YOffsetOverride;                                         // 0x0040(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E6T1[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.UITextSubstitutionIconData
	 * Size -> 0x0020 (FullSize[0x0038] - InheritedSize[0x0018])
	 */
	struct FUITextSubstitutionIconData : public FUITextSubstitutionEntryShared
	{
	public:
		class UIconDisplayDataGFx*                                 IconData;                                                // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Width;                                                   // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Height;                                                  // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    XOffset;                                                 // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    YOffset;                                                 // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LAPW[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ThrowingWeaponAttributes
	 * Size -> 0x03F0
	 */
	struct FThrowingWeaponAttributes
	{
	public:
		struct FAttributeTypeAndValue                              PowerLevelAttribute;                                     // 0x0000(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              DamageAttribute;                                         // 0x0070(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              ForceAttribute;                                          // 0x00E0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              CriticalChanceAttribute;                                 // 0x0150(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              CriticalDamageAttribute;                                 // 0x01C0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              StaminaCostPerAttackAttribute;                           // 0x0230(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              LimbDamageMultiplierAttribute;                           // 0x02A0(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              ElementalBuildUpMultiplier;                              // 0x0310(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAttributeTypeAndValue                              WeaponTypeBonusAttribute;                                // 0x0380(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CooldownInfo
	 * Size -> 0x000C
	 */
	struct FCooldownInfo
	{
	public:
		ECooldownState                                             CurrentState;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_235V[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BeginTimeStamp;                                          // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndTimestamp;                                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.IconAddParams
	 * Size -> 0x0030
	 */
	struct FIconAddParams
	{
	public:
		class FScriptDelegate                                      OnPreInit;                                               // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		class FScriptDelegate                                      TransformWorldPositionCallback;                          // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIsWorldMapIcon;                                         // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L605[0xF];                                   // 0x0021(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.WaypointAddParams
	 * Size -> 0x00C0
	 */
	struct FWaypointAddParams
	{
	public:
		unsigned char                                              UnknownData_15OA[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FIconAddParams                                      IconAddParams;                                           // 0x0010(0x0030) Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_665P[0x18];                                  // 0x0040(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UIconMetadata*>                               MetaData;                                                // 0x0058(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TQLE[0x58];                                  // 0x0068(0x0058) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.TraversalMetricsRangeSet
	 * Size -> 0x0050
	 */
	struct FTraversalMetricsRangeSet
	{
	public:
		struct FFloatRange                                         AscentRange;                                             // 0x0000(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatRange                                         DescentRange;                                            // 0x0010(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatRange                                         ObstacleWidthRange;                                      // 0x0020(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatRange                                         HeightClearanceRange;                                    // 0x0030(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatRange                                         DistanceRange;                                           // 0x0040(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.TraversalNavLinkCategory
	 * Size -> 0x0058
	 */
	struct FTraversalNavLinkCategory
	{
	public:
		struct FTraversalMetricsRangeSet                           Ranges;                                                  // 0x0000(0x0050) Edit, NoDestructor, NativeAccessSpecifierPublic
		class UClass*                                              AreaClass;                                               // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.TutorialEntry
	 * Size -> 0x0080
	 */
	struct FTutorialEntry
	{
	public:
		class FText                                                TutorialHeaderText;                                      // 0x0000(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                TutorialBodyText;                                        // 0x0018(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                ActionCaption;                                           // 0x0030(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UInputMapperAction*                                  ActionOverride;                                          // 0x0048(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShowDelayOverride;                                       // 0x0050(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMenuTutorialLocation                                      Location;                                                // 0x0054(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P4QQ[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTutorialFlowConditionBase*                          Condition;                                               // 0x0058(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UTutorialFlowActionBase*>                     TutorialActions;                                         // 0x0060(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UTutorialFlowActionBase*>                     PromptPressedActions;                                    // 0x0070(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.TutorialGroup
	 * Size -> 0x0090
	 */
	struct FTutorialGroup
	{
	public:
		class FName                                                NameID;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                GroupName;                                               // 0x0008(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                GroupDescription;                                        // 0x0020(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class UTutorialTextTip*>                            TextTipTutorials;                                        // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            Expression;                                              // 0x0048(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9C5K[0x10];                                  // 0x0080(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.TutorialState
	 * Size -> 0x0008
	 */
	struct FTutorialState
	{
	public:
		bool                                                       bShown;                                                  // 0x0000(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J88Y[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.TutorialTextTipConditionalMessage
	 * Size -> 0x0050
	 */
	struct FTutorialTextTipConditionalMessage
	{
	public:
		struct FKnowledgeBaseExpression                            Condition;                                               // 0x0000(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Message;                                                 // 0x0038(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UIChallengeCategoryDataEntry
	 * Size -> 0x0060
	 */
	struct FUIChallengeCategoryDataEntry
	{
	public:
		class FName                                                CategoryName;                                            // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0008(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0020(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FString                                              PopupBackgroundFrame;                                    // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     InfoPaneImage;                                           // 0x0048(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CodexCharacterVariantData
	 * Size -> 0x0020
	 */
	struct FCodexCharacterVariantData
	{
	public:
		struct FSoftObjectPath                                     Mesh;                                                    // 0x0000(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UIngredientSourceData*                               IngredientsSource;                                       // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UIChallengeLink
	 * Size -> 0x0020
	 */
	struct FUIChallengeLink
	{
	public:
		struct FFixedDataTableEditableRowHandle                    Challenge;                                               // 0x0000(0x0018) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Tier;                                                    // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E6GL[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.UICodexEntryCharacterSnippetData
	 * Size -> 0x0050
	 */
	struct FUICodexEntryCharacterSnippetData
	{
	public:
		class FText                                                Name;                                                    // 0x0000(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                Content;                                                 // 0x0018(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FUIChallengeLink                                    ChallengeData;                                           // 0x0030(0x0020) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UICodexGroup
	 * Size -> 0x0030
	 */
	struct FUICodexGroup
	{
	public:
		class FName                                                GroupId;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                GroupName;                                               // 0x0008(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class UUICodexEntryBase*>                           CodexEntries;                                            // 0x0020(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ConditionalIconReadOnlyData
	 * Size -> 0x0020
	 */
	struct FConditionalIconReadOnlyData
	{
	public:
		EConditionalIconDataType                                   Type;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8YSK[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              InWorldIcon;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UIconDisplayData*                                    IconData;                                                // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DynamicIconID;                                           // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ConditionalIcon
	 * Size -> 0x0088
	 */
	struct FConditionalIcon
	{
	public:
		class FName                                                LinkedMetadataID;                                        // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FScopedKnowledgeBaseExpressionListener              EnableExpressionListener;                                // 0x0008(0x0060) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FConditionalIconReadOnlyData                        ReadOnlyData;                                            // 0x0068(0x0020) Edit, NoDestructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.IconMetadataList
	 * Size -> 0x0010
	 */
	struct FIconMetadataList
	{
	public:
		TArray<class UIconMetadata*>                               MetadataList;                                            // 0x0000(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UIIconSelection
	 * Size -> 0x0010
	 */
	struct FUIIconSelection
	{
	public:
		class UClass*                                              InWorldIcon;                                             // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UIconDisplayData*                                    IconData;                                                // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UIModuleMenuInstanceDecoratorEntry
	 * Size -> 0x0010
	 */
	struct FUIModuleMenuInstanceDecoratorEntry
	{
	public:
		class UClass*                                              LogicClass;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUIModuleDecoratorMenuInstanceBase*                  Decorator;                                               // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UIModuleLogicGroups
	 * Size -> 0x0010
	 */
	struct FUIModuleLogicGroups
	{
	public:
		TArray<class UUIModuleLogicGroup*>                         Groups;                                                  // 0x0000(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UIModuleMenuScreenDecoratorEntry
	 * Size -> 0x0010
	 */
	struct FUIModuleMenuScreenDecoratorEntry
	{
	public:
		class UClass*                                              LogicClass;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUIModuleDecoratorMenuScreenBase*                    Decorator;                                               // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UINetworkLagPingParams
	 * Size -> 0x0004
	 */
	struct FUINetworkLagPingParams
	{
	public:
		int32_t                                                    PingThreshold;                                           // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UIPlayerStatStatsComponentEntry
	 * Size -> 0x0020
	 */
	struct FUIPlayerStatStatsComponentEntry
	{
	public:
		class FString                                              Stat;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      Contexts;                                                // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UIStatGroup
	 * Size -> 0x0028
	 */
	struct FUIStatGroup
	{
	public:
		class FText                                                GroupDisplayName;                                        // 0x0000(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class UUIPlayerStatBase*>                           Stats;                                                   // 0x0018(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UIPlayerStatHighestStatEntry
	 * Size -> 0x0028
	 */
	struct FUIPlayerStatHighestStatEntry
	{
	public:
		struct FUIPlayerStatStatsComponentEntry                    Stat;                                                    // 0x0000(0x0020) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UUIPlayerStatStringPickerBase*                       StringPicker;                                            // 0x0020(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HordeWeaponRewardInfo
	 * Size -> 0x0020
	 */
	struct FHordeWeaponRewardInfo
	{
	public:
		EItemRarity                                                RarityOverride;                                          // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NLDE[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULootGroupObject*                                    LootGroup;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAmmo;                                                 // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E5A8[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AmmoCount;                                               // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerController*                                   PlayerController;                                        // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.BaseSlotData
	 * Size -> 0x0010
	 */
	struct FBaseSlotData
	{
	public:
		TArray<class FString>                                      ExpectedSlotStrings;                                     // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.VoiceCommandWaypointFilterTypeData
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FVoiceCommandWaypointFilterTypeData : public FBaseSlotData
	{	};

	/**
	 * ScriptStruct DeadIsland.VoiceCommandWaypointDestinationTypeData
	 * Size -> 0x0030 (FullSize[0x0040] - InheritedSize[0x0010])
	 */
	struct FVoiceCommandWaypointDestinationTypeData : public FBaseSlotData
	{
	public:
		class FText                                                ErrorMessage;                                            // 0x0010(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                SuccessMessage;                                          // 0x0028(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.VoiceCommandGoadFilterTypeData
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FVoiceCommandGoadFilterTypeData : public FBaseSlotData
	{	};

	/**
	 * ScriptStruct DeadIsland.VoiceCommandGoadTargetTypeData
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FVoiceCommandGoadTargetTypeData : public FBaseSlotData
	{	};

	/**
	 * ScriptStruct DeadIsland.VoiceCommandWeaponChangeTypeData
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FVoiceCommandWeaponChangeTypeData : public FBaseSlotData
	{	};

	/**
	 * ScriptStruct DeadIsland.VoiceCommandWeaponDamageTypeData
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FVoiceCommandWeaponDamageTypeData : public FBaseSlotData
	{	};

	/**
	 * ScriptStruct DeadIsland.VoiceCommandWeaponProfileTypeData
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FVoiceCommandWeaponProfileTypeData : public FBaseSlotData
	{	};

	/**
	 * ScriptStruct DeadIsland.VoiceCommandWeaponTypeFilterTypeData
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FVoiceCommandWeaponTypeFilterTypeData : public FBaseSlotData
	{	};

	/**
	 * ScriptStruct DeadIsland.ConditionalWaypointType
	 * Size -> 0x0078
	 */
	struct FConditionalWaypointType
	{
	public:
		struct FScopedKnowledgeBaseExpressionListener              EnableExpressionListener;                                // 0x0000(0x0060) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FFixedDataTableEditableRowHandle                    WaypointType;                                            // 0x0060(0x0018) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.WaypointActorOrLocation
	 * Size -> 0x0050
	 */
	struct FWaypointActorOrLocation
	{
	public:
		unsigned char                                              Actor[0x28];                                             // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FVector                                             Location;                                                // 0x0028(0x000C) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P8SW[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TargetMapURL;                                            // 0x0038(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasValidData;                                           // 0x0048(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BB0C[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.WeaponModConfigData
	 * Size -> 0x0070
	 */
	struct FWeaponModConfigData
	{
	public:
		unsigned char                                              WeaponModType[0x28];                                     // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		TArray<struct FKnowledgeBaseValueSelector>                 FactsSetWhenHeld;                                        // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioEvent;                                              // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UPerkDefinition*>                             PerkDefinitions;                                         // 0x0040(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class UImpactRequestModifier*>                      ImpactRequestModifiers;                                  // 0x0050(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FAccumulatingEffectTypeAndValue>             OnHitAccumulatingEffects;                                // 0x0060(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UpdateHandVisibilityRequest
	 * Size -> 0x000C
	 */
	struct FUpdateHandVisibilityRequest
	{
	public:
		bool                                                       bIsVisible;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H3KH[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Reason;                                                  // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UpdateHandVisibilityRequestArray
	 * Size -> 0x0010
	 */
	struct FUpdateHandVisibilityRequestArray
	{
	public:
		TArray<struct FUpdateHandVisibilityRequest>                HandVisibilityRequests;                                  // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttachedActorItemStruct
	 * Size -> 0x0030
	 */
	struct FAttachedActorItemStruct
	{
	public:
		class FName                                                SocketName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSetData*                                        ActorAssetData;                                          // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AssetSetID;                                              // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F77E[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     LastResolvedPath;                                        // 0x0018(0x0018) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DSDamageInfo
	 * Size -> 0x0010
	 */
	struct FDSDamageInfo
	{
	public:
		unsigned char                                              UnknownData_XKQ9[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AmmoInfo
	 * Size -> 0x000C
	 */
	struct FAmmoInfo
	{
	public:
		int32_t                                                    LocalAmmoCount;                                          // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LocalAmmoCapacity;                                       // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ReserveAmmoCount;                                        // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.UIDelegateOnActorJustDamagedData
	 * Size -> 0x0060
	 */
	struct FUIDelegateOnActorJustDamagedData
	{
	public:
		unsigned char                                              UnknownData_D6XU[0x60];                                  // 0x0000(0x0060) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AbandonmentCountdownData
	 * Size -> 0x000C
	 */
	struct FAbandonmentCountdownData
	{
	public:
		float                                                      CountdownStartTimeSeconds;                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CountdownEndTimeSeconds;                                 // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHardAbandon;                                            // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O1VX[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizedWorldNotifyEventParams
	 * Size -> 0x0008
	 */
	struct FPhysicalizedWorldNotifyEventParams
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizedWorldNotifyStateParams
	 * Size -> 0x0008
	 */
	struct FPhysicalizedWorldNotifyStateParams
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SpentObject
	 * Size -> 0x0018
	 */
	struct FSpentObject
	{
	public:
		class APawn*                                               User;                                                    // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPickupableComponent*                                PickupComponent;                                         // 0x0008(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPersistentItem;                                         // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_491V[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CompassBarIconUpdateParams
	 * Size -> 0x0030
	 */
	struct FCompassBarIconUpdateParams
	{
	public:
		unsigned char                                              UnknownData_N2RB[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_OwnerContributedToEffect
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_OwnerContributedToEffect : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_BQH6[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ContributionValues
	 * Size -> 0x0008
	 */
	struct FContributionValues
	{
	public:
		float                                                      TotalContribution;                                       // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FinalContribution;                                       // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ActorMutatorViewParams
	 * Size -> 0x0020
	 */
	struct FActorMutatorViewParams
	{
	public:
		unsigned char                                              UnknownData_10S0[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RequestActorSpawnProjectileParams
	 * Size -> 0x0110
	 */
	struct FRequestActorSpawnProjectileParams
	{
	public:
		struct FEventInstigator                                    Instigator;                                              // 0x0000(0x0010) NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             Origin;                                                  // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Direction;                                               // 0x001C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpreadHalfConeInDegrees;                                 // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RandomSeed;                                              // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAtMinSpread;                                          // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1PB4[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTargetPointInfo                                    TargetPointInfo;                                         // 0x0034(0x0050) NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IPPK[0xC];                                   // 0x0084(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          RequesterCameraTransform;                                // 0x0090(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTransform                                          CosmeticProjectileTransform;                             // 0x00C0(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bUsePrediction;                                          // 0x00F0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OPPO[0x7];                                   // 0x00F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            PredictionIDs;                                           // 0x00F8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7MVS[0x8];                                   // 0x0108(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AIAimTarget
	 * Size -> 0x0038
	 */
	struct FAIAimTarget
	{
	public:
		unsigned char                                              UnknownData_08NA[0x38];                                  // 0x0000(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AIMeleeTargetRequestImpactBlockParams
	 * Size -> 0x000C
	 */
	struct FAIMeleeTargetRequestImpactBlockParams
	{
	public:
		float                                                      PerfectBlockScalar;                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWasImpactBlocked;                                       // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWasPerfectBlock;                                        // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPerfectAbilityImmunity;                                 // 0x0006(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7RSM[0x1];                                   // 0x0007(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayerBlockActionElapsedTime;                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AIMovementState
	 * Size -> 0x0020
	 */
	struct FAIMovementState
	{
	public:
		struct FVector                                             TargetPosition;                                          // 0x0000(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetDirection;                                         // 0x000C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DesiredCurrentSpeed;                                     // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetSpeed;                                             // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AmmoUpdateInfo
	 * Size -> 0x0008
	 */
	struct FAmmoUpdateInfo
	{
	public:
		int32_t                                                    PredictionKey;                                           // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AmmoCount;                                               // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimatedHitReactMontageValidationSettings
	 * Size -> 0x0028
	 */
	struct FAnimatedHitReactMontageValidationSettings
	{
	public:
		EValidationRequirement                                     RootMotionRequirement;                                   // 0x0000(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I5OB[0x3];                                   // 0x0001(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		EValidationRequirement                                     AdditiveRequirement;                                     // 0x0004(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3YZM[0x3];                                   // 0x0005(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<class FName>                                        AllowedSlots;                                            // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              DebugCallerName;                                         // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimationSlaveLocomotionState
	 * Size -> 0x0028 (FullSize[0x00B0] - InheritedSize[0x0088])
	 */
	struct FAnimationSlaveLocomotionState : public FSharedLocomotionState
	{
	public:
		struct FVector                                             Location;                                                // 0x0088(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Direction;                                               // 0x0094(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELocomotionVolatileState                                   VolatileState;                                           // 0x00A0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PKX1[0x3];                                   // 0x00A1(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FVector                                             StrafeDirection;                                         // 0x00A4(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimationSlaveFacialState
	 * Size -> 0x0010
	 */
	struct FAnimationSlaveFacialState
	{
	public:
		class UEmotion*                                            Emotion;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MouthAdditiveHorizontal;                                 // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MouthAdditiveVertical;                                   // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimNode_AnimSetBlendSpacePlayer
	 * Size -> 0x00C8 (FullSize[0x00F8] - InheritedSize[0x0030])
	 */
	struct FAnimNode_AnimSetBlendSpacePlayer : public FAnimNode_AssetPlayerBase
	{
	public:
		float                                                      X;                                                       // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Y;                                                       // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Z;                                                       // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayRate;                                                // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoop;                                                   // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KFZ0[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StartPosition;                                           // 0x0044(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSet_Base*                                       AnimSet;                                                 // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bResetPlayTimeWhenBlendSpaceChanges;                     // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_42T6[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ResolveRemainingTime;                                    // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBlendFilter                                        BlendFilter;                                             // 0x0058(0x0078) Protected, NativeAccessSpecifierProtected
		TArray<struct FBlendSampleData>                            BlendSampleDataCache;                                    // 0x00D0(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_MXOO[0x18];                                  // 0x00E0(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimNode_AnimSetSequencePlayer
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	struct FAnimNode_AnimSetSequencePlayer : public FAnimNode_AssetPlayerBase
	{
	public:
		bool                                                       bLoopAnimation;                                          // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IXYC[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayRate;                                                // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartPosition;                                           // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResolveRemainingTime;                                    // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSet_Base*                                       AnimSet;                                                 // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   Sequence;                                                // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_20KI[0x18];                                  // 0x0050(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ChainedLookAtInput
	 * Size -> 0x0010
	 */
	struct FChainedLookAtInput
	{
	public:
		float                                                      Alpha;                                                   // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LookAtLocation;                                          // 0x0004(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ChainedLookAtInputArray
	 * Size -> 0x0010
	 */
	struct FChainedLookAtInputArray
	{
	public:
		TArray<struct FChainedLookAtInput>                         Inputs;                                                  // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimNode_ChainedLookAt
	 * Size -> 0x0030 (FullSize[0x0040] - InheritedSize[0x0010])
	 */
	struct FAnimNode_ChainedLookAt : public FAnimNode_Base
	{
	public:
		struct FComponentSpacePoseLink                             ComponentPose;                                           // 0x0010(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FAnimNode_LookAt>                            LookAts;                                                 // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FChainedLookAtInputArray                            LookAtInputs;                                            // 0x0030(0x0010) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.BoneClamp
	 * Size -> 0x002C
	 */
	struct FBoneClamp
	{
	public:
		struct FBoneReference                                      BoneToModify;                                            // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            MinRotation;                                             // 0x0010(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            MaxRotation;                                             // 0x001C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		EBoneControlSpace                                          RotationSpace;                                           // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7BI9[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimNode_ClampBoneTransform
	 * Size -> 0x0010 (FullSize[0x00D8] - InheritedSize[0x00C8])
	 */
	struct FAnimNode_ClampBoneTransform : public FAnimNode_SkeletalControlBase
	{
	public:
		TArray<struct FBoneClamp>                                  BonesToClamp;                                            // 0x00C8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AnimNode_CopyMultipleBones
	 * Size -> 0x0028 (FullSize[0x00F0] - InheritedSize[0x00C8])
	 */
	struct FAnimNode_CopyMultipleBones : public FAnimNode_SkeletalControlBase
	{
	public:
		TArray<struct FBoneReference>                              SourceBones;                                             // 0x00C8(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FBoneReference>                              TargetBones;                                             // 0x00D8(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bCopyTranslation;                                        // 0x00E8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCopyRotation;                                           // 0x00E9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCopyScale;                                              // 0x00EA(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBoneControlSpace                                          ControlSpace;                                            // 0x00EB(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0SD2[0x4];                                   // 0x00EC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimNode_FPCameraRotation
	 * Size -> 0x0040 (FullSize[0x0108] - InheritedSize[0x00C8])
	 */
	struct FAnimNode_FPCameraRotation : public FAnimNode_SkeletalControlBase
	{
	public:
		struct FBoneReference                                      CameraBone;                                              // 0x00C8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      EndSpineBone;                                            // 0x00D8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      StartSpineBone;                                          // 0x00E8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            AimOffsetRotator;                                        // 0x00F8(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6721[0x4];                                   // 0x0104(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimNode_NPCLookAt
	 * Size -> 0x0120 (FullSize[0x01E8] - InheritedSize[0x00C8])
	 */
	struct FAnimNode_NPCLookAt : public FAnimNode_SkeletalControlBase
	{
	public:
		unsigned char                                              UnknownData_I768[0x120];                                 // 0x00C8(0x0120) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_AnimNotify
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_AnimNotify : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_535B[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AnimSetGroupState
	 * Size -> 0x0058
	 */
	struct FAnimSetGroupState
	{
	public:
		unsigned char                                              UnknownData_8HKV[0x58];                                  // 0x0000(0x0058) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.NotifyDelegateEntry
	 * Size -> 0x0020
	 */
	struct FNotifyDelegateEntry
	{
	public:
		unsigned char                                              UnknownData_NKVA[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ArchetypeConfig_AmbushDoor
	 * Size -> 0x0008
	 */
	struct FArchetypeConfig_AmbushDoor
	{
	public:
		float                                                      DoorOpenDelay;                                           // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DoorOpenDuration;                                        // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ArmSwayLayerResult
	 * Size -> 0x000C
	 */
	struct FArmSwayLayerResult
	{
	public:
		float                                                      FinalValue;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T5D7[0x8];                                   // 0x0004(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.UniqueAttachmentPerksStorage
	 * Size -> 0x0020
	 */
	struct FUniqueAttachmentPerksStorage
	{
	public:
		struct FKnowledgeBaseFactKey                               AttachedFact;                                            // 0x0000(0x000C) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L7NL[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FGuid>                                       PerkGuids;                                               // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AttackLocation
	 * Size -> 0x0084
	 */
	struct FAttackLocation
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             TargetLocation;                                          // 0x000C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             TargetRootLocation;                                      // 0x0018(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             ClosestAdjacentLocation;                                 // 0x0024(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             TargetVelocity;                                          // 0x0030(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      TargetCapsuleRadius;                                     // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bAlignedWithTarget;                                      // 0x0040(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_H4UU[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ImpactDistance;                                          // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2L9R[0x3C];                                  // 0x0048(0x003C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AttackMontageMetrics
	 * Size -> 0x0038
	 */
	struct FAttackMontageMetrics
	{
	public:
		unsigned char                                              UnknownData_XQDX[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAIMeleeCommitmentAndHitDistanceConfig              HitDistanceConfig;                                       // 0x0010(0x0018) NoDestructor, NativeAccessSpecifierPrivate
		float                                                      OverrideSuccessDistance;                                 // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      LeadTimeWithFixedWindUp;                                 // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      LeadTimeWithoutFixedWindUp;                              // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9ER5[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AutoAimTargetRequestParams
	 * Size -> 0x0088
	 */
	struct FAutoAimTargetRequestParams
	{
	public:
		struct FVector                                             FromPos;                                                 // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ForwardDir;                                              // 0x000C(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             QueryOriginUpDir;                                        // 0x0018(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SFWG[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTargetSelectionSettings                            TargetSelectionSettings;                                 // 0x0028(0x0060) Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.BodyPartBoneDefinitionRow
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FBodyPartBoneDefinitionRow : public FTableRowBase
	{
	public:
		class FName                                                PartDefinitionID;                                        // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        BoneNames;                                               // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.BaseCampaignTelemetryEvent
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FBaseCampaignTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              CampaignFileName;                                        // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CampaignName;                                            // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AllCampaignMissionsCompletedTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FAllCampaignMissionsCompletedTelemetryEvent : public FBaseCampaignTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.AllMainCampaignMissionsCompletedTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FAllMainCampaignMissionsCompletedTelemetryEvent : public FBaseCampaignTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.CampaignStartedTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FCampaignStartedTelemetryEvent : public FBaseCampaignTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.CampaignTelemetryHandler
	 * Size -> 0x0028
	 */
	struct FCampaignTelemetryHandler
	{
	public:
		class UQuestlineUIEntity*                                  QuestlineUIEntity;                                       // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              CampaignFileName;                                        // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              CampaignName;                                            // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.CensorshipControllerDefinition
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FCensorshipControllerDefinition : public FManagerDefinition
	{	};

	/**
	 * ScriptStruct DeadIsland.CensorshipTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FCensorshipTelemetryEvent : public FDSOnline_FTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.OnCensorshipEnabledTelemetryEvent
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FOnCensorshipEnabledTelemetryEvent : public FCensorshipTelemetryEvent
	{
	public:
		struct FTelemetryActorID                                   CensorshipController;                                    // 0x0010(0x0020) NativeAccessSpecifierPublic
		bool                                                       bWasEnabled;                                             // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SCF5[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RunCensoredBuildTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FRunCensoredBuildTelemetryEvent : public FCensorshipTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.ChallengeRatingIntensityRow
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FChallengeRatingIntensityRow : public FTableRowBase
	{
	public:
		float                                                      IntensityMinimum;                                        // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IntensityMaximum;                                        // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ChallengeRatingParams
	 * Size -> 0x0008
	 */
	struct FChallengeRatingParams
	{
	public:
		unsigned char                                              UnknownData_UV6H[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ChallengeRatingParamsGenerator
	 * Size -> 0x0014
	 */
	struct FChallengeRatingParamsGenerator
	{
	public:
		EChallengeRatingSelection                                  ChallengeRatingSelection;                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J75J[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AgentCount;                                              // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AgentMin;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AgentMax;                                                // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EChallengeRatingAgentAmount                                ChallengeRatingAgentAmount;                              // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6DPQ[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ChallengeTelemetryEventBase
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FChallengeTelemetryEventBase : public FDSOnline_FTelemetryEvent
	{
	public:
		class FName                                                ChallengeName;                                           // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ChallengeCategory;                                       // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumTier;                                                 // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalTiers;                                              // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EChallengeBindType                                         ChallengeBindType;                                       // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q7HU[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ChallengeTierCompletedTelemetryEvent
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	struct FChallengeTierCompletedTelemetryEvent : public FChallengeTelemetryEventBase
	{
	public:
		TArray<class FString>                                      ChallengeRewards;                                        // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ChangeLanguageTelemetryEvent
	 * Size -> 0x0040 (FullSize[0x0050] - InheritedSize[0x0010])
	 */
	struct FChangeLanguageTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              NewOption;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PrevOption;                                              // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OSCulture;                                               // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OptionChangeReason;                                      // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CharacterActorMutatorViewParams
	 * Size -> 0x0040 (FullSize[0x0060] - InheritedSize[0x0020])
	 */
	struct FCharacterActorMutatorViewParams : public FActorMutatorViewParams
	{
	public:
		unsigned char                                              UnknownData_VMXZ[0x40];                                  // 0x0020(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AutoAlignRequestParams
	 * Size -> 0x0020
	 */
	struct FAutoAlignRequestParams
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Timeout;                                                 // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Tolerance;                                               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetCollisionTolerence;                                // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TravelSpeed;                                             // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxTravelDistance;                                       // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VelocityDampFraction;                                    // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseActorLocation;                                       // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDampenEffect;                                        // 0x001D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseRootMotionSource;                                    // 0x001E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BBAA[0x1];                                   // 0x001F(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CharacterProfileControllerDefinition
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FCharacterProfileControllerDefinition : public FManagerDefinition
	{	};

	/**
	 * ScriptStruct DeadIsland.ClientCharacterProfile
	 * Size -> 0x00B0
	 */
	struct FClientCharacterProfile
	{
	public:
		unsigned char                                              UnknownData_PZ8B[0xB0];                                  // 0x0000(0x00B0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ClientCharacterProfileData
	 * Size -> 0x0008
	 */
	struct FClientCharacterProfileData
	{
	public:
		unsigned char                                              UnknownData_I0HY[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ClientExperienceTelemetryEvent
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FClientExperienceTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		float                                                      AveragePing;                                             // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    NumAIVisibleTeleports;                                   // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    NumClientAdjustments;                                    // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      AverageAIPositionError;                                  // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      Interval;                                                // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_III0[0xC];                                   // 0x0024(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CombatWeightOutputRange
	 * Size -> 0x000C
	 */
	struct FCombatWeightOutputRange
	{
	public:
		bool                                                       bMultiply;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7KXW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Min;                                                     // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Max;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CombatWeightOutput
	 * Size -> 0x0018
	 */
	struct FCombatWeightOutput
	{
	public:
		struct FCombatWeightOutputRange                            ScoreMultiplier;                                         // 0x0000(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FCombatWeightOutputRange                            EnvelopeAttackMultiplier;                                // 0x000C(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CombatStimParams
	 * Size -> 0x0098 (FullSize[0x00A0] - InheritedSize[0x0008])
	 */
	struct FCombatStimParams : public FTableRowBase
	{
	public:
		struct FStimChooser                                        Stim;                                                    // 0x0008(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      BaseScore;                                               // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCombatEnvelope                                     DefaultEnvelope;                                         // 0x001C(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FCombatEnvelope                                     CurrentTargetEnvelope;                                   // 0x002C(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      DistanceLowerLimit;                                      // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceUpperLimit;                                      // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCombatWeightOutput                                 DistanceOutput;                                          // 0x0044(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      ThreatLowerLimit;                                        // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ThreatUpperLimit;                                        // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCombatWeightOutput                                 ThreatOutput;                                            // 0x0064(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      ViewAngleLowerLimit;                                     // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewAngleUpperLimit;                                     // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCombatWeightOutput                                 ViewAngleOutput;                                         // 0x0084(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KOAD[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_OnClientStartedCutscene
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_OnClientStartedCutscene : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_U726[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_OnLocalCutsceneFadeFinished
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_OnLocalCutsceneFadeFinished : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_LNUF[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_OnCutsceneSkipStarted
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_OnCutsceneSkipStarted : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_J6AI[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_OnClientDoneSkipping
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_OnClientDoneSkipping : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_BSCO[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CreditsDataTableRow
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FCreditsDataTableRow : public FTableRowBase
	{
	public:
		class FText                                                Name;                                                    // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                SubText;                                                 // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                SubSubText;                                              // 0x0038(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FString                                              UIStyle;                                                 // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CustomNavLinkComponentInstanceData
	 * Size -> 0x0010 (FullSize[0x0068] - InheritedSize[0x0058])
	 */
	struct FCustomNavLinkComponentInstanceData : public FActorComponentInstanceData
	{
	public:
		TArray<class UCustomNavLinkBase*>                          Links;                                                   // 0x0058(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DamageRepercussionsComponentPrePhysicsTickFunction
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	struct FDamageRepercussionsComponentPrePhysicsTickFunction : public FTickFunction
	{
	public:
		unsigned char                                              UnknownData_YBZF[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DamageRepercussionsTelemetryEvent
	 * Size -> 0x00A0 (FullSize[0x00B0] - InheritedSize[0x0010])
	 */
	struct FDamageRepercussionsTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FTelemetryActorID                                   DamageCauser;                                            // 0x0010(0x0020) NativeAccessSpecifierPublic
		struct FTelemetryActorID                                   InstigatorPawn;                                          // 0x0030(0x0020) NativeAccessSpecifierPublic
		struct FTelemetryActorID                                   InstigatorController;                                    // 0x0050(0x0020) NativeAccessSpecifierPublic
		struct FTelemetryActorID                                   AffectedActor;                                           // 0x0070(0x0020) NativeAccessSpecifierPublic
		struct FVector                                             ActorLocation;                                           // 0x0090(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BoneName;                                                // 0x009C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BodyPartName;                                            // 0x00A4(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpawnCutLimb;                                           // 0x00AC(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8GY2[0x3];                                   // 0x00AD(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MajorWoundBisectionTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
	 */
	struct FMajorWoundBisectionTelemetryEvent : public FDamageRepercussionsTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.MajorWoundDismembermentTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
	 */
	struct FMajorWoundDismembermentTelemetryEvent : public FDamageRepercussionsTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.DamageDealtInfo
	 * Size -> 0x0018
	 */
	struct FDamageDealtInfo
	{
	public:
		class FString                                              DamageType;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageQuantity;                                          // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NTSY[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DamageTelemetryEvent
	 * Size -> 0x00A8 (FullSize[0x00B8] - InheritedSize[0x0010])
	 */
	struct FDamageTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FTelemetryActorID                                   AttackerID;                                              // 0x0010(0x0020) NativeAccessSpecifierPublic
		struct FTelemetryActorID                                   DamagerID;                                               // 0x0030(0x0020) NativeAccessSpecifierPublic
		class FString                                              WeaponTelemetryName;                                     // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTelemetryActorID                                   VictimID;                                                // 0x0060(0x0020) NativeAccessSpecifierPublic
		class FString                                              ImpactID;                                                // 0x0080(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FDamageDealtInfo>                            DamageDealt;                                             // 0x0090(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FVector                                             AttackerPos;                                             // 0x00A0(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VictimHealthRemaining;                                   // 0x00AC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCritical;                                             // 0x00B0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OLL3[0x3];                                   // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StabilityDamage;                                         // 0x00B4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DSCommonDamageEventParams
	 * Size -> 0x0080
	 */
	struct FDSCommonDamageEventParams
	{
	public:
		float                                                      BaseDamage;                                              // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C21W[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FEventInstigator                                    Instigator;                                              // 0x0008(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               DamageCauser;                                            // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDamageNetworkApplicationPolicy                            Policy;                                                  // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6CO0[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDSDamageData                                       DSDamageData;                                            // 0x0028(0x0058) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DSRadialDamageEventParams
	 * Size -> 0x00C8
	 */
	struct FDSRadialDamageEventParams
	{
	public:
		TWeakObjectPtr<class AActor>                               DamagedActor;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FHitResult>                                  ComponentHits;                                           // 0x0008(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<TWeakObjectPtr<class UPrimitiveComponent>>          DamagedComponents;                                       // 0x0018(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic
		struct FDSCommonDamageEventParams                          CommonDamageParams;                                      // 0x0028(0x0080) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		float                                                      MinimumDamage;                                           // 0x00A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Origin;                                                  // 0x00AC(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InnerRadius;                                             // 0x00B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OuterRadius;                                             // 0x00BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageFalloff;                                           // 0x00C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YDDQ[0x4];                                   // 0x00C4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DSPointDamageEventParams
	 * Size -> 0x0148
	 */
	struct FDSPointDamageEventParams
	{
	public:
		TWeakObjectPtr<class AActor>                               DamagedActor;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDSCommonDamageEventParams                          CommonDamageParams;                                      // 0x0008(0x0080) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             HitFromDirection;                                        // 0x0088(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BLDV[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHitResult                                          HitInfo;                                                 // 0x0098(0x00B0) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DSGeneralDamageEventParams
	 * Size -> 0x0088
	 */
	struct FDSGeneralDamageEventParams
	{
	public:
		TWeakObjectPtr<class AActor>                               DamagedActor;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDSCommonDamageEventParams                          CommonDamageParams;                                      // 0x0008(0x0080) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DataTableRowChooser
	 * Size -> 0x0010
	 */
	struct FDataTableRowChooser
	{
	public:
		class UDataTable*                                          Table;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                RowName;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct DeadIsland.DeployableInstancePlacementInfo
	 * Size -> 0x0058
	 */
	struct FDeployableInstancePlacementInfo
	{
	public:
		bool                                                       CanBePlaced;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IHM4[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              DeployedActorClass;                                      // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             StartLocation;                                           // 0x0010(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            StartRotation;                                           // 0x001C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             EndLocation;                                             // 0x0028(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            EndRotation;                                             // 0x0034(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FVector>                                     SplinePoints;                                            // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    RandomSeed;                                              // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6AX5[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DialogPopUpOpenParams
	 * Size -> 0x00B0
	 */
	struct FDialogPopUpOpenParams
	{
	public:
		unsigned char                                              UnknownData_D29C[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, class FText>                           BPNamedArgs;                                             // 0x0050(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		class FScriptDelegate                                      OnPreInit;                                               // 0x00A0(0x0010) BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DIAnimInstanceProxy
	 * Size -> 0x0030 (FullSize[0x0710] - InheritedSize[0x06E0])
	 */
	struct FDIAnimInstanceProxy : public FAnimInstanceProxy
	{
	public:
		unsigned char                                              UnknownData_DXPY[0x30];                                  // 0x06E0(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ProfileChallengeData
	 * Size -> 0x000C
	 */
	struct FProfileChallengeData
	{
	public:
		class FName                                                ChallengeName;                                           // 0x0000(0x0008) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChallengeProgress;                                       // 0x0008(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ClientCharacterProfileChallengeData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FClientCharacterProfileChallengeData : public FClientCharacterProfileData
	{
	public:
		TArray<struct FProfileChallengeData>                       ProfileChallengeData;                                    // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SavedMove_DICharacter_Params
	 * Size -> 0x0050
	 */
	struct FSavedMove_DICharacter_Params
	{
	public:
		int32_t                                                    MovementParamsIndex;                                     // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedMod;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SlopeFrac;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KION[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                                     CurrentExternalVelocities;                               // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bRequestedStopMovementImmediately;                       // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasRootMotionSources;                                   // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasNetworkedRMS;                                        // 0x0022(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasNetworkedRMSBeforePerform;                           // 0x0023(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             RootMotionNetworkedVelocity;                             // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDSCharacterSplineFollowNetData                     SplineFollowData;                                        // 0x0030(0x0018) NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		int16_t                                                    ForwardInput;                                            // 0x0048(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    RightInput;                                              // 0x004A(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CollisionSlowDownScale;                                  // 0x004C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LKBH[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ItemPickUpData
	 * Size -> 0x0070
	 */
	struct FItemPickUpData
	{
	public:
		int32_t                                                    NewCount;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Delta;                                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FItemRepresentation                                 Item;                                                    // 0x0008(0x0068) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ClientCharacterProfileItemAssignments
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FClientCharacterProfileItemAssignments : public FClientCharacterProfileData
	{
	public:
		TArray<struct FAssignedItem>                               AssignedItems;                                           // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    SelectedIndex;                                           // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_67BU[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.UIAmmoInfo
	 * Size -> 0x0020
	 */
	struct FUIAmmoInfo
	{
	public:
		bool                                                       bItemUsesAmmo;                                           // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8T68[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAmmoInfo                                           AmmoInfo;                                                // 0x0004(0x000C) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		class UItemArchetype*                                      AmmoArchetype;                                           // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasInfiniteAmmo;                                        // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F5WN[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SkinnedMeshFader
	 * Size -> 0x0060
	 */
	struct FSkinnedMeshFader
	{
	public:
		unsigned char                                              UnknownData_M7H3[0x60];                                  // 0x0000(0x0060) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DistractionCoordinatorMovementParams
	 * Size -> 0x0090
	 */
	struct FDistractionCoordinatorMovementParams
	{
	public:
		class UEnvQuery*                                           EQSQuery;                                                // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, float>                                   QueryParams;                                             // 0x0008(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		struct FKnowledgeBaseExpression                            CanUseActivityExpression;                                // 0x0058(0x0038) BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DLCEntitlementOfferTableRow
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FDLCEntitlementOfferTableRow : public FTableRowBase
	{
	public:
		TArray<class FString>                                      OfferIDs;                                                // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UDLCEntitlement*>                             Entitlements;                                            // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DLCEntitlementTelemetryData
	 * Size -> 0x0020
	 */
	struct FDLCEntitlementTelemetryData
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Sources;                                                 // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DLCEntitlementTelemetryEvent
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FDLCEntitlementTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		TArray<struct FDLCEntitlementTelemetryData>                Entitlements;                                            // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_DockRequestAccepted
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_DockRequestAccepted : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_0T9G[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.AttachedDoorActor
	 * Size -> 0x0010
	 */
	struct FAttachedDoorActor
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDoorSides                                                 Side;                                                    // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VEKJ[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DoorInstanceConfig
	 * Size -> 0x0050
	 */
	struct FDoorInstanceConfig
	{
	public:
		bool                                                       bShowFrame;                                              // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowHandles;                                            // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowAdditionalMesh;                                     // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDoorSides                                                 DoorOrientation;                                         // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EFVL[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAttachedDoorActor>                          ActorsToAttach;                                          // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 DoorColourPicker;                                        // 0x0018(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 FrameColourPicker;                                       // 0x0028(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class UMaterialInstance*                                   AdditionalMeshOverrideMaterial;                          // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstance*                                   DoorOverrideMaterial;                                    // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstance*                                   FrameOverrideMaterial;                                   // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ReviveTrackingInfo
	 * Size -> 0x0018
	 */
	struct FReviveTrackingInfo
	{
	public:
		unsigned char                                              UnknownData_YMCN[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PlayerDeathTrackingInfo
	 * Size -> 0x0070
	 */
	struct FPlayerDeathTrackingInfo
	{
	public:
		unsigned char                                              UnknownData_0SOS[0x70];                                  // 0x0000(0x0070) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.DSDamageEventConfiguration
	 * Size -> 0x0018
	 */
	struct FDSDamageEventConfiguration
	{
	public:
		bool                                                       bUsePresetDamageSettings;                                // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JUK0[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDSDamageSettings                                   DamageSettings;                                          // 0x0008(0x0008) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class UClass*                                              DamageEventPreset;                                       // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.EngagementRingPoint
	 * Size -> 0x0048
	 */
	struct FEngagementRingPoint
	{
	public:
		bool                                                       bIsValid;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M4Y4[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             OffsetDirection;                                         // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LM5J[0x38];                                  // 0x0010(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.EngagementRingPointID
	 * Size -> 0x000C
	 */
	struct FEngagementRingPointID
	{
	public:
		struct FEngagementRingID                                   RingID;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Index;                                                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SensorState
	 * Size -> 0x0060
	 */
	struct FSensorState
	{
	public:
		unsigned char                                              UnknownData_WFRL[0x60];                                  // 0x0000(0x0060) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.EnvQueryItem_PointWithIndex
	 * Size -> 0x0010
	 */
	struct FEnvQueryItem_PointWithIndex
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Index;                                                   // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GiveEquipmentPackToParams
	 * Size -> 0x0060
	 */
	struct FGiveEquipmentPackToParams
	{
	public:
		class AActor*                                              Recipient;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APaperDollState*                                     PaperDollState;                                          // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, class UItemAssignmentShortcutGroupInstance*> ShortcutGroups;                                          // 0x0010(0x0050) BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FailStateConditionResponse
	 * Size -> 0x0020
	 */
	struct FFailStateConditionResponse
	{
	public:
		unsigned char                                              UnknownData_D0P8[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.FastTravelDestinationRow
	 * Size -> 0x00A0 (FullSize[0x00A8] - InheritedSize[0x0008])
	 */
	struct FFastTravelDestinationRow : public FTableRowBase
	{
	public:
		class FText                                                UIDisplayName;                                           // 0x0008(0x0018) Edit, EditConst, NativeAccessSpecifierPublic
		class FText                                                UIDisplayDescription;                                    // 0x0020(0x0018) Edit, EditConst, NativeAccessSpecifierPublic
		bool                                                       bStartsDisabled;                                         // 0x0038(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsPrimaryDestination;                                   // 0x0039(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XNO5[0x2];                                   // 0x003A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Priority;                                                // 0x003C(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bConditionsEnabled;                                      // 0x0040(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BTQB[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnowledgeBaseExpression                            RequirementsExpression;                                  // 0x0048(0x0038) Edit, EditConst, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StartPositionIdentifier;                                 // 0x0080(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     GROADKey;                                                // 0x0090(0x0018) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FastTravelManagerDefinition
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FFastTravelManagerDefinition : public FManagerDefinition
	{	};

	/**
	 * ScriptStruct DeadIsland.FastTravelInstanceInfo
	 * Size -> 0x0020
	 */
	struct FFastTravelInstanceInfo
	{
	public:
		unsigned char                                              UnknownData_W88Q[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.FindGameErrorTelemetryEvent
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FFindGameErrorTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FGuid                                               UID;                                                     // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Error;                                                   // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FindGameSuccessTelemetryEvent
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FFindGameSuccessTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FGuid                                               UID;                                                     // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHost;                                                   // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U9ZZ[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.FindGameSearchTelemetryEvent
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FFindGameSearchTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FGuid                                               UID;                                                     // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SearchType;                                              // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FrontEndModeFilter
	 * Size -> 0x0000 (FullSize[0x0001] - InheritedSize[0x0001])
	 */
	struct FFrontEndModeFilter : public FManagerFilter
	{	};

	/**
	 * ScriptStruct DeadIsland.GameCollisionDamageModifyParams
	 * Size -> 0x0020
	 */
	struct FGameCollisionDamageModifyParams
	{
	public:
		class UPrimitiveComponent*                                 OffenderComponent;                                       // 0x0000(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPrimitiveComponent*                                 VictimComponent;                                         // 0x0008(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VelChange;                                               // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OffenderVelocity;                                        // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VictimDamageScale;                                       // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OffenderDamageScale;                                     // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.EffectsRegistryEditorResponse
	 * Size -> 0x0048
	 */
	struct FEffectsRegistryEditorResponse
	{
	public:
		unsigned char                                              Definition[0x28];                                        // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              UnknownData_JLL9[0x10];                                  // 0x0028(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsCopied;                                               // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QNZD[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCosmeticEffectsDefinition*                          StreamedDefinition;                                      // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.EffectsRegistryRow
	 * Size -> 0x0001
	 */
	struct FEffectsRegistryRow
	{
	public:
		unsigned char                                              UnknownData_X2HT[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameCollisionHandlerResponseTrackingPair
	 * Size -> 0x00D8
	 */
	struct FGameCollisionHandlerResponseTrackingPair
	{
	public:
		TArray<class UObject*>                                     CustomInstanceDataVictimIsActor0;                        // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UObject*>                                     CustomInstanceDataVictimIsActor1;                        // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FSimpleCollisionData                                CollisionData;                                           // 0x0020(0x0048) NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CAEA[0x70];                                  // 0x0068(0x0070) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameCollisionHandlerRequestEffect
	 * Size -> 0x0060
	 */
	struct FGameCollisionHandlerRequestEffect
	{
	public:
		class FName                                                EffectsRowName;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Pos;                                                     // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Normal;                                                  // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YQJE[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Class[0x28];                                             // 0x0028(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		EPhysicalSurface                                           Surface;                                                 // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y3AR[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPhysicalMaterial*                                   PhysicsMaterial;                                         // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameCollisionResponse_DebugEntry
	 * Size -> 0x0038
	 */
	struct FGameCollisionResponse_DebugEntry
	{
	public:
		unsigned char                                              UnknownData_J2SG[0x38];                                  // 0x0000(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameCollisionData
	 * Size -> 0x0044
	 */
	struct FGameCollisionData
	{
	public:
		struct FVector                                             VictimPreSolverVelocity;                                 // 0x0000(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             VictimLinearVelocity;                                    // 0x000C(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             OffenderPreSolverVelocity;                               // 0x0018(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             OffenderLinearVelocity;                                  // 0x0024(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VictimMass;                                              // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeltaTime;                                               // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CollisionNormal;                                         // 0x0038(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameCollisionResponse_DamageDebugEntry
	 * Size -> 0x0014
	 */
	struct FGameCollisionResponse_DamageDebugEntry
	{
	public:
		unsigned char                                              UnknownData_F0DT[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CharacterGameplayModifierRow
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FCharacterGameplayModifierRow : public FTableRowBase
	{
	public:
		class UPerkDefinition*                                     PerkDefinition;                                          // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameFailTelemetryEvent
	 * Size -> 0x0040 (FullSize[0x0050] - InheritedSize[0x0010])
	 */
	struct FGameFailTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              Reason;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              MissionResponse;                                         // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              WorldResponse;                                           // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              PlayerResponse;                                          // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.GameMatchmakingLeaveGameTelemetryEvent
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FGameMatchmakingLeaveGameTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              SessionId;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.GameMatchmakingFindGameTelemetryEvent
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FGameMatchmakingFindGameTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              SessionId;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bHost;                                                   // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_STZ6[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_BleedOut
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_BleedOut : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_5IVS[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_OnReviveComplete
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_OnReviveComplete : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_2WPX[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_OnReviveInteract
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_OnReviveInteract : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_T1FB[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_SentReviveContribution
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_SentReviveContribution : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_JLDJ[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ClientMissionState
	 * Size -> 0x0018
	 */
	struct FClientMissionState
	{
	public:
		class UCampaignData*                                       CampaignData;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMissionData*                                        MissionData;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMissionState                                              EnteringState;                                           // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_21X8[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ClientObjectiveState
	 * Size -> 0x0020
	 */
	struct FClientObjectiveState
	{
	public:
		class UCampaignData*                                       CampaignData;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMissionData*                                        MissionData;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObjectiveData*                                      ObjectiveData;                                           // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EObjectiveState                                            EnteringState;                                           // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EObjectiveState                                            LeavingState;                                            // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2EA9[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MissionCheckpoints
	 * Size -> 0x00A0
	 */
	struct FMissionCheckpoints
	{
	public:
		unsigned char                                              UnknownData_5L3A[0xA0];                                  // 0x0000(0x00A0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ClientCheckpoint
	 * Size -> 0x00B0
	 */
	struct FClientCheckpoint
	{
	public:
		class UCampaignData*                                       CampaignData;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMissionData*                                        MissionData;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMissionCheckpoints                                 CheckpointStates;                                        // 0x0010(0x00A0) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ClientQuestUpdates
	 * Size -> 0x0030
	 */
	struct FClientQuestUpdates
	{
	public:
		TArray<struct FClientMissionState>                         MissionStates;                                           // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FClientObjectiveState>                       ObjectiveStates;                                         // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FClientCheckpoint>                           CheckpointStates;                                        // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RootMotionSource_GameSequenceMotion
	 * Size -> 0x0038 (FullSize[0x00D0] - InheritedSize[0x0098])
	 */
	struct FRootMotionSource_GameSequenceMotion : public FRootMotionSource
	{
	public:
		unsigned char                                              UnknownData_COLE[0x8];                                   // 0x0098(0x0008) Fix Super Size
		struct FTransform                                          TransformToApply;                                        // 0x00A0(0x0030) Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.GameSequenceCreateParams
	 * Size -> 0x0068
	 */
	struct FGameSequenceCreateParams
	{
	public:
		class ULevelSequence*                                      LevelSequence;                                           // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameSequenceConfig*                                 Config;                                                  // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FBoundActor>                                 CharactersToBind;                                        // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		class UObject*                                             EventReceiver;                                           // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UB9G[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          GameSequenceTransform;                                   // 0x0030(0x0030) Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIgnoreBoundActorCount;                                  // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHandleBoundActorCollisions;                             // 0x0061(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YV8S[0x6];                                   // 0x0062(0x0006) Fix size for supers
	};

	/**
	 * ScriptStruct DeadIsland.GameSequenceParams
	 * Size -> 0x0028 (FullSize[0x0090] - InheritedSize[0x0068])
	 */
	struct FGameSequenceParams : public FGameSequenceCreateParams
	{
	public:
		struct FGameSequencePlaybackParams                         PlaybackParams;                                          // 0x0068(0x0024) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H7X6[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.CurrentMapTelemetryEvent
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FCurrentMapTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              MapName;                                                 // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.GatherCoordinatorDefinition
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FGatherCoordinatorDefinition : public FManagerDefinition
	{	};

	/**
	 * ScriptStruct DeadIsland.RequestGatherParams
	 * Size -> 0x0038
	 */
	struct FRequestGatherParams
	{
	public:
		class UPlayerGatherComponent*                              GatherComponent;                                         // 0x0000(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTriggerShapeComponent*                              AreaProxy;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APawn*                                               Initiator;                                               // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGatherContext                                      Context;                                                 // 0x0018(0x0020) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.BaseItemWheelProperties
	 * Size -> 0x0008
	 */
	struct FBaseItemWheelProperties
	{
	public:
		float                                                      StickThresholdSq;                                        // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanSelectNone;                                          // 0x0004(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WELK[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ShortcutItemWheelProperties
	 * Size -> 0x0010
	 */
	struct FShortcutItemWheelProperties
	{
	public:
		struct FBaseItemWheelProperties                            BaseWheelProperties;                                     // 0x0000(0x0008) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bCanTiltWheel;                                           // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1Q0X[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      WheelUntiltRate;                                         // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MovableCanvasAreaDisplayDetails
	 * Size -> 0x0050
	 */
	struct FMovableCanvasAreaDisplayDetails
	{
	public:
		unsigned char                                              UnknownData_7P8W[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MenuItemGroup
	 * Size -> 0x0018
	 */
	struct FMenuItemGroup
	{
	public:
		class FName                                                GroupName;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AItemActor*>                                  GroupItems;                                              // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GrappleAudio
	 * Size -> 0x0008
	 */
	struct FGrappleAudio
	{
	public:
		class UAkAudioEvent*                                       FoleyLoopEvent;                                          // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HitReactNetworkManagerDefinition
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FHitReactNetworkManagerDefinition : public FManagerDefinition
	{	};

	/**
	 * ScriptStruct DeadIsland.HitShotInfo
	 * Size -> 0x00E0
	 */
	struct FHitShotInfo
	{
	public:
		struct FGuid                                               ImpactID;                                                // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHitResult                                          HitResult;                                               // 0x0010(0x00B0) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FVector                                             ShotDirection;                                           // 0x00C0(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ShotOrigin;                                              // 0x00CC(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumShotIterations;                                       // 0x00D8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2TO5[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MissShotInfo
	 * Size -> 0x001C
	 */
	struct FMissShotInfo
	{
	public:
		struct FVector                                             ShotDirection;                                           // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ShotOrigin;                                              // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumShotIterations;                                       // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ShotResults
	 * Size -> 0x0028
	 */
	struct FShotResults
	{
	public:
		TArray<struct FHitShotInfo>                                Hits;                                                    // 0x0000(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FMissShotInfo>                               Misses;                                                  // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      HalfConeSpreadDegrees;                                   // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RandSeed;                                                // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CosmeticEffectList
	 * Size -> 0x0010
	 */
	struct FCosmeticEffectList
	{
	public:
		TArray<class UCosmeticEffectsDefinition*>                  CosmeticEffects;                                         // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HordeModeFilter
	 * Size -> 0x0000 (FullSize[0x0001] - InheritedSize[0x0001])
	 */
	struct FHordeModeFilter : public FManagerFilter
	{	};

	/**
	 * ScriptStruct DeadIsland.HordeGauntletGeneratedLevelConfig
	 * Size -> 0x00D0 (FullSize[0x00D8] - InheritedSize[0x0008])
	 */
	struct FHordeGauntletGeneratedLevelConfig : public FTableRowBase
	{
	public:
		class FString                                              LevelName;                                               // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LevelSpawnTag;                                           // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Level[0x28];                                             // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              Sublevels[0x10];                                         // 0x0050(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              HazardSublevel[0x28];                                    // 0x0060(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UDataTable*                                          ObjectiveLevelsTable;                                    // 0x0088(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              LoadedObjectiveLevels[0x10];                             // 0x0090(0x0010) UNKNOWN PROPERTY: ArrayProperty
		class UThreaditorGraph*                                    Mission;                                                 // 0x00A0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      IngressBoatPaths;                                        // 0x00A8(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      EgressBoatPaths;                                         // 0x00B8(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UBatchZombieConfig*>                          AmbientZombieConfigs;                                    // 0x00C8(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HordeLanes
	 * Size -> 0x0010
	 */
	struct FHordeLanes
	{
	public:
		TArray<class AHordeLaneActor*>                             Actors;                                                  // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HordeMPProfileData
	 * Size -> 0x03A0
	 */
	struct FHordeMPProfileData
	{
	public:
		int32_t                                                    TotalMatchesPlayed;                                      // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3XN7[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHordeMPProfileMatchProfile                         CurrentMatchStats;                                       // 0x0008(0x00B8) Edit, BlueprintVisible, SaveGame, NativeAccessSpecifierPublic
		struct FHordeMPProfileMatchProfile                         LastMatchStats;                                          // 0x00C0(0x00B8) Edit, BlueprintVisible, SaveGame, NativeAccessSpecifierPublic
		struct FHordeMPProfileMatchProfile                         BestMatchStats;                                          // 0x0178(0x00B8) Edit, BlueprintVisible, SaveGame, NativeAccessSpecifierPublic
		struct FHordeMPProfileMatchProfile                         TotalCareerStats;                                        // 0x0230(0x00B8) Edit, BlueprintVisible, SaveGame, NativeAccessSpecifierPublic
		struct FHordeMPProfileMatchProfile                         BestIndividualStats;                                     // 0x02E8(0x00B8) Edit, BlueprintVisible, SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HordeMutatorConfig
	 * Size -> 0x0030
	 */
	struct FHordeMutatorConfig
	{
	public:
		unsigned char                                              MutatorClass[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		float                                                      PerMissionTriggerChanceOverride;                         // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F6YA[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.HordeMutatorBundleTableRow
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FHordeMutatorBundleTableRow : public FTableRowBase
	{
	public:
		class FString                                              UIIconLabel;                                             // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UIImageLabel;                                            // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                UiName;                                                  // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                UIDescription;                                           // 0x0040(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<struct FHordeMutatorConfig>                         Mutators;                                                // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		EHordeMutatorBundleGroup                                   MutatorBundleGroup;                                      // 0x0068(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHordeCharacterClassType                                   UnlockClass;                                             // 0x0069(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AL1N[0x2];                                   // 0x006A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UnlockLevel;                                             // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DifficultyMultiplier;                                    // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScoreMultiplier;                                         // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHordeMutatorImpact                                        MutatorImpact;                                           // 0x0078(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VCRW[0x3];                                   // 0x0079(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TriggerChance;                                           // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.HordeObjectiveSublevelConfig
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FHordeObjectiveSublevelConfig : public FTableRowBase
	{
	public:
		unsigned char                                              Level[0x28];                                             // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              ObjectiveClass[0x28];                                    // 0x0030(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class FString                                              MissionSpawnTagOverride;                                 // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.FadeArbiterRequestTrackingInfo
	 * Size -> 0x0060
	 */
	struct FFadeArbiterRequestTrackingInfo
	{
	public:
		unsigned char                                              UnknownData_8I6Y[0x60];                                  // 0x0000(0x0060) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.HordeNotification
	 * Size -> 0x0080
	 */
	struct FHordeNotification
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHordeNotification                                         NotificationType;                                        // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5A1L[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                HeadlineText;                                            // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                NameText;                                                // 0x0020(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                InfoText;                                                // 0x0038(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimerEnd;                                                // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseCountdown;                                            // 0x005C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFancyNotificationIcon                                     FancyIcon;                                               // 0x005D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KZ6E[0x2];                                   // 0x005E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                ScoreText;                                               // 0x0060(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEvent;                                                 // 0x0078(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MessageLogCachedMessage
	 * Size -> 0x0028
	 */
	struct FMessageLogCachedMessage
	{
	public:
		unsigned char                                              UnknownData_Y54V[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.IconInstanceScreenData
	 * Size -> 0x0028
	 */
	struct FIconInstanceScreenData
	{
	public:
		unsigned char                                              UnknownData_T9MK[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.IconInitParams
	 * Size -> 0x0048
	 */
	struct FIconInitParams
	{
	public:
		unsigned char                                              UnknownData_9DNH[0x48];                                  // 0x0000(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.IconSharedInstanceData
	 * Size -> 0x0048
	 */
	struct FIconSharedInstanceData
	{
	public:
		struct FVector                                             FixedWorldPosition;                                      // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UIconDisplayData>                     Icon;                                                    // 0x000C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SGOC[0x34];                                  // 0x0014(0x0034) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ComponentRadialImpulseData
	 * Size -> 0x0020
	 */
	struct FComponentRadialImpulseData
	{
	public:
		TWeakObjectPtr<class UPrimitiveComponent>                  Component;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Origin;                                                  // 0x0008(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Strength;                                                // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERadialImpulseFalloff                                      Falloff;                                                 // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVelChange;                                              // 0x001D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BKJH[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ImpactModificationCommandHelper
	 * Size -> 0x0010
	 */
	struct FImpactModificationCommandHelper
	{
	public:
		TArray<class UImpactModificationCommand*>                  RegisteredCommands;                                      // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.ConvertDamageInfo
	 * Size -> 0x0050
	 */
	struct FConvertDamageInfo
	{
	public:
		unsigned char                                              DesiredDamageTypesAsFractionOfSourceDamage[0x50];        // 0x0000(0x0050) UNKNOWN PROPERTY: MapProperty
	};

	/**
	 * ScriptStruct DeadIsland.ImpactSensorActivationParams
	 * Size -> 0x0030
	 */
	struct FImpactSensorActivationParams
	{
	public:
		class FName                                                Reason;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMeshComponent*                              SkelComp;                                                // 0x0008(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BoneName;                                                // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BoneSensorRadius;                                        // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FImpactSensorSweepSettings                          SweepSettings;                                           // 0x001C(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, ExposeOnSpawn, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2GM2[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.InteractStatesEntryRow
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FInteractStatesEntryRow : public FTableRowBase
	{
	public:
		unsigned char                                              Priority;                                                // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4450[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              StateClass;                                              // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLocalOnly;                                            // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CLTU[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.InteractState
	 * Size -> 0x000C
	 */
	struct FInteractState
	{
	public:
		unsigned char                                              UnknownData_JEMN[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ClientCharacterProfileInventoryData
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FClientCharacterProfileInventoryData : public FClientCharacterProfileData
	{
	public:
		unsigned char                                              UnknownData_9NBF[0x20];                                  // 0x0008(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.InviteSuccessTelemetryEvent
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FInviteSuccessTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              PartySessionID;                                          // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameSessionID;                                           // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		double                                                     PlatformTime;                                            // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.InviteErrorTelemetryEvent
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FInviteErrorTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              PartySessionID;                                          // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		double                                                     PlatformTime;                                            // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ErrorResponse;                                           // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6Z9H[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.InviteTelemetryEvent
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FInviteTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              PartySessionID;                                          // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		double                                                     PlatformTime;                                            // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.InvulnerabilityManagerDefinition
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FInvulnerabilityManagerDefinition : public FManagerDefinition
	{	};

	/**
	 * ScriptStruct DeadIsland.ItemUpgradeRegistryDefinition
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FItemUpgradeRegistryDefinition : public FManagerDefinition
	{	};

	/**
	 * ScriptStruct DeadIsland.JournalEntryRegistryDefinition
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FJournalEntryRegistryDefinition : public FManagerDefinition
	{	};

	/**
	 * ScriptStruct DeadIsland.KeysForLocksRegistryDefinition
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FKeysForLocksRegistryDefinition : public FManagerDefinition
	{	};

	/**
	 * ScriptStruct DeadIsland.KillTelemetryEvent
	 * Size -> 0x0070 (FullSize[0x0080] - InheritedSize[0x0010])
	 */
	struct FKillTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FTelemetryActorID                                   AttackerID;                                              // 0x0010(0x0020) NativeAccessSpecifierPublic
		struct FVector                                             AttackerPos;                                             // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6JF8[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTelemetryActorID                                   VictimID;                                                // 0x0040(0x0020) NativeAccessSpecifierPublic
		struct FVector                                             VictimPos;                                               // 0x0060(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IUVN[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ImpactID;                                                // 0x0070(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_Knockdown
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_Knockdown : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_HDHY[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_EnemyLaunched
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_EnemyLaunched : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_OOTM[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.LaunchRootImpulseResult
	 * Size -> 0x0010
	 */
	struct FLaunchRootImpulseResult
	{
	public:
		struct FVector                                             RootImpulseVelocity;                                     // 0x0000(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStopExistingMovement;                                   // 0x000C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_25HR[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.LevelOffsetRow
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FLevelOffsetRow : public FTableRowBase
	{
	public:
		int32_t                                                    MinOffset;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxOffset;                                               // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_OnDisableRegisteredLevelStreamingComponentsCompleted
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_OnDisableRegisteredLevelStreamingComponentsCompleted : public FGameplayEventData
	{	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_DisableRegisteredLevelStreamingComponents
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_DisableRegisteredLevelStreamingComponents : public FGameplayEventData
	{	};

	/**
	 * ScriptStruct DeadIsland.LevelStreamingManagerDefinition
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FLevelStreamingManagerDefinition : public FManagerDefinition
	{	};

	/**
	 * ScriptStruct DeadIsland.LocomotionDebuggerLocation
	 * Size -> 0x0010
	 */
	struct FLocomotionDebuggerLocation
	{
	public:
		ELocomotionDebuggerLocationSource                          Source;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_GZC3[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Location;                                                // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.LocomotionDebuggerPoint
	 * Size -> 0x0014
	 */
	struct FLocomotionDebuggerPoint
	{
	public:
		struct FLocomotionDebuggerLocation                         Location;                                                // 0x0000(0x0010) NoDestructor, NativeAccessSpecifierPrivate
		bool                                                       bShouldTeleport;                                         // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_MQLY[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.LocomotionDebuggerPathConfig
	 * Size -> 0x0018
	 */
	struct FLocomotionDebuggerPathConfig
	{
	public:
		TArray<struct FLocomotionDebuggerPoint>                    Points;                                                  // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		ELocomotionDebuggerEndMode                                 EndMode;                                                 // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GR34[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.LocomotionDebugger
	 * Size -> 0x0120
	 */
	struct FLocomotionDebugger
	{
	public:
		struct FLocomotionDebuggerPathConfig                       PathConfig;                                              // 0x0000(0x0018) NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_W2GO[0x108];                                 // 0x0018(0x0108) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.LookAtRequest
	 * Size -> 0x0018
	 */
	struct FLookAtRequest
	{
	public:
		class USceneComponent*                                     RelativeToComponent;                                     // 0x0000(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0008(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M1ED[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.LootTypeFilter
	 * Size -> 0x0008
	 */
	struct FLootTypeFilter
	{
	public:
		class UBaseLootTypeFilter*                                 Filter;                                                  // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DispatchMethodCollection
	 * Size -> 0x0058
	 */
	struct FDispatchMethodCollection
	{
	public:
		class UBaseLootDispatchMethod*                             DefaultDispatchMethod;                                   // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class ULootDispatchReason*, class UBaseLootDispatchMethod*> DispatchReasonMethodOverrides;                           // 0x0008(0x0050) Edit, ExportObject, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.BodyPartDestructionLootDropUpdatingConfig
	 * Size -> 0x0058
	 */
	struct FBodyPartDestructionLootDropUpdatingConfig
	{
	public:
		ELootUpdating                                              LootUpdating;                                            // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ERP7[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, struct FLootDropConfig>                  BodyPartDestructionLootDropConfig;                       // 0x0008(0x0050) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CreateItemPickupArgs
	 * Size -> 0x0080
	 */
	struct FCreateItemPickupArgs
	{
	public:
		unsigned char                                              UnknownData_N0S1[0x80];                                  // 0x0000(0x0080) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.LootGroupHandle
	 * Size -> 0x0008
	 */
	struct FLootGroupHandle
	{
	public:
		unsigned char                                              UnknownData_7LSA[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SerialisableLootType
	 * Size -> 0x0010
	 */
	struct FSerialisableLootType
	{
	public:
		class UItemArchetype*                                      ItemArchetype;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0QRO[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MapBrowserEntryRow
	 * Size -> 0x00B8 (FullSize[0x00C0] - InheritedSize[0x0008])
	 */
	struct FMapBrowserEntryRow : public FTableRowBase
	{
	public:
		class FString                                              MapPathStr;                                              // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CategoryName;                                            // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bDevOnly;                                                // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bProductionRules;                                        // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELightingLockedState                                       LightingLockState;                                       // 0x003A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVisible;                                                // 0x003B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDLCTag                                                    DLCTag;                                                  // 0x003C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QVY6[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTravelRequestParams                                AdditionalParams;                                        // 0x0040(0x0058) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              Campaign[0x28];                                          // 0x0098(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct DeadIsland.MapDistrictKey
	 * Size -> 0x0008
	 */
	struct FMapDistrictKey
	{
	public:
		bool                                                       bIsValid;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PCCP[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHashResultIgnoreCase                               Hash;                                                    // 0x0004(0x0004) Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.MarketingConsentTelemetryEvent
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FMarketingConsentTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		bool                                                       bConsentGiven;                                           // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XOWH[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              OptionChangeReason;                                      // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.AIMeleeActionPrerequisites
	 * Size -> 0x0018
	 */
	struct FAIMeleeActionPrerequisites
	{
	public:
		unsigned char                                              UnknownData_EGW9[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MeleeAttackLine
	 * Size -> 0x001C
	 */
	struct FMeleeAttackLine
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Direction;                                               // 0x000C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MeleeResponseInfo
	 * Size -> 0x0004
	 */
	struct FMeleeResponseInfo
	{
	public:
		bool                                                       bApplyDamage;                                            // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyImpulse;                                           // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGenerateManualHitFX;                                    // 0x0002(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransmitStatusFX;                                       // 0x0003(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MeleeHitParameters
	 * Size -> 0x0088
	 */
	struct FMeleeHitParameters
	{
	public:
		class AActor*                                              DamageCausingActor;                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AController*                                         EventInstigator;                                         // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageToCause;                                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1GLQ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDSDamageData                                       DamageData;                                              // 0x0018(0x0058) NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             SweepDirection;                                          // 0x0070(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceKill;                                              // 0x007C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldTriggerHitEffects;                                // 0x007D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldTriggerHitReacts;                                 // 0x007E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldTriggerClientPredictiveHitReacts;                 // 0x007F(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReduceWeaponDurability;                                 // 0x0080(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E2BY[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MenuOpeningParams
	 * Size -> 0x0018
	 */
	struct FMenuOpeningParams
	{
	public:
		class FName                                                OpeningScreen;                                           // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             InitScreenObject;                                        // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceGoToIfMenuOpen;                                    // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreGoToIfMenuScreenOpen;                             // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CNZJ[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MenuEnterScreenTelemetryEvent
	 * Size -> 0x0038 (FullSize[0x0048] - InheritedSize[0x0010])
	 */
	struct FMenuEnterScreenTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              MenuTypeClassName;                                       // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ScreenName;                                              // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ScreenClassName;                                         // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMenuSetScreenType                                         ScreenSetType;                                           // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M70L[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MenuLeaveScreenParams
	 * Size -> 0x0018
	 */
	struct FMenuLeaveScreenParams
	{
	public:
		unsigned char                                              UnknownData_J7IG[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MenuEnterScreenParams
	 * Size -> 0x0020
	 */
	struct FMenuEnterScreenParams
	{
	public:
		unsigned char                                              UnknownData_FOBS[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MenuSetScreenParams
	 * Size -> 0x0018
	 */
	struct FMenuSetScreenParams
	{
	public:
		unsigned char                                              UnknownData_ND1G[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MenuGoToScreenParams
	 * Size -> 0x0018
	 */
	struct FMenuGoToScreenParams
	{
	public:
		unsigned char                                              UnknownData_KNHP[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.VendorShopItemDataWrapper
	 * Size -> 0x0010
	 */
	struct FVendorShopItemDataWrapper
	{
	public:
		TArray<struct FShopItemData>                               Items;                                                   // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.DistrictLevelLocationData
	 * Size -> 0x0068
	 */
	struct FDistrictLevelLocationData
	{
	public:
		unsigned char                                              UnknownData_LSGO[0x68];                                  // 0x0000(0x0068) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MenuOpenMenuTelemetryEvent
	 * Size -> 0x0030 (FullSize[0x0040] - InheritedSize[0x0010])
	 */
	struct FMenuOpenMenuTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              MenuTypeClassName;                                       // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OpeningScreenName;                                       // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OpeningScreenClassName;                                  // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.BaseMissionTelemetryEvent
	 * Size -> 0x0040 (FullSize[0x0050] - InheritedSize[0x0010])
	 */
	struct FBaseMissionTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              MissionName;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MissionNamespace;                                        // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MissionTypeName;                                         // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MissionFileName;                                         // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.TrackedMissionChangedTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	struct FTrackedMissionChangedTelemetryEvent : public FBaseMissionTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.MissionCompleteTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	struct FMissionCompleteTelemetryEvent : public FBaseMissionTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.MissionActiveEndTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	struct FMissionActiveEndTelemetryEvent : public FBaseMissionTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.MissionActiveBeginTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	struct FMissionActiveBeginTelemetryEvent : public FBaseMissionTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.AttachmentCollisionProfiles
	 * Size -> 0x0008
	 */
	struct FAttachmentCollisionProfiles
	{
	public:
		class UPrimitiveComponent*                                 Primitive;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ProjectileActorConfiguration
	 * Size -> 0x0028
	 */
	struct FProjectileActorConfiguration
	{
	public:
		class UClass*                                              ProjectileType;                                          // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UProjectileCreationParams*                           CreationParamsInstance;                                  // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              CreationParamsClass;                                     // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ProjectileSpawnMethodClass;                              // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AllowedHalfConeSpreadInDegrees;                          // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RandomSeed;                                              // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ProjectileInstanceParams
	 * Size -> 0x00F0
	 */
	struct FProjectileInstanceParams
	{
	public:
		struct FEventInstigator                                    Instigator;                                              // 0x0000(0x0010) NoDestructor, NativeAccessSpecifierPublic
		class AActor*                                              CreatorActor;                                            // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTargetPointInfo                                    OptionalTargetPointInfo;                                 // 0x0018(0x0050) NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideLaunchDirectionInWorldSpace;                    // 0x0068(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6LHM[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             OverrideWorldSpaceLaunchDirection;                       // 0x006C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8I9Z[0x8];                                   // 0x0078(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          RequesterCameraTransform;                                // 0x0080(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTransform                                          CosmeticProjectileTransform;                             // 0x00B0(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class UWorld*                                              World;                                                   // 0x00E0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_II2S[0x8];                                   // 0x00E8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.MovieSceneCinematicRootTemplate
	 * Size -> 0x0008 (FullSize[0x0028] - InheritedSize[0x0020])
	 */
	struct FMovieSceneCinematicRootTemplate : public FMovieSceneEvalTemplate
	{
	public:
		class UMovieSceneCinematicRootSection*                     Section;                                                 // 0x0020(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.MutatedActorViewerData
	 * Size -> 0x0038
	 */
	struct FMutatedActorViewerData
	{
	public:
		unsigned char                                              UnknownData_ETZU[0x38];                                  // 0x0000(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.NamedObjectRow
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FNamedObjectRow : public FTableRowBase
	{
	public:
		class FText                                                Name;                                                    // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.NetworkChannelError
	 * Size -> 0x0010
	 */
	struct FNetworkChannelError
	{
	public:
		class FString                                              ErrorMsg;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ActorChannelError
	 * Size -> 0x0030
	 */
	struct FActorChannelError
	{
	public:
		struct FTelemetryActorID                                   ActorID;                                                 // 0x0000(0x0020) NativeAccessSpecifierPublic
		class FString                                              ErrorMsg;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.NetworkFailureError
	 * Size -> 0x0030
	 */
	struct FNetworkFailureError
	{
	public:
		class FString                                              WorldName;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FailureType;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ErrorMsg;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.NetworkFailureTelemetryEvent
	 * Size -> 0x0030 (FullSize[0x0040] - InheritedSize[0x0010])
	 */
	struct FNetworkFailureTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		TArray<struct FNetworkChannelError>                        ChannelErrors;                                           // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FActorChannelError>                          ActorChannelErrors;                                      // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FNetworkFailureError>                        NetworkFailures;                                         // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ObjectiveProxyDataEntry
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FObjectiveProxyDataEntry : public FTableRowBase
	{
	public:
		class UClass*                                              ObjectiveProxy;                                          // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.BaseObjectiveTelemetryEvent
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FBaseObjectiveTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              ObjectiveFileName;                                       // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CurrentObjectiveDescription;                             // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ObjectiveTypeName;                                       // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MissionName;                                             // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MissionNamespace;                                        // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ObjectiveProgressUpdateTelemetryEvent
	 * Size -> 0x0008 (FullSize[0x0068] - InheritedSize[0x0060])
	 */
	struct FObjectiveProgressUpdateTelemetryEvent : public FBaseObjectiveTelemetryEvent
	{
	public:
		float                                                      NewProgressX;                                            // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NewProgressY;                                            // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ObjectiveCompleteTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0060] - InheritedSize[0x0060])
	 */
	struct FObjectiveCompleteTelemetryEvent : public FBaseObjectiveTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.ObjectiveActiveEndTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0060] - InheritedSize[0x0060])
	 */
	struct FObjectiveActiveEndTelemetryEvent : public FBaseObjectiveTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.ObjectiveActiveBeginTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0060] - InheritedSize[0x0060])
	 */
	struct FObjectiveActiveBeginTelemetryEvent : public FBaseObjectiveTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.ObjectSetErrorFlags
	 * Size -> 0x0002
	 */
	struct FObjectSetErrorFlags
	{
	public:
		bool                                                       bMissingObjectSet;                                       // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUnresolvedAsset;                                        // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ObjectSetResolutionContext
	 * Size -> 0x0018
	 */
	struct FObjectSetResolutionContext
	{
	public:
		TArray<unsigned char>                                      Data;                                                    // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		bool                                                       bByReference;                                            // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_CXVT[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ContextSize;                                             // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.ObstacleAvoiderParams
	 * Size -> 0x0010
	 */
	struct FObstacleAvoiderParams
	{
	public:
		class UObstacleAvoiderConfig*                              Config;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TICS[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_SpoonPopUpDisplayed
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_SpoonPopUpDisplayed : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_2S6V[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PerkEffectEndParams
	 * Size -> 0x0010
	 */
	struct FPerkEffectEndParams
	{
	public:
		class AActor*                                              ActorToRemoveEffect;                                     // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FKXH[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PerkEffectStartParams
	 * Size -> 0x0038
	 */
	struct FPerkEffectStartParams
	{
	public:
		float                                                      Duration;                                                // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Cooldown;                                                // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              ActorToReceiveEffect;                                    // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FEventInstigator                                    PerkEffectInstigator;                                    // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_32G0[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              OwnerActor;                                              // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WQC7[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.BlueprintPerkConditionParams
	 * Size -> 0x0018
	 */
	struct FBlueprintPerkConditionParams
	{
	public:
		class AActor*                                              OwnerActor;                                              // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UConditionCustomDataBase*                            CustomData;                                              // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPerkConditionAndEffectThread*                       OwnerPerkInstance;                                       // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ConditionGeneralStateData
	 * Size -> 0x0060
	 */
	struct FConditionGeneralStateData
	{
	public:
		unsigned char                                              UnknownData_4O8Y[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TWeakObjectPtr<class AActor>>                       ImpliedTargets;                                          // 0x0008(0x0010) ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0858[0x48];                                  // 0x0018(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PerkRequestRecord
	 * Size -> 0x0018
	 */
	struct FPerkRequestRecord
	{
	public:
		unsigned char                                              UnknownData_D2J4[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PerlinNoise
	 * Size -> 0x0020
	 */
	struct FPerlinNoise
	{
	public:
		unsigned char                                              UnknownData_KXLG[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RagdollMotorRequest
	 * Size -> 0x0010
	 */
	struct FRagdollMotorRequest
	{
	public:
		class FName                                                Reason;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MotorStrength;                                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendInTime;                                             // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizationStateRequest
	 * Size -> 0x000C
	 */
	struct FPhysicalizationStateRequest
	{
	public:
		class FName                                                Reason;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendInTime;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizationLODSet
	 * Size -> 0x0001
	 */
	struct FPhysicalizationLODSet
	{
	public:
		EPhysicalizationFullBodyLOD                                FullBodyLOD;                                             // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizedWorldQueryParams
	 * Size -> 0x0014
	 */
	struct FPhysicalizedWorldQueryParams
	{
	public:
		struct FVector                                             QueryOrigin;                                             // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      QueryRadius;                                             // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPhysicalizedWorldAffectedActorsPolicy                     AffectedActorPolicy;                                     // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IM2Z[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizedWorldResponderInfo
	 * Size -> 0x0050
	 */
	struct FPhysicalizedWorldResponderInfo
	{
	public:
		struct FTransform                                          Transform;                                               // 0x0000(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BYN5[0x1C];                                  // 0x0034(0x001C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PhysicalizedWorldResponderRequest
	 * Size -> 0x0060
	 */
	struct FPhysicalizedWorldResponderRequest
	{
	public:
		struct FPhysicalizedWorldResponderInfo                     Info;                                                    // 0x0000(0x0050) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              Responder[0x10];                                         // 0x0050(0x0010) UNKNOWN PROPERTY: InterfaceProperty
	};

	/**
	 * ScriptStruct DeadIsland.PickupState
	 * Size -> 0x000C
	 */
	struct FPickupState
	{
	public:
		EPickupabilityRule                                         PickupabilityRule;                                       // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPickupVisibilityRule                                      VisibilityRule;                                          // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D6F1[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EPickupabilityState                                        PickupabilityState;                                      // 0x0004(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VSRP[0x3];                                   // 0x0005(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		EPickupVisibility                                          PickupVisibility;                                        // 0x0008(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_WGO1[0x3];                                   // 0x0009(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_PlacedWeaponData_ClientCooldown
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_PlacedWeaponData_ClientCooldown : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_HU2G[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ItemTelemetryDetails
	 * Size -> 0x0058
	 */
	struct FItemTelemetryDetails
	{
	public:
		struct FTelemetryActorID                                   ActorID;                                                 // 0x0000(0x0020) NativeAccessSpecifierPrivate
		class FString                                              TelemetryName;                                           // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              ItemArchetype;                                           // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              Rarity;                                                  // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    Level;                                                   // 0x0050(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    Seed;                                                    // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.AimTargetTelemetryEventData
	 * Size -> 0x0038
	 */
	struct FAimTargetTelemetryEventData
	{
	public:
		struct FTelemetryActorID                                   ActorID;                                                 // 0x0000(0x0020) NativeAccessSpecifierPublic
		struct FVector                                             Position;                                                // 0x0020(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BoneName;                                                // 0x002C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WLC7[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PlayerAttackTelemetryEvent
	 * Size -> 0x00E8 (FullSize[0x00F8] - InheritedSize[0x0010])
	 */
	struct FPlayerAttackTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FTelemetryActorID                                   PlayerID;                                                // 0x0010(0x0020) NativeAccessSpecifierPublic
		struct FItemTelemetryDetails                               WeaponDetails;                                           // 0x0030(0x0058) NativeAccessSpecifierPublic
		struct FVector                                             PlayerPos;                                               // 0x0088(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2JEC[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAimTargetTelemetryEventData                        AimTargetData;                                           // 0x0098(0x0038) NativeAccessSpecifierPublic
		TArray<struct FHitTargetTelemetryEventData>                HitTargetData;                                           // 0x00D0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    TotalHitCount;                                           // 0x00E0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EXFN[0x4];                                   // 0x00E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ImpactID;                                                // 0x00E8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerThrowingMeleeAttackTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
	 */
	struct FPlayerThrowingMeleeAttackTelemetryEvent : public FPlayerAttackTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.PlayerStandardAttackTelemetryEvent
	 * Size -> 0x0018 (FullSize[0x0110] - InheritedSize[0x00F8])
	 */
	struct FPlayerStandardAttackTelemetryEvent : public FPlayerAttackTelemetryEvent
	{
	public:
		float                                                      Durability;                                              // 0x00F8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IYPT[0x4];                                   // 0x00FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DurabilityState;                                         // 0x0100(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerHeavyAttackTelemetryEvent
	 * Size -> 0x0010 (FullSize[0x0120] - InheritedSize[0x0110])
	 */
	struct FPlayerHeavyAttackTelemetryEvent : public FPlayerStandardAttackTelemetryEvent
	{
	public:
		float                                                      StaminaAtRelease;                                        // 0x0110(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaCost;                                             // 0x0114(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsPairedHeavyAttack;                                    // 0x0118(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KL02[0x3];                                   // 0x0119(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Charge;                                                  // 0x011C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerBlockEndTelemetryEvent
	 * Size -> 0x0030 (FullSize[0x0040] - InheritedSize[0x0010])
	 */
	struct FPlayerBlockEndTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FTelemetryActorID                                   PlayerID;                                                // 0x0010(0x0020) NativeAccessSpecifierPublic
		float                                                      StaminaUsed;                                             // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaLeft;                                             // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ActiveTime;                                              // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EUN7[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PlayerBlockStartTelemetryEvent
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FPlayerBlockStartTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FTelemetryActorID                                   PlayerID;                                                // 0x0010(0x0020) NativeAccessSpecifierPublic
		float                                                      InitialStamina;                                          // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaCostOnStart;                                      // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerBlockSuccessTelemetryEvent
	 * Size -> 0x0058 (FullSize[0x0068] - InheritedSize[0x0010])
	 */
	struct FPlayerBlockSuccessTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FTelemetryActorID                                   PlayerID;                                                // 0x0010(0x0020) NativeAccessSpecifierPublic
		struct FVector                                             PlayerPosition;                                          // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZQUO[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTelemetryActorID                                   EnemyID;                                                 // 0x0040(0x0020) NativeAccessSpecifierPublic
		int32_t                                                    EnemyLevel;                                              // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsPerfect;                                              // 0x0064(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HJWJ[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PlayerCarryableEquippedTelemetryEvent
	 * Size -> 0x0040 (FullSize[0x0050] - InheritedSize[0x0010])
	 */
	struct FPlayerCarryableEquippedTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FTelemetryActorID                                   PlayerID;                                                // 0x0010(0x0020) NativeAccessSpecifierPublic
		class FString                                              CarryableName;                                           // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CarryableType;                                           // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerCarryableUnequippedTelemetryEvent
	 * Size -> 0x0048 (FullSize[0x0058] - InheritedSize[0x0010])
	 */
	struct FPlayerCarryableUnequippedTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FTelemetryActorID                                   PlayerID;                                                // 0x0010(0x0020) NativeAccessSpecifierPublic
		class FString                                              CarryableName;                                           // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CarryableType;                                           // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotalActiveTime;                                         // 0x0050(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_APGJ[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.FactSelectorCollection
	 * Size -> 0x0010
	 */
	struct FFactSelectorCollection
	{
	public:
		TArray<struct FKnowledgeBaseValueSelector>                 FactsToSet;                                              // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerCountScaledSettings
	 * Size -> 0x0060
	 */
	struct FPlayerCountScaledSettings
	{
	public:
		float                                                      EnemyMaxHealthIncreasePerAdditionalPlayer;               // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EnemyDamageIncreasePerAdditionalPlayer;                  // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      XPKillRewardIncreasePerAdditionalPlayer;                 // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MW3G[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, struct FFactSelectorCollection>              PlayerCountToFacts;                                      // 0x0010(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerDodgeTelemetryEvent
	 * Size -> 0x0060 (FullSize[0x0070] - InheritedSize[0x0010])
	 */
	struct FPlayerDodgeTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FTelemetryActorID                                   PlayerID;                                                // 0x0010(0x0020) NativeAccessSpecifierPublic
		struct FVector                                             PlayerPosition;                                          // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaCost;                                             // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaLeft;                                             // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FFLA[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTelemetryActorID                                   EnemyID;                                                 // 0x0048(0x0020) NativeAccessSpecifierPublic
		int32_t                                                    EnemyLevel;                                              // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsPerfect;                                              // 0x006C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_09RB[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PlayerFuryModeEndTelemetryEvent
	 * Size -> 0x0040 (FullSize[0x0050] - InheritedSize[0x0010])
	 */
	struct FPlayerFuryModeEndTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FTelemetryActorID                                   PlayerID;                                                // 0x0010(0x0020) NativeAccessSpecifierPublic
		class FString                                              EndReason;                                               // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FuryAmount;                                              // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FuryAmountDepleted;                                      // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ActiveTime;                                              // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5I7F[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PlayerFuryModeStartTelemetryEvent
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FPlayerFuryModeStartTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FTelemetryActorID                                   PlayerID;                                                // 0x0010(0x0020) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerHandsRequest
	 * Size -> 0x0020
	 */
	struct FPlayerHandsRequest
	{
	public:
		struct FPlayerHandsParams                                  Params;                                                  // 0x0000(0x0010) ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGuid                                               Guid;                                                    // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerItemTransactionTelemetryEvent
	 * Size -> 0x0068 (FullSize[0x0078] - InheritedSize[0x0010])
	 */
	struct FPlayerItemTransactionTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              UniqueId;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FItemTelemetryDetails                               ItemDetails;                                             // 0x0020(0x0058) NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.PlayerPickUpItemTelemetryEvent
	 * Size -> 0x0028 (FullSize[0x00A0] - InheritedSize[0x0078])
	 */
	struct FPlayerPickUpItemTelemetryEvent : public FPlayerItemTransactionTelemetryEvent
	{
	public:
		class FString                                              PickupSource;                                            // 0x0078(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    Count;                                                   // 0x0088(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    CountTotal;                                              // 0x008C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             WorldLocation;                                           // 0x0090(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8W0L[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PlayerTriggerItemLootDropTelemetryEvent
	 * Size -> 0x0020 (FullSize[0x0098] - InheritedSize[0x0078])
	 */
	struct FPlayerTriggerItemLootDropTelemetryEvent : public FPlayerItemTransactionTelemetryEvent
	{
	public:
		class FString                                              DispatchReason;                                          // 0x0078(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    Count;                                                   // 0x0088(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             WorldLocation;                                           // 0x008C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.PlayerPurchaseUpgradeItemTelemetryEvent
	 * Size -> 0x0028 (FullSize[0x00A0] - InheritedSize[0x0078])
	 */
	struct FPlayerPurchaseUpgradeItemTelemetryEvent : public FPlayerItemTransactionTelemetryEvent
	{
	public:
		class FString                                              UpgradeName;                                             // 0x0078(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              UpgradeType;                                             // 0x0088(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    UpgradeCost;                                             // 0x0098(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_H3KV[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PlayerDismantleItemTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0078] - InheritedSize[0x0078])
	 */
	struct FPlayerDismantleItemTelemetryEvent : public FPlayerItemTransactionTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.PlayerDropItemTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0078] - InheritedSize[0x0078])
	 */
	struct FPlayerDropItemTelemetryEvent : public FPlayerItemTransactionTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.PlayerSellItemTelemetryEvent
	 * Size -> 0x0008 (FullSize[0x0080] - InheritedSize[0x0078])
	 */
	struct FPlayerSellItemTelemetryEvent : public FPlayerItemTransactionTelemetryEvent
	{
	public:
		int32_t                                                    Value;                                                   // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x007C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerPurchaseItemTelemetryEvent
	 * Size -> 0x0008 (FullSize[0x0080] - InheritedSize[0x0078])
	 */
	struct FPlayerPurchaseItemTelemetryEvent : public FPlayerItemTransactionTelemetryEvent
	{
	public:
		int32_t                                                    Value;                                                   // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x007C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ItemStatDetails
	 * Size -> 0x0018
	 */
	struct FItemStatDetails
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IOM7[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ItemUpgradeDetails
	 * Size -> 0x0020
	 */
	struct FItemUpgradeDetails
	{
	public:
		class FString                                              UpgradeName;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UpgradeType;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.VerboseItemTelemetryDetails
	 * Size -> 0x0020 (FullSize[0x0078] - InheritedSize[0x0058])
	 */
	struct FVerboseItemTelemetryDetails : public FItemTelemetryDetails
	{
	public:
		TArray<struct FItemStatDetails>                            Stats;                                                   // 0x0058(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FItemUpgradeDetails>                         Upgrades;                                                // 0x0068(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerFlyingKickAttackTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
	 */
	struct FPlayerFlyingKickAttackTelemetryEvent : public FPlayerAttackTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.PlayerStandardKickAttackTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
	 */
	struct FPlayerStandardKickAttackTelemetryEvent : public FPlayerAttackTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.PlayerLevelUpTelemetryEvent
	 * Size -> 0x0030 (FullSize[0x0040] - InheritedSize[0x0010])
	 */
	struct FPlayerLevelUpTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		int32_t                                                    Level;                                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentXP;                                               // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NextLevelXP;                                             // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4LE6[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTelemetryActorID                                   PlayerID;                                                // 0x0020(0x0020) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerLifetimeTelemetryEvent
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FPlayerLifetimeTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              UniqueId;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                              TelemetryFriendlyUsername;                               // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.PlayerFailedTelemetryEvent
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	struct FPlayerFailedTelemetryEvent : public FPlayerLifetimeTelemetryEvent
	{
	public:
		class FString                                              Reason;                                                  // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.PlayerRestartTelemetryEvent
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	struct FPlayerRestartTelemetryEvent : public FPlayerLifetimeTelemetryEvent
	{
	public:
		struct FTelemetryActorID                                   RestartedActor;                                          // 0x0030(0x0020) NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.PlayerLogoutTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FPlayerLogoutTelemetryEvent : public FPlayerLifetimeTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.PlayerLoginTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FPlayerLoginTelemetryEvent : public FPlayerLifetimeTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.PlayerMinigameParams
	 * Size -> 0x0010
	 */
	struct FPlayerMinigameParams
	{
	public:
		TWeakObjectPtr<class ADIPlayerCharacter>                   OwningPlayer;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               EnemyActor;                                              // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ModularRotationModeOffsetFrom
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FModularRotationModeOffsetFrom : public FModularRotationModeBase
	{
	public:
		unsigned char                                              UnknownData_EUXQ[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ModularRotationModeRootMotionDrivenTurnOnSpot
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FModularRotationModeRootMotionDrivenTurnOnSpot : public FModularRotationModeBase
	{
	public:
		unsigned char                                              UnknownData_FA4P[0x20];                                  // 0x0008(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ModularRotationModeCatchUp
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FModularRotationModeCatchUp : public FModularRotationModeBase
	{
	public:
		unsigned char                                              UnknownData_B280[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ModularRotationModeDirectInput
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FModularRotationModeDirectInput : public FModularRotationModeBase
	{	};

	/**
	 * ScriptStruct DeadIsland.ModularRotationModeCopyCapsule
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FModularRotationModeCopyCapsule : public FModularRotationModeBase
	{	};

	/**
	 * ScriptStruct DeadIsland.PlayerRangedAttackTelemetryEvent
	 * Size -> 0x0028 (FullSize[0x0120] - InheritedSize[0x00F8])
	 */
	struct FPlayerRangedAttackTelemetryEvent : public FPlayerAttackTelemetryEvent
	{
	public:
		struct FAmmoInfo                                           AmmoInformation;                                         // 0x00F8(0x000C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1Z3D[0x4];                                   // 0x0104(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                SelectedFireMode;                                        // 0x0108(0x0018) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerStartPositionRow
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FPlayerStartPositionRow : public FTableRowBase
	{
	public:
		TArray<struct FTransform>                                  StartPositionList;                                       // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		class FString                                              IdentifierString;                                        // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerStartPositionManagerDefinition
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FPlayerStartPositionManagerDefinition : public FManagerDefinition
	{	};

	/**
	 * ScriptStruct DeadIsland.CharacterArchetypeTelemetryEvent
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FCharacterArchetypeTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              Archetype;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.CharacterLevelTelemetryEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FCharacterLevelTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		int32_t                                                    Level;                                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_D3OO[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.PlayerSynchronizationManagerDefinition
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FPlayerSynchronizationManagerDefinition : public FManagerDefinition
	{	};

	/**
	 * ScriptStruct DeadIsland.PlayerTeleportTrackingInfo
	 * Size -> 0x0048
	 */
	struct FPlayerTeleportTrackingInfo
	{
	public:
		unsigned char                                              UnknownData_NESY[0x38];                                  // 0x0000(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnRequestCompleted;                                      // 0x0038(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerThrowableItemAttackTelemtryEvent
	 * Size -> 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
	 */
	struct FPlayerThrowableItemAttackTelemtryEvent : public FPlayerAttackTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.PlayerWeaponEquippedTelemetryEvent
	 * Size -> 0x00B8 (FullSize[0x00C8] - InheritedSize[0x0010])
	 */
	struct FPlayerWeaponEquippedTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FTelemetryActorID                                   PlayerID;                                                // 0x0010(0x0020) NativeAccessSpecifierPublic
		class FString                                              WeaponName;                                              // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WeaponType;                                              // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVerboseItemTelemetryDetails                        WeaponDetails;                                           // 0x0050(0x0078) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PlayerWeaponUnequippedTelemetryEvent
	 * Size -> 0x00A0 (FullSize[0x00B0] - InheritedSize[0x0010])
	 */
	struct FPlayerWeaponUnequippedTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FTelemetryActorID                                   PlayerID;                                                // 0x0010(0x0020) NativeAccessSpecifierPublic
		class FString                                              WeaponName;                                              // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WeaponType;                                              // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FItemTelemetryDetails                               WeaponDetails;                                           // 0x0050(0x0058) NativeAccessSpecifierPublic
		float                                                      TotalActiveTime;                                         // 0x00A8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PT5D[0x4];                                   // 0x00AC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SelectionFrequencyContext
	 * Size -> 0x0060
	 */
	struct FSelectionFrequencyContext
	{
	public:
		struct FUIDelegateOnActorJustDamagedData                   DamageData;                                              // 0x0000(0x0060) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.PopupTextAnimationValueParams
	 * Size -> 0x0028
	 */
	struct FPopupTextAnimationValueParams
	{
	public:
		unsigned char                                              UnknownData_MJ8O[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.JournalOrStoryline
	 * Size -> 0x0010
	 */
	struct FJournalOrStoryline
	{
	public:
		class UUIJournalStoryline*                                 Storyline;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UJournalEntry*                                       Journal;                                                 // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.QuestOrObjective
	 * Size -> 0x0008
	 */
	struct FQuestOrObjective
	{
	public:
		class UDIQuestData*                                        Quest;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.QuestJournalEntry
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FQuestJournalEntry : public FTableRowBase
	{
	public:
		struct FJournalOrStoryline                                 JournalOrStoryline;                                      // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FQuestOrObjective                                   QuestOrObjective;                                        // 0x0018(0x0008) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ClientCharacterProfileQuestStats
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FClientCharacterProfileQuestStats : public FClientCharacterProfileData
	{
	public:
		unsigned char                                              UnknownData_KW7E[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.TableRowQuestGiver
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTableRowQuestGiver : public FTableRowBase
	{
	public:
		class FText                                                QuestGiverDisplayName;                                   // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.CosmeticEffectsIDList
	 * Size -> 0x0010
	 */
	struct FCosmeticEffectsIDList
	{
	public:
		TArray<struct FCosmeticEffectsID>                          EffectIDs;                                               // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.RangedWeaponStatData
	 * Size -> 0x0044
	 */
	struct FRangedWeaponStatData
	{
	public:
		unsigned char                                              UnknownData_D7AX[0x44];                                  // 0x0000(0x0044) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RangedWeaponsModuleTickFunction
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	struct FRangedWeaponsModuleTickFunction : public FTickFunction
	{
	public:
		unsigned char                                              UnknownData_R3EN[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RecipeRequirement
	 * Size -> 0x0010
	 */
	struct FRecipeRequirement
	{
	public:
		class UItemArchetype*                                      RequiredItemType;                                        // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RequiredCount;                                           // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FT3N[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RecipeRequirementStatus
	 * Size -> 0x0018
	 */
	struct FRecipeRequirementStatus
	{
	public:
		struct FRecipeRequirement                                  Requirement;                                             // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    CurrentCount;                                            // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZDCS[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ArchetypeDelegateInfo
	 * Size -> 0x0010
	 */
	struct FArchetypeDelegateInfo
	{
	public:
		class UItemArchetype*                                      ItemArchetype;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6D1W[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RootMotionSource_AttackCorrection
	 * Size -> 0x0028 (FullSize[0x00C0] - InheritedSize[0x0098])
	 */
	struct FRootMotionSource_AttackCorrection : public FRootMotionSource
	{
	public:
		unsigned char                                              UnknownData_TGH9[0x8];                                   // 0x0098(0x0008) Fix Super Size
		unsigned char                                              UnknownData_O8UO[0x20];                                  // 0x00A0(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RootMotionSource_CurveMovement
	 * Size -> 0x0028 (FullSize[0x00C0] - InheritedSize[0x0098])
	 */
	struct FRootMotionSource_CurveMovement : public FRootMotionSource
	{
	public:
		class UCurveVector*                                        MovementCurve;                                           // 0x0098(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x00A0(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             AxisScalars;                                             // 0x00AC(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3BK6[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RootMotionSource_FixedErrorCorrection
	 * Size -> 0x00A8 (FullSize[0x0140] - InheritedSize[0x0098])
	 */
	struct FRootMotionSource_FixedErrorCorrection : public FRootMotionSource
	{
	public:
		unsigned char                                              UnknownData_HUTZ[0x8];                                   // 0x0098(0x0008) Fix Super Size
		struct FTransform                                          StartTransform;                                          // 0x00A0(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTransform                                          TargetTransform;                                         // 0x00D0(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RDF9[0x18];                                  // 0x0100(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             CurrentLocation;                                         // 0x0118(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             DesiredLocation;                                         // 0x0124(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             RequiredAngularVelocity;                                 // 0x0130(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HUHU[0x4];                                   // 0x013C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RootMotionSource_ServerAppliedForce
	 * Size -> 0x0018 (FullSize[0x00B0] - InheritedSize[0x0098])
	 */
	struct FRootMotionSource_ServerAppliedForce : public FRootMotionSource
	{
	public:
		struct FVector                                             Force;                                                   // 0x0098(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0VHE[0xC];                                   // 0x00A4(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.RootMotionSource_Steering
	 * Size -> 0x0028 (FullSize[0x00C0] - InheritedSize[0x0098])
	 */
	struct FRootMotionSource_Steering : public FRootMotionSource
	{
	public:
		unsigned char                                              UnknownData_NKHQ[0x8];                                   // 0x0098(0x0008) Fix Super Size
		unsigned char                                              UnknownData_77TZ[0x20];                                  // 0x00A0(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ScopedGameEventStateLifetimeWrapper
	 * Size -> 0x00F0
	 */
	struct FScopedGameEventStateLifetimeWrapper
	{
	public:
		unsigned char                                              UnknownData_9EWI[0x60];                                  // 0x0000(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FScopedGameEventState                               ScopedState;                                             // 0x0060(0x0088) Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YPVB[0x8];                                   // 0x00E8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ScrappingResult
	 * Size -> 0x0018
	 */
	struct FScrappingResult
	{
	public:
		struct FSerialisableLootType                               LootType;                                                // 0x0000(0x0010) NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    PreScrapAmount;                                          // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1843[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_OnItemScrapped
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_OnItemScrapped : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_2JAJ[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ClientCharacterShopPurchaseHistory
	 * Size -> 0x0020
	 */
	struct FClientCharacterShopPurchaseHistory
	{
	public:
		unsigned char                                              UnknownData_HT9R[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SkillEffectsUIData
	 * Size -> 0x0001
	 */
	struct FSkillEffectsUIData
	{
	public:
		bool                                                       bHasAutophage;                                           // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SkillUnlockedTelemetryEvent
	 * Size -> 0x0030 (FullSize[0x0040] - InheritedSize[0x0010])
	 */
	struct FSkillUnlockedTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              SkillName;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SkillSlotCategoryName;                                   // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SkillSlotSubCategoryName;                                // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SkillSlotsTelemetryEvent
	 * Size -> 0x0038 (FullSize[0x0048] - InheritedSize[0x0010])
	 */
	struct FSkillSlotsTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              SkillName;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SkillSlotCategoryName;                                   // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SkillSlotSubCategoryName;                                // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SkillSlotIndex;                                          // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E95H[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SkillRemovedFromSlotTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	struct FSkillRemovedFromSlotTelemetryEvent : public FSkillSlotsTelemetryEvent
	{	};

	/**
	 * ScriptStruct DeadIsland.SkillAssignedToSlotTelemetryEvent
	 * Size -> 0x0010 (FullSize[0x0058] - InheritedSize[0x0048])
	 */
	struct FSkillAssignedToSlotTelemetryEvent : public FSkillSlotsTelemetryEvent
	{
	public:
		class FString                                              TransactionType;                                         // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SkillTreeTierActivateResponse
	 * Size -> 0x0030
	 */
	struct FSkillTreeTierActivateResponse
	{
	public:
		class USkillTreeSkill*                                     SkillToPurchase;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PreviousSkillPoints;                                     // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentSkillPoints;                                      // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class USkillTreeSkill*>                             ActivatedSkills;                                         // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class USkillTreeSkill*>                             DeactivatedSkills;                                       // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SkillTreeDeactivateResponse
	 * Size -> 0x0020
	 */
	struct FSkillTreeDeactivateResponse
	{
	public:
		ESkillTreeDeactivateResult                                 Result;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1GUY[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PreviousSkillPoints;                                     // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentSkillPoints;                                      // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsRefund;                                               // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RFRW[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class USkillTreeSkill*>                             RefundedSkills;                                          // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SkillTreePurchaseResponse
	 * Size -> 0x0020
	 */
	struct FSkillTreePurchaseResponse
	{
	public:
		ESkillTreePurchaseResult                                   Result;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_60O3[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PreviousSkillPoints;                                     // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentSkillPoints;                                      // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_83P0[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class USkillTreeSkill*>                             DeactivatedSkills;                                       // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.SkillTreeTelemetryEvent
	 * Size -> 0x0038 (FullSize[0x0048] - InheritedSize[0x0010])
	 */
	struct FSkillTreeTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		class FString                                              SkillTreeName;                                           // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SkillName;                                               // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   TotalPointsSpent;                                        // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   PointsSpentSinceLastRespec;                              // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           SkillUIPositionNormalized;                               // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TierPage;                                                // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H29N[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.SkillTreeTierGroupList
	 * Size -> 0x0010
	 */
	struct FSkillTreeTierGroupList
	{
	public:
		TArray<class USkillTreeTierGroup*>                         TierGroupList;                                           // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_StaminaFractionReachedZero
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_StaminaFractionReachedZero : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_Y8YO[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.StartingHealthDataTableRow
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FStartingHealthDataTableRow : public FTableRowBase
	{
	public:
		float                                                      HealthFractionMinimum;                                   // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HealthFractionMaximum;                                   // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.StateBlockInRadiusSettings
	 * Size -> 0x0014
	 */
	struct FStateBlockInRadiusSettings
	{
	public:
		ETransmittableStatus                                       StatusType;                                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R6BG[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BlockRadius;                                             // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BlockReason;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlockDuration;                                           // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_OnStatChanged
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_OnStatChanged : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_ADO5[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_OwnerInstigatedStatusEffect
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_OwnerInstigatedStatusEffect : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_0ASO[0x20];                                  // 0x0008(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.StoryModeFilter
	 * Size -> 0x0000 (FullSize[0x0001] - InheritedSize[0x0001])
	 */
	struct FStoryModeFilter : public FManagerFilter
	{	};

	/**
	 * ScriptStruct DeadIsland.ThresholdTrackingParams
	 * Size -> 0x0040
	 */
	struct FThresholdTrackingParams
	{
	public:
		bool                                                       bOnlyRequiresDamageOrStabilityRequirementForSuccess;     // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FSNX[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DamageRequiredAsHealthPortion;                           // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StabilityDamageAsStabilityPortionRequired;               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AllotedTimePeriod;                                       // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<EFactionReaction>                                   FactionReactions;                                        // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      DamageTypes;                                             // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<EImpactGameplayCategory>                            ImpactCatagories;                                        // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.ThrowingWeaponPropertiesEntryRow
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FThrowingWeaponPropertiesEntryRow : public FTableRowBase
	{
	public:
		class FText                                                UIText;                                                  // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.TraversalNavLinkComponentInstanceData
	 * Size -> 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
	 */
	struct FTraversalNavLinkComponentInstanceData : public FCustomNavLinkComponentInstanceData
	{	};

	/**
	 * ScriptStruct DeadIsland.TraversalGenerationSingleSweepInfo
	 * Size -> 0x003C
	 */
	struct FTraversalGenerationSingleSweepInfo
	{
	public:
		struct FVector                                             SweepStart;                                              // 0x0000(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SweepEnd;                                                // 0x000C(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SweepRadius;                                             // 0x0018(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSweepHit;                                               // 0x001C(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X2VE[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             SweepHitLocation;                                        // 0x0020(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SweepHitContactPoint;                                    // 0x002C(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              SweepDrawColour;                                         // 0x0038(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.TraversalGenerationFailureInfo
	 * Size -> 0x0080
	 */
	struct FTraversalGenerationFailureInfo
	{
	public:
		ETraversalGenerationFailureStage                           FailedAtStage;                                           // 0x0000(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_50GL[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             RequestedLocation;                                       // 0x0004(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             RequestedDirection;                                      // 0x0010(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ProjectedRequestedLocation;                              // 0x001C(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             StartLocation;                                           // 0x0028(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             EndLocation;                                             // 0x0034(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartLocationVerticalPhysicalToNavMeshOffset;            // 0x0040(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndLocationVerticalPhysicalToNavMeshOffset;              // 0x0044(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVector>                                     FailedGaps;                                              // 0x0048(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		struct FTraversalMetrics                                   Metrics;                                                 // 0x0058(0x0024) Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIsReverseLink;                                          // 0x007C(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OPK4[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_OnRequestShowTutorial
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_OnRequestShowTutorial : public FGameplayEventData
	{
	public:
		class FString                                              TutorialData;                                            // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsPathString;                                           // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XP69[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.UIChallengeLinkRuntime
	 * Size -> 0x0010
	 */
	struct FUIChallengeLinkRuntime
	{
	public:
		class UBaseChallengeRuntimeObject*                         Challenge;                                               // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IT7T[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.UIDamageNumberRequest
	 * Size -> 0x0050
	 */
	struct FUIDamageNumberRequest
	{
	public:
		class UDSDamageType*                                       DSDamageType;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AController*                                         InstigatedBy;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UDSDamageType*>                               ResistedDSDamageTypes;                                   // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YIDB[0x30];                                  // 0x0020(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.ViewTargetRequest
	 * Size -> 0x00C0
	 */
	struct FViewTargetRequest
	{
	public:
		struct FTargetPointInfo                                    TargetPointInfo;                                         // 0x0000(0x0050) NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FViewTargetParams                                   Params;                                                  // 0x0050(0x003C) NoDestructor, NativeAccessSpecifierPublic
		struct FGuid                                               Guid;                                                    // 0x008C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x009C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeAdded;                                               // 0x00A0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BZO8[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UActionDefinition*                                   LifetimeActionDef;                                       // 0x00A8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ViewTargetName;                                          // 0x00B0(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.VoiceChatManagerDefinition
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FVoiceChatManagerDefinition : public FManagerDefinition
	{	};

	/**
	 * ScriptStruct DeadIsland.VoiceCommandEntry
	 * Size -> 0x0028
	 */
	struct FVoiceCommandEntry
	{
	public:
		unsigned char                                              UnknownData_OTG7[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.VoiceCommandWaypointGoadTypeData
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FVoiceCommandWaypointGoadTypeData : public FBaseSlotData
	{	};

	/**
	 * ScriptStruct DeadIsland.WaypointTypeRow
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FWaypointTypeRow : public FTableRowBase
	{
	public:
		class FString                                              WaypointQueryType;                                       // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.WaypointData
	 * Size -> 0x0028
	 */
	struct FWaypointData
	{
	public:
		unsigned char                                              UnknownData_4M1R[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USectorBreadcrumbTrail*                              BreadcrumbTrail;                                         // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GA02[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.WeaponBrokeTelemetryEvent
	 * Size -> 0x0058 (FullSize[0x0068] - InheritedSize[0x0010])
	 */
	struct FWeaponBrokeTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FItemTelemetryDetails                               WeaponDetails;                                           // 0x0010(0x0058) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.WeaponUIEntryRow
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FWeaponUIEntryRow : public FTableRowBase
	{
	public:
		class FText                                                DisplayType;                                             // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                DisplayDescription;                                      // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.GameplayEventData_WeaponLevelMatched
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FGameplayEventData_WeaponLevelMatched : public FGameplayEventData
	{
	public:
		unsigned char                                              UnknownData_53HU[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.WeaponLevelMatchTelemetryEvent
	 * Size -> 0x0060 (FullSize[0x0070] - InheritedSize[0x0010])
	 */
	struct FWeaponLevelMatchTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FItemTelemetryDetails                               WeaponDetails;                                           // 0x0010(0x0058) NativeAccessSpecifierPublic
		int32_t                                                    NewLevel;                                                // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LevelMatchCost;                                          // 0x006C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct DeadIsland.WeaponRepairTelemetryEvent
	 * Size -> 0x0060 (FullSize[0x0070] - InheritedSize[0x0010])
	 */
	struct FWeaponRepairTelemetryEvent : public FDSOnline_FTelemetryEvent
	{
	public:
		struct FItemTelemetryDetails                               WeaponDetails;                                           // 0x0010(0x0058) NativeAccessSpecifierPublic
		int32_t                                                    WeaponRepairCost;                                        // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VLD1[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.WeaponIKTableRowBase
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FWeaponIKTableRowBase : public FTableRowBase
	{	};

	/**
	 * ScriptStruct DeadIsland.CarryableHandIKData
	 * Size -> 0x0068 (FullSize[0x0070] - InheritedSize[0x0008])
	 */
	struct FCarryableHandIKData : public FWeaponIKTableRowBase
	{
	public:
		unsigned char                                              UnknownData_DS47[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          LeftHandIK;                                              // 0x0010(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
		struct FTransform                                          RightHandIK;                                             // 0x0040(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.WeaponHandIKData
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FWeaponHandIKData : public FWeaponIKTableRowBase
	{
	public:
		unsigned char                                              UnknownData_GTCP[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          LeftHandIK;                                              // 0x0010(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct DeadIsland.WeaponOffsetData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FWeaponOffsetData : public FTableRowBase
	{
	public:
		struct FVector                                             Offset;                                                  // 0x0008(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9QGV[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.WorldMapLevelSettings
	 * Size -> 0x0058
	 */
	struct FWorldMapLevelSettings
	{
	public:
		struct FSoftObjectPath                                     MapTexture;                                              // 0x0000(0x0018) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PS6C[0x40];                                  // 0x0018(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct DeadIsland.TaskStatus
	 * Size -> 0x0020
	 */
	struct FTaskStatus
	{
	public:
		int32_t                                                    Requested;                                               // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PreSpawned;                                              // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Failed;                                                  // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Succeded;                                                // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      RequestedZombies;                                        // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
	};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
